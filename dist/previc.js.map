{"version":3,"file":"previc.js","mappings":";2BAAA,OAKA,SAAUA,EAAQC,EAAUC,EAAYC,GACtC,aAEF,IA+FIC,EA/FAC,EAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,EAAeL,EAASM,cAAc,OAItCC,EAAQC,KAAKD,MACbE,EAAMD,KAAKC,IACXC,EAAMC,KAAKD,IASf,SAASE,EAAkBC,EAAIC,EAASC,GACpC,OAAOC,WAAWC,EAAOJ,EAAIE,GAAUD,EAC3C,CAWA,SAASI,EAAeC,EAAKN,EAAIE,GAC7B,QAAIK,MAAMC,QAAQF,KACdG,EAAKH,EAAKJ,EAAQF,GAAKE,IAChB,EAGf,CAQA,SAASO,EAAKC,EAAKC,EAAUT,GACzB,IAAIU,EAEJ,GAAKF,EAIL,GAAIA,EAAIG,QACJH,EAAIG,QAAQF,EAAUT,QACnB,GAAIQ,EAAII,SAAWzB,EAEtB,IADAuB,EAAI,EACGA,EAAIF,EAAII,QACXH,EAASI,KAAKb,EAASQ,EAAIE,GAAIA,EAAGF,GAClCE,SAGJ,IAAKA,KAAKF,EACNA,EAAIM,eAAeJ,IAAMD,EAASI,KAAKb,EAASQ,EAAIE,GAAIA,EAAGF,EAGvE,CASA,SAASO,EAAUC,EAAQC,EAAMC,GAC7B,IAAIC,EAAqB,sBAAwBF,EAAO,KAAOC,EAAU,SACzE,OAAO,WACH,IAAIE,EAAI,IAAIC,MAAM,mBACdC,EAAQF,GAAKA,EAAEE,MAAQF,EAAEE,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,EAAMxC,EAAOyC,UAAYzC,EAAOyC,QAAQC,MAAQ1C,EAAOyC,QAAQD,KAInE,OAHIA,GACAA,EAAIX,KAAK7B,EAAOyC,QAASN,EAAoBG,GAE1CN,EAAOW,MAAMC,KAAMC,UAC9B,CACJ,CAWIzC,EADyB,mBAAlB0C,OAAO1C,OACL,SAAgB2C,GACrB,GAAIA,IAAW5C,GAAwB,OAAX4C,EACxB,MAAM,IAAIC,UAAU,8CAIxB,IADA,IAAIC,EAASH,OAAOC,GACXG,EAAQ,EAAGA,EAAQL,UAAUjB,OAAQsB,IAAS,CACnD,IAAIC,EAASN,UAAUK,GACvB,GAAIC,IAAWhD,GAAwB,OAAXgD,EACxB,IAAK,IAAIC,KAAWD,EACZA,EAAOrB,eAAesB,KACtBH,EAAOG,GAAWD,EAAOC,GAIzC,CACA,OAAOH,CACX,EAESH,OAAO1C,OAWpB,IAAIiD,EAAStB,GAAU,SAAgBuB,EAAMC,EAAKC,GAG9C,IAFA,IAAIC,EAAOX,OAAOW,KAAKF,GACnB7B,EAAI,EACDA,EAAI+B,EAAK7B,UACP4B,GAAUA,GAASF,EAAKG,EAAK/B,MAAQvB,KACtCmD,EAAKG,EAAK/B,IAAM6B,EAAIE,EAAK/B,KAE7BA,IAEJ,OAAO4B,CACX,GAAG,SAAU,iBASTE,EAAQzB,GAAU,SAAeuB,EAAMC,GACvC,OAAOF,EAAOC,EAAMC,GAAK,EAC7B,GAAG,QAAS,iBAQZ,SAASG,EAAQC,EAAOC,EAAMC,GAC1B,IACIC,EADAC,EAAQH,EAAKI,WAGjBF,EAASH,EAAMK,UAAYlB,OAAOmB,OAAOF,IAClCG,YAAcP,EACrBG,EAAOK,OAASJ,EAEZF,GACAzD,EAAO0D,EAAQD,EAEvB,CAQA,SAAS3C,EAAOJ,EAAIE,GAChB,OAAO,WACH,OAAOF,EAAG6B,MAAM3B,EAAS6B,UAC7B,CACJ,CASA,SAASuB,EAASC,EAAKC,GACnB,MA1LgB,mBA0LLD,EACAA,EAAI1B,MAAM2B,GAAOA,EAAK,IAAkBnE,EAAWmE,GAEvDD,CACX,CAQA,SAASE,EAAYC,EAAMC,GACvB,OAAQD,IAASrE,EAAasE,EAAOD,CACzC,CAQA,SAASE,EAAkB3B,EAAQ4B,EAAOC,GACtCrD,EAAKsD,EAASF,IAAQ,SAASG,GAC3B/B,EAAOgC,iBAAiBD,EAAMF,GAAS,EAC3C,GACJ,CAQA,SAASI,EAAqBjC,EAAQ4B,EAAOC,GACzCrD,EAAKsD,EAASF,IAAQ,SAASG,GAC3B/B,EAAOkC,oBAAoBH,EAAMF,GAAS,EAC9C,GACJ,CASA,SAASM,EAAUC,EAAMC,GACrB,KAAOD,GAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,UAChB,CACA,OAAO,CACX,CAQA,SAASC,EAAMC,EAAKC,GAChB,OAAOD,EAAIE,QAAQD,IAAS,CAChC,CAOA,SAASX,EAASU,GACd,OAAOA,EAAIG,OAAOC,MAAM,OAC5B,CASA,SAASC,EAAQrC,EAAKiC,EAAMK,GACxB,GAAItC,EAAIkC,UAAYI,EAChB,OAAOtC,EAAIkC,QAAQD,GAGnB,IADA,IAAI9D,EAAI,EACDA,EAAI6B,EAAI3B,QAAQ,CACnB,GAAKiE,GAAatC,EAAI7B,GAAGmE,IAAcL,IAAWK,GAAatC,EAAI7B,KAAO8D,EACtE,OAAO9D,EAEXA,GACJ,CACA,OAAQ,CAEhB,CAOA,SAASoE,EAAQtE,GACb,OAAOH,MAAM2C,UAAU+B,MAAMlE,KAAKL,EAAK,EAC3C,CASA,SAASwE,EAAYzC,EAAK0C,EAAKC,GAK3B,IAJA,IAAIC,EAAU,GACVC,EAAS,GACT1E,EAAI,EAEDA,EAAI6B,EAAI3B,QAAQ,CACnB,IAAIyC,EAAM4B,EAAM1C,EAAI7B,GAAGuE,GAAO1C,EAAI7B,GAC9BkE,EAAQQ,EAAQ/B,GAAO,GACvB8B,EAAQE,KAAK9C,EAAI7B,IAErB0E,EAAO1E,GAAK2C,EACZ3C,GACJ,CAYA,OAVIwE,IAIIC,EAHCF,EAGSE,EAAQD,MAAK,SAAyBI,EAAGC,GAC/C,OAAOD,EAAEL,GAAOM,EAAEN,EACtB,IAJUE,EAAQD,QAQnBC,CACX,CAQA,SAASK,EAAShF,EAAKiF,GAKnB,IAJA,IAAIC,EAAQC,EACRC,EAAYH,EAAS,GAAGI,cAAgBJ,EAASV,MAAM,GAEvDrE,EAAI,EACDA,EAAIrB,EAAgBuB,QAAQ,CAI/B,IAFA+E,GADAD,EAASrG,EAAgBqB,IACPgF,EAASE,EAAYH,KAE3BjF,EACR,OAAOmF,EAEXjF,GACJ,CACA,OAAOvB,CACX,CAMA,IAAI2G,EAAY,EAUhB,SAASC,EAAoBC,GACzB,IAAIC,EAAMD,EAAQE,eAAiBF,EACnC,OAAQC,EAAIE,aAAeF,EAAIG,cAAgBpH,CACnD,CAEA,IAEIqH,EAAiB,iBAAkBrH,EACnCsH,EAAyBd,EAASxG,EAAQ,kBAAoBG,EAC9DoH,EAAqBF,GAJN,wCAIoCG,KAAKC,UAAUC,WAElEC,EAAmB,QAEnBC,EAAmB,QAoBnBC,EAAW,CAAC,IAAK,KACjBC,EAAkB,CAAC,UAAW,WASlC,SAASC,EAAMC,EAASC,GACpB,IAAIC,EAAOtF,KACXA,KAAKoF,QAAUA,EACfpF,KAAKqF,SAAWA,EAChBrF,KAAKoE,QAAUgB,EAAQhB,QACvBpE,KAAKG,OAASiF,EAAQG,QAAQC,YAI9BxF,KAAKyF,WAAa,SAASC,GACnBlE,EAAS4D,EAAQG,QAAQI,OAAQ,CAACP,KAClCE,EAAKtD,QAAQ0D,EAErB,EAEA1F,KAAK4F,MAET,CA0DA,SAASC,EAAaT,EAASU,EAAWC,GACtC,IAAIC,EAAcD,EAAME,SAASjH,OAC7BkH,EAAqBH,EAAMI,gBAAgBnH,OAC3CoH,EAvGU,EAuGCN,GAA4BE,EAAcE,GAAuB,EAC5EG,EAAuB,GAAZP,GAA2CE,EAAcE,GAAuB,EAE/FH,EAAMK,UAAYA,EAClBL,EAAMM,UAAYA,EAEdD,IACAhB,EAAQkB,QAAU,CAAC,GAKvBP,EAAMD,UAAYA,EAiBtB,SAA0BV,EAASW,GAC/B,IAAIO,EAAUlB,EAAQkB,QAClBL,EAAWF,EAAME,SACjBM,EAAiBN,EAASjH,OAGzBsH,EAAQE,aACTF,EAAQE,WAAaC,EAAqBV,IAI1CQ,EAAiB,IAAMD,EAAQI,cAC/BJ,EAAQI,cAAgBD,EAAqBV,GACnB,IAAnBQ,IACPD,EAAQI,eAAgB,GAG5B,IAAIF,EAAaF,EAAQE,WACrBE,EAAgBJ,EAAQI,cACxBC,EAAeD,EAAgBA,EAAcE,OAASJ,EAAWI,OAEjEA,EAASb,EAAMa,OAASC,EAAUZ,GACtCF,EAAMe,UAAY/I,IAClBgI,EAAMgB,UAAYhB,EAAMe,UAAYN,EAAWM,UAE/Cf,EAAMiB,MAAQC,EAASN,EAAcC,GACrCb,EAAMmB,SAAWC,EAAYR,EAAcC,GA0B/C,SAAwBN,EAASP,GAC7B,IAAIa,EAASb,EAAMa,OACfQ,EAASd,EAAQe,aAAe,CAAC,EACjCC,EAAYhB,EAAQgB,WAAa,CAAC,EAClCC,EAAYjB,EAAQiB,WAAa,CAAC,EA5LxB,IA8LVxB,EAAMD,WA5LE,IA4L2ByB,EAAUzB,YAC7CwB,EAAYhB,EAAQgB,UAAY,CAC5BE,EAAGD,EAAUE,QAAU,EACvBC,EAAGH,EAAUI,QAAU,GAG3BP,EAASd,EAAQe,YAAc,CAC3BG,EAAGZ,EAAOY,EACVE,EAAGd,EAAOc,IAIlB3B,EAAM0B,OAASH,EAAUE,GAAKZ,EAAOY,EAAIJ,EAAOI,GAChDzB,EAAM4B,OAASL,EAAUI,GAAKd,EAAOc,EAAIN,EAAOM,EACpD,CA5CIE,CAAetB,EAASP,GACxBA,EAAM8B,gBAAkBC,EAAa/B,EAAM0B,OAAQ1B,EAAM4B,QAEzD,IAuNcI,EAAOC,EAvNjBC,EAAkBC,EAAYnC,EAAMgB,UAAWhB,EAAM0B,OAAQ1B,EAAM4B,QACvE5B,EAAMoC,iBAAmBF,EAAgBT,EACzCzB,EAAMqC,iBAAmBH,EAAgBP,EACzC3B,EAAMkC,gBAAmBnK,EAAImK,EAAgBT,GAAK1J,EAAImK,EAAgBP,GAAMO,EAAgBT,EAAIS,EAAgBP,EAEhH3B,EAAMsC,MAAQ3B,GAkNAqB,EAlNyBrB,EAAcT,SAmN9CkB,GADca,EAlN0C/B,GAmNxC,GAAI+B,EAAI,GAAI9C,GAAmBiC,EAAYY,EAAM,GAAIA,EAAM,GAAI7C,IAnNX,EAC3Ea,EAAMuC,SAAW5B,EAsMrB,SAAqBqB,EAAOC,GACxB,OAAOf,EAASe,EAAI,GAAIA,EAAI,GAAI9C,GAAmB+B,EAASc,EAAM,GAAIA,EAAM,GAAI7C,EACpF,CAxMqCqD,CAAY7B,EAAcT,SAAUA,GAAY,EAEjFF,EAAMyC,YAAelC,EAAQiB,UAAsCxB,EAAME,SAASjH,OAC9EsH,EAAQiB,UAAUiB,YAAezC,EAAME,SAASjH,OAASsH,EAAQiB,UAAUiB,YADtCzC,EAAME,SAASjH,OAwC5D,SAAkCsH,EAASP,GACvC,IAEI0C,EAAUC,EAAWC,EAAWC,EAFhCC,EAAOvC,EAAQwC,cAAgB/C,EAC/BgB,EAAYhB,EAAMe,UAAY+B,EAAK/B,UAGvC,GArNe,GAqNXf,EAAMD,YAA8BiB,EA1NrB,IA0NqD8B,EAAKJ,WAAalL,GAAY,CAClG,IAAIkK,EAAS1B,EAAM0B,OAASoB,EAAKpB,OAC7BE,EAAS5B,EAAM4B,OAASkB,EAAKlB,OAE7BoB,EAAIb,EAAYnB,EAAWU,EAAQE,GACvCe,EAAYK,EAAEvB,EACdmB,EAAYI,EAAErB,EACde,EAAY3K,EAAIiL,EAAEvB,GAAK1J,EAAIiL,EAAErB,GAAMqB,EAAEvB,EAAIuB,EAAErB,EAC3CkB,EAAYd,EAAaL,EAAQE,GAEjCrB,EAAQwC,aAAe/C,CAC3B,MAEI0C,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,EAAYE,EAAKF,UACjBC,EAAYC,EAAKD,UAGrB7C,EAAM0C,SAAWA,EACjB1C,EAAM2C,UAAYA,EAClB3C,EAAM4C,UAAYA,EAClB5C,EAAM6C,UAAYA,CACtB,CAjEII,CAAyB1C,EAASP,GAGlC,IAAI5F,EAASiF,EAAQhB,QACjB9B,EAAUyD,EAAMkD,SAAS9I,OAAQA,KACjCA,EAAS4F,EAAMkD,SAAS9I,QAE5B4F,EAAM5F,OAASA,CACnB,CAhEI+I,CAAiB9D,EAASW,GAG1BX,EAAQ+D,KAAK,eAAgBpD,GAE7BX,EAAQgE,UAAUrD,GAClBX,EAAQkB,QAAQiB,UAAYxB,CAChC,CAyHA,SAASU,EAAqBV,GAK1B,IAFA,IAAIE,EAAW,GACXnH,EAAI,EACDA,EAAIiH,EAAME,SAASjH,QACtBiH,EAASnH,GAAK,CACVuK,QAASzL,EAAMmI,EAAME,SAASnH,GAAGuK,SACjCC,QAAS1L,EAAMmI,EAAME,SAASnH,GAAGwK,UAErCxK,IAGJ,MAAO,CACHgI,UAAW/I,IACXkI,SAAUA,EACVW,OAAQC,EAAUZ,GAClBwB,OAAQ1B,EAAM0B,OACdE,OAAQ5B,EAAM4B,OAEtB,CAOA,SAASd,EAAUZ,GACf,IAAIM,EAAiBN,EAASjH,OAG9B,GAAuB,IAAnBuH,EACA,MAAO,CACHiB,EAAG5J,EAAMqI,EAAS,GAAGoD,SACrB3B,EAAG9J,EAAMqI,EAAS,GAAGqD,UAK7B,IADA,IAAI9B,EAAI,EAAGE,EAAI,EAAG5I,EAAI,EACfA,EAAIyH,GACPiB,GAAKvB,EAASnH,GAAGuK,QACjB3B,GAAKzB,EAASnH,GAAGwK,QACjBxK,IAGJ,MAAO,CACH0I,EAAG5J,EAAM4J,EAAIjB,GACbmB,EAAG9J,EAAM8J,EAAInB,GAErB,CASA,SAAS2B,EAAYnB,EAAWS,EAAGE,GAC/B,MAAO,CACHF,EAAGA,EAAIT,GAAa,EACpBW,EAAGA,EAAIX,GAAa,EAE5B,CAQA,SAASe,EAAaN,EAAGE,GACrB,OAAIF,IAAME,EAzTO,EA6Tb5J,EAAI0J,IAAM1J,EAAI4J,GACPF,EAAI,EA7TE,EACC,EA8TXE,EAAI,EA7TI,EACE,EA6TrB,CASA,SAASP,EAAYoC,EAAIC,EAAIC,GACpBA,IACDA,EAAQxE,GAEZ,IAAIuC,EAAIgC,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B/B,EAAI8B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAEhC,OAAO5L,KAAK6L,KAAMlC,EAAIA,EAAME,EAAIA,EACpC,CASA,SAAST,EAASsC,EAAIC,EAAIC,GACjBA,IACDA,EAAQxE,GAEZ,IAAIuC,EAAIgC,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B/B,EAAI8B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAChC,OAA0B,IAAnB5L,KAAK8L,MAAMjC,EAAGF,GAAW3J,KAAK+L,EACzC,CA3TAzE,EAAM/D,UAAY,CAKdY,QAAS,WAAa,EAKtB4D,KAAM,WACF5F,KAAK6J,MAAQ/H,EAAkB9B,KAAKoE,QAASpE,KAAK6J,KAAM7J,KAAKyF,YAC7DzF,KAAK8J,UAAYhI,EAAkB9B,KAAKG,OAAQH,KAAK8J,SAAU9J,KAAKyF,YACpEzF,KAAK+J,OAASjI,EAAkBqC,EAAoBnE,KAAKoE,SAAUpE,KAAK+J,MAAO/J,KAAKyF,WACxF,EAKAuE,QAAS,WACLhK,KAAK6J,MAAQzH,EAAqBpC,KAAKoE,QAASpE,KAAK6J,KAAM7J,KAAKyF,YAChEzF,KAAK8J,UAAY1H,EAAqBpC,KAAKG,OAAQH,KAAK8J,SAAU9J,KAAKyF,YACvEzF,KAAK+J,OAAS3H,EAAqB+B,EAAoBnE,KAAKoE,SAAUpE,KAAK+J,MAAO/J,KAAKyF,WAC3F,GA2TJ,IAAIwE,EAAkB,CAClBC,UA/Xc,EAgYdC,UA/Xa,EAgYbC,QA/XY,GA0YhB,SAASC,IACLrK,KAAK6J,KATkB,YAUvB7J,KAAK+J,MATiB,oBAWtB/J,KAAKsK,SAAU,EAEfnF,EAAMpF,MAAMC,KAAMC,UACtB,CAEAa,EAAQuJ,EAAYlF,EAAO,CAKvBnD,QAAS,SAAmB0D,GACxB,IAAII,EAAYmE,EAAgBvE,EAAGxD,MA3ZzB,EA8ZN4D,GAAyC,IAAdJ,EAAG6E,SAC9BvK,KAAKsK,SAAU,GA9ZV,EAiaLxE,GAAuC,IAAbJ,EAAG8E,QAC7B1E,EAjaI,GAqaH9F,KAAKsK,UAraF,EAyaJxE,IACA9F,KAAKsK,SAAU,GAGnBtK,KAAKqF,SAASrF,KAAKoF,QAASU,EAAW,CACnCG,SAAU,CAACP,GACXS,gBAAiB,CAACT,GAClB+E,YAAazF,EACbiE,SAAUvD,IAElB,IAGJ,IAAIgF,EAAoB,CACpBC,YAzbc,EA0bdC,YAzba,EA0bbC,UAzbY,EA0bZC,cAzbe,EA0bfC,WA1be,GA8bfC,EAAyB,CACzB,EAAGjG,EACH,EAzciB,MA0cjB,EAAGC,EACH,EAzcoB,UA4cpBiG,GAAyB,cACzBC,GAAwB,sCAa5B,SAASC,KACLnL,KAAK6J,KAAOoB,GACZjL,KAAK+J,MAAQmB,GAEb/F,EAAMpF,MAAMC,KAAMC,WAElBD,KAAKoL,MAASpL,KAAKoF,QAAQkB,QAAQ+E,cAAgB,EACvD,CAjBIjO,EAAOkO,iBAAmBlO,EAAOmO,eACjCN,GAAyB,gBACzBC,GAAwB,6CAiB5BpK,EAAQqK,GAAmBhG,EAAO,CAK9BnD,QAAS,SAAmB0D,GACxB,IAAI0F,EAAQpL,KAAKoL,MACbI,GAAgB,EAEhBC,EAAsB/F,EAAGxD,KAAKwJ,cAAc/L,QAAQ,KAAM,IAC1DmG,EAAY4E,EAAkBe,GAC9BhB,EAAcO,EAAuBtF,EAAG+E,cAAgB/E,EAAG+E,YAE3DkB,EAAWlB,GAAe1F,EAG1B6G,EAAa5I,EAAQoI,EAAO1F,EAAGmG,UAAW,aA/epC,EAkfN/F,IAA0C,IAAdJ,EAAG6E,QAAgBoB,GAC3CC,EAAa,IACbR,EAAM3H,KAAKiC,GACXkG,EAAaR,EAAMpM,OAAS,GAEb,GAAZ8G,IACP0F,GAAgB,GAIhBI,EAAa,IAKjBR,EAAMQ,GAAclG,EAEpB1F,KAAKqF,SAASrF,KAAKoF,QAASU,EAAW,CACnCG,SAAUmF,EACVjF,gBAAiB,CAACT,GAClB+E,YAAaA,EACbxB,SAAUvD,IAGV8F,GAEAJ,EAAMU,OAAOF,EAAY,GAEjC,IAGJ,IAAIG,GAAyB,CACzBC,WAlhBc,EAmhBdC,UAlhBa,EAmhBbC,SAlhBY,EAmhBZC,YAlhBe,GA6hBnB,SAASC,KACLpM,KAAK8J,SATwB,aAU7B9J,KAAK+J,MATwB,4CAU7B/J,KAAKqM,SAAU,EAEflH,EAAMpF,MAAMC,KAAMC,UACtB,CAqCA,SAASqM,GAAuB5G,EAAIxD,GAChC,IAAIqK,EAAMrJ,EAAQwC,EAAG8G,SACjBC,EAAUvJ,EAAQwC,EAAGgH,gBAMzB,OAJW,GAAPxK,IACAqK,EAAMnJ,EAAYmJ,EAAII,OAAOF,GAAU,cAAc,IAGlD,CAACF,EAAKE,EACjB,CA5CA3L,EAAQsL,GAAkBjH,EAAO,CAC7BnD,QAAS,SAAmB0D,GACxB,IAAIxD,EAAO6J,GAAuBrG,EAAGxD,MAOrC,GAjjBU,IA6iBNA,IACAlC,KAAKqM,SAAU,GAGdrM,KAAKqM,QAAV,CAIA,IAAIG,EAAUF,GAAuBrN,KAAKe,KAAM0F,EAAIxD,GAGzC,GAAPA,GAAqCsK,EAAQ,GAAGxN,OAASwN,EAAQ,GAAGxN,QAAW,IAC/EgB,KAAKqM,SAAU,GAGnBrM,KAAKqF,SAASrF,KAAKoF,QAASlD,EAAM,CAC9B+D,SAAUuG,EAAQ,GAClBrG,gBAAiBqG,EAAQ,GACzB/B,YAAa1F,EACbkE,SAAUvD,GAbd,CAeJ,IAoBJ,IAAIkH,GAAkB,CAClBZ,WAvlBc,EAwlBdC,UAvlBa,EAwlBbC,SAvlBY,EAwlBZC,YAvlBe,GAimBnB,SAASU,KACL7M,KAAK8J,SARiB,4CAStB9J,KAAK8M,UAAY,CAAC,EAElB3H,EAAMpF,MAAMC,KAAMC,UACtB,CAyBA,SAAS8M,GAAWrH,EAAIxD,GACpB,IAAI8K,EAAa9J,EAAQwC,EAAG8G,SACxBM,EAAY9M,KAAK8M,UAGrB,GAAW,EAAP5K,GAA2D,IAAtB8K,EAAWhO,OAEhD,OADA8N,EAAUE,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAIlO,EACAoO,EACAR,EAAiBxJ,EAAQwC,EAAGgH,gBAC5BS,EAAuB,GACvBhN,EAASH,KAAKG,OAQlB,GALA+M,EAAgBF,EAAWI,QAAO,SAASC,GACvC,OAAO/K,EAAU+K,EAAMlN,OAAQA,EACnC,IArpBc,IAwpBV+B,EAEA,IADApD,EAAI,EACGA,EAAIoO,EAAclO,QACrB8N,EAAUI,EAAcpO,GAAGmO,aAAc,EACzCnO,IAMR,IADAA,EAAI,EACGA,EAAI4N,EAAe1N,QAClB8N,EAAUJ,EAAe5N,GAAGmO,aAC5BE,EAAqB1J,KAAKiJ,EAAe5N,IAIlC,GAAPoD,UACO4K,EAAUJ,EAAe5N,GAAGmO,YAEvCnO,IAGJ,OAAKqO,EAAqBnO,OAInB,CAEHoE,EAAY8J,EAAcP,OAAOQ,GAAuB,cAAc,GACtEA,QAPJ,CASJ,CAeA,SAASG,KACLnI,EAAMpF,MAAMC,KAAMC,WAElB,IAAI+B,EAAU1D,EAAO0B,KAAKgC,QAAShC,MACnCA,KAAKqN,MAAQ,IAAIR,GAAW7M,KAAKoF,QAASpD,GAC1ChC,KAAKuN,MAAQ,IAAIlD,EAAWrK,KAAKoF,QAASpD,GAE1ChC,KAAKwN,aAAe,KACpBxN,KAAKyN,YAAc,EACvB,CAoCA,SAASC,GAAc5H,EAAW6H,GAnvBhB,EAovBV7H,GACA9F,KAAKwN,aAAeG,EAAUxH,gBAAgB,GAAG8G,WACjDW,GAAa3O,KAAKe,KAAM2N,IACL,GAAZ7H,GACP8H,GAAa3O,KAAKe,KAAM2N,EAEhC,CAEA,SAASC,GAAaD,GAClB,IAAIN,EAAQM,EAAUxH,gBAAgB,GAEtC,GAAIkH,EAAMJ,aAAejN,KAAKwN,aAAc,CACxC,IAAIK,EAAY,CAACrG,EAAG6F,EAAMhE,QAAS3B,EAAG2F,EAAM/D,SAC5CtJ,KAAKyN,YAAYhK,KAAKoK,GACtB,IAAIC,EAAM9N,KAAKyN,YAOfpP,YANsB,WAClB,IAAIS,EAAIgP,EAAIjL,QAAQgL,GAChB/O,GAAK,GACLgP,EAAIhC,OAAOhN,EAAG,EAEtB,GArEY,KAuEhB,CACJ,CAEA,SAASiP,GAAiBJ,GAEtB,IADA,IAAInG,EAAImG,EAAU1E,SAASI,QAAS3B,EAAIiG,EAAU1E,SAASK,QAClDxK,EAAI,EAAGA,EAAIkB,KAAKyN,YAAYzO,OAAQF,IAAK,CAC9C,IAAIkP,EAAIhO,KAAKyN,YAAY3O,GACrBmP,EAAKpQ,KAAKC,IAAI0J,EAAIwG,EAAExG,GAAI0G,EAAKrQ,KAAKC,IAAI4J,EAAIsG,EAAEtG,GAChD,GAAIuG,GA9ES,IA8EeC,GA9Ef,GA+ET,OAAO,CAEf,CACA,OAAO,CACX,CA5KApN,EAAQ+L,GAAY1H,EAAO,CACvBnD,QAAS,SAAoB0D,GACzB,IAAIxD,EAAO0K,GAAgBlH,EAAGxD,MAC1BsK,EAAUO,GAAW9N,KAAKe,KAAM0F,EAAIxD,GACnCsK,GAILxM,KAAKqF,SAASrF,KAAKoF,QAASlD,EAAM,CAC9B+D,SAAUuG,EAAQ,GAClBrG,gBAAiBqG,EAAQ,GACzB/B,YAAa1F,EACbkE,SAAUvD,GAElB,IAwFJ5E,EAAQwM,GAAiBnI,EAAO,CAO5BnD,QAAS,SAAoBoD,EAAS+I,EAAYC,GAC9C,IAAIzC,EAAWyC,EAAU3D,aAAe1F,EACpCsJ,EAAWD,EAAU3D,aAAezF,EAExC,KAAIqJ,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAI5C,EACA+B,GAAczO,KAAKe,KAAMmO,EAAYC,QAClC,GAAIC,GAAWN,GAAiB9O,KAAKe,KAAMoO,GAC9C,OAGJpO,KAAKqF,SAASD,EAAS+I,EAAYC,EATnC,CAUJ,EAKApE,QAAS,WACLhK,KAAKqN,MAAMrD,UACXhK,KAAKuN,MAAMvD,SACf,IAyCJ,IAAIwE,GAAwB5K,EAASlG,EAAa+Q,MAAO,eACrDC,GAAsBF,KAA0BjR,EAGhDoR,GAAuB,UACvBC,GAAoB,OACpBC,GAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,GA4IJ,WACI,IAAKP,GACD,OAAO,EAEX,IAAIQ,EAAW,CAAC,EACZC,EAAc/R,EAAOgS,KAAOhS,EAAOgS,IAAIC,SAO3C,MANA,CAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQtQ,SAAQ,SAAS0C,GAI/EyN,EAASzN,IAAO0N,GAAc/R,EAAOgS,IAAIC,SAAS,eAAgB5N,EACtE,IACOyN,CACX,CAzJuBI,GASvB,SAASC,GAAYnK,EAASoK,GAC1BxP,KAAKoF,QAAUA,EACfpF,KAAKyP,IAAID,EACb,CAEAD,GAAYnO,UAAY,CAKpBqO,IAAK,SAASD,GAENA,GAASb,KACTa,EAAQxP,KAAK0P,WAGbhB,IAAuB1O,KAAKoF,QAAQhB,QAAQqK,OAASQ,GAAiBO,KACtExP,KAAKoF,QAAQhB,QAAQqK,MAAMD,IAAyBgB,GAExDxP,KAAK2P,QAAUH,EAAM9D,cAAc5I,MACvC,EAKA8M,OAAQ,WACJ5P,KAAKyP,IAAIzP,KAAKoF,QAAQG,QAAQsK,YAClC,EAMAH,QAAS,WACL,IAAIC,EAAU,GAMd,OALAhR,EAAKqB,KAAKoF,QAAQ0K,aAAa,SAASC,GAChCvO,EAASuO,EAAWxK,QAAQI,OAAQ,CAACoK,MACrCJ,EAAUA,EAAQhD,OAAOoD,EAAWC,kBAE5C,IA8DR,SAA2BL,GAEvB,GAAIjN,EAAMiN,EAASb,IACf,OAAOA,GAGX,IAAImB,EAAUvN,EAAMiN,EAASZ,IACzBmB,EAAUxN,EAAMiN,EAASX,IAM7B,OAAIiB,GAAWC,EACJpB,GAIPmB,GAAWC,EACJD,EAAUlB,GAAqBC,GAItCtM,EAAMiN,EAASd,IACRA,GAGJD,EACX,CAzFeuB,CAAkBR,EAAQS,KAAK,KAC1C,EAMAC,gBAAiB,SAAStK,GACtB,IAAIkD,EAAWlD,EAAMkD,SACjBL,EAAY7C,EAAM8B,gBAGtB,GAAI7H,KAAKoF,QAAQkB,QAAQgK,UACrBrH,EAASsH,qBADb,CAKA,IAAIZ,EAAU3P,KAAK2P,QACfa,EAAU9N,EAAMiN,EAASb,MAAuBG,GAAiBH,IACjEoB,EAAUxN,EAAMiN,EAASX,MAAwBC,GAAiBD,IAClEiB,EAAUvN,EAAMiN,EAASZ,MAAwBE,GAAiBF,IAEtE,GAAIyB,EAAS,CAGT,IAAIC,EAAyC,IAA1B1K,EAAME,SAASjH,OAC9B0R,EAAgB3K,EAAMmB,SAAW,EACjCyJ,EAAiB5K,EAAMgB,UAAY,IAEvC,GAAI0J,GAAgBC,GAAiBC,EACjC,MAER,CAEA,IAAIV,IAAWC,EAKf,OAAIM,GACCN,GAj3BcU,EAi3BHhI,GACXqH,GAj3BYY,GAi3BDjI,EACL5I,KAAK8Q,WAAW7H,QAH3B,CAxBA,CA6BJ,EAMA6H,WAAY,SAAS7H,GACjBjJ,KAAKoF,QAAQkB,QAAQgK,WAAY,EACjCrH,EAASsH,gBACb,GAgFJ,IAMIQ,GAAe,GAQnB,SAASC,GAAWzL,GAChBvF,KAAKuF,QAAU/H,EAAO,CAAC,EAAGwC,KAAKiR,SAAU1L,GAAW,CAAC,GAErDvF,KAAKkR,GApgCEhN,IAsgCPlE,KAAKoF,QAAU,KAGfpF,KAAKuF,QAAQI,OAAShE,EAAY3B,KAAKuF,QAAQI,QAAQ,GAEvD3F,KAAKmR,MAxBY,EA0BjBnR,KAAKoR,aAAe,CAAC,EACrBpR,KAAKqR,YAAc,EACvB,CAoOA,SAASC,GAASH,GACd,OA5PkB,GA4PdA,EACO,SA/PG,EAgQHA,EACA,MAlQK,EAmQLA,EACA,OArQG,EAsQHA,EACA,QAEJ,EACX,CAOA,SAASI,GAAa3I,GAClB,OAnuCiB,IAmuCbA,EACO,OAruCI,GAsuCJA,EACA,KAzuCM,GA0uCNA,EACA,OA1uCO,GA2uCPA,EACA,QAEJ,EACX,CAQA,SAAS4I,GAA6BC,EAAiB1B,GACnD,IAAI3K,EAAU2K,EAAW3K,QACzB,OAAIA,EACOA,EAAQsM,IAAID,GAEhBA,CACX,CAOA,SAASE,KACLX,GAAWjR,MAAMC,KAAMC,UAC3B,CA4DA,SAAS2R,KACLD,GAAe5R,MAAMC,KAAMC,WAE3BD,KAAK6R,GAAK,KACV7R,KAAK8R,GAAK,IACd,CA2EA,SAASC,KACLJ,GAAe5R,MAAMC,KAAMC,UAC/B,CAqCA,SAAS+R,KACLhB,GAAWjR,MAAMC,KAAMC,WAEvBD,KAAKiS,OAAS,KACdjS,KAAKkS,OAAS,IAClB,CAkEA,SAASC,KACLR,GAAe5R,MAAMC,KAAMC,UAC/B,CA6BA,SAASmS,KACLT,GAAe5R,MAAMC,KAAMC,UAC/B,CA0DA,SAASoS,KACLrB,GAAWjR,MAAMC,KAAMC,WAIvBD,KAAKsS,OAAQ,EACbtS,KAAKuS,SAAU,EAEfvS,KAAKiS,OAAS,KACdjS,KAAKkS,OAAS,KACdlS,KAAKwS,MAAQ,CACjB,CAoGA,SAASC,GAAOrO,EAASmB,GAGrB,OAFAA,EAAUA,GAAW,CAAC,GACduK,YAAcnO,EAAY4D,EAAQuK,YAAa2C,GAAOxB,SAASyB,QAChE,IAAIC,GAAQvO,EAASmB,EAChC,CAgIA,SAASoN,GAAQvO,EAASmB,GACtBvF,KAAKuF,QAAU/H,EAAO,CAAC,EAAGiV,GAAOxB,SAAU1L,GAAW,CAAC,GAEvDvF,KAAKuF,QAAQC,YAAcxF,KAAKuF,QAAQC,aAAepB,EAEvDpE,KAAK4S,SAAW,CAAC,EACjB5S,KAAKsG,QAAU,CAAC,EAChBtG,KAAK8P,YAAc,GACnB9P,KAAK6S,YAAc,CAAC,EAEpB7S,KAAKoE,QAAUA,EACfpE,KAAK+F,MArwDE,IAqwD0B/F,KAlxDRuF,QAAQuN,aAItBpO,EACAyG,GACAxG,EACAkI,GACCpI,EAGD6I,GAFAjD,IAywDsBrK,KArwDN6F,GAswD3B7F,KAAK6P,YAAc,IAAIN,GAAYvP,KAAMA,KAAKuF,QAAQsK,aAEtDkD,GAAe/S,MAAM,GAErBrB,EAAKqB,KAAKuF,QAAQuK,aAAa,SAASkD,GACpC,IAAIjD,EAAa/P,KAAKiT,IAAI,IAAKD,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAMjD,EAAWmD,cAAcF,EAAK,IACzCA,EAAK,IAAMjD,EAAWoD,eAAeH,EAAK,GAC9C,GAAGhT,KACP,CA2PA,SAAS+S,GAAe3N,EAAS6N,GAC7B,IAIIlP,EAJAK,EAAUgB,EAAQhB,QACjBA,EAAQqK,QAIb9P,EAAKyG,EAAQG,QAAQ6N,UAAU,SAAS5D,EAAOnQ,GAC3C0E,EAAOH,EAASQ,EAAQqK,MAAOpP,GAC3B4T,GACA7N,EAAQyN,YAAY9O,GAAQK,EAAQqK,MAAM1K,GAC1CK,EAAQqK,MAAM1K,GAAQyL,GAEtBpL,EAAQqK,MAAM1K,GAAQqB,EAAQyN,YAAY9O,IAAS,EAE3D,IACKkP,IACD7N,EAAQyN,YAAc,CAAC,GAE/B,CAhoCA7B,GAAW5P,UAAY,CAKnB6P,SAAU,CAAC,EAOXxB,IAAK,SAASlK,GAKV,OAJA/H,EAAOwC,KAAKuF,QAASA,GAGrBvF,KAAKoF,SAAWpF,KAAKoF,QAAQyK,YAAYD,SAClC5P,IACX,EAOAkT,cAAe,SAASzB,GACpB,GAAIlT,EAAekT,EAAiB,gBAAiBzR,MACjD,OAAOA,KAGX,IAAIoR,EAAepR,KAAKoR,aAMxB,OAJKA,GADLK,EAAkBD,GAA6BC,EAAiBzR,OAC9BkR,MAC9BE,EAAaK,EAAgBP,IAAMO,EACnCA,EAAgByB,cAAclT,OAE3BA,IACX,EAOAqT,kBAAmB,SAAS5B,GACxB,OAAIlT,EAAekT,EAAiB,oBAAqBzR,QAIzDyR,EAAkBD,GAA6BC,EAAiBzR,aACzDA,KAAKoR,aAAaK,EAAgBP,KAJ9BlR,IAMf,EAOAmT,eAAgB,SAAS1B,GACrB,GAAIlT,EAAekT,EAAiB,iBAAkBzR,MAClD,OAAOA,KAGX,IAAIqR,EAAcrR,KAAKqR,YAMvB,OAJ+C,IAA3CrO,EAAQqO,EADZI,EAAkBD,GAA6BC,EAAiBzR,SAE5DqR,EAAY5N,KAAKgO,GACjBA,EAAgB0B,eAAenT,OAE5BA,IACX,EAOAsT,mBAAoB,SAAS7B,GACzB,GAAIlT,EAAekT,EAAiB,qBAAsBzR,MACtD,OAAOA,KAGXyR,EAAkBD,GAA6BC,EAAiBzR,MAChE,IAAIM,EAAQ0C,EAAQhD,KAAKqR,YAAaI,GAItC,OAHInR,GAAS,GACTN,KAAKqR,YAAYvF,OAAOxL,EAAO,GAE5BN,IACX,EAMAuT,mBAAoB,WAChB,OAAOvT,KAAKqR,YAAYrS,OAAS,CACrC,EAOAwU,iBAAkB,SAAS/B,GACvB,QAASzR,KAAKoR,aAAaK,EAAgBP,GAC/C,EAOA/H,KAAM,SAASpD,GACX,IAAIT,EAAOtF,KACPmR,EAAQnR,KAAKmR,MAEjB,SAAShI,EAAKsK,GACVnO,EAAKF,QAAQ+D,KAAKsK,EAAO1N,EAC7B,CAGIoL,EArJM,GAsJNhI,EAAK7D,EAAKC,QAAQkO,MAAQnC,GAASH,IAGvChI,EAAK7D,EAAKC,QAAQkO,OAEd1N,EAAM2N,iBACNvK,EAAKpD,EAAM2N,iBAIXvC,GAhKM,GAiKNhI,EAAK7D,EAAKC,QAAQkO,MAAQnC,GAASH,GAE3C,EAQAwC,QAAS,SAAS5N,GACd,GAAI/F,KAAK4T,UACL,OAAO5T,KAAKmJ,KAAKpD,GAGrB/F,KAAKmR,MAAQJ,EACjB,EAMA6C,QAAS,WAEL,IADA,IAAI9U,EAAI,EACDA,EAAIkB,KAAKqR,YAAYrS,QAAQ,CAChC,KAAkC,GAA5BgB,KAAKqR,YAAYvS,GAAGqS,OACtB,OAAO,EAEXrS,GACJ,CACA,OAAO,CACX,EAMAsK,UAAW,SAASgF,GAGhB,IAAIyF,EAAiBrW,EAAO,CAAC,EAAG4Q,GAGhC,IAAK5M,EAASxB,KAAKuF,QAAQI,OAAQ,CAAC3F,KAAM6T,IAGtC,OAFA7T,KAAK8T,aACL9T,KAAKmR,MAAQJ,IAKA,GAAb/Q,KAAKmR,QACLnR,KAAKmR,MAvNI,GA0NbnR,KAAKmR,MAAQnR,KAAK+T,QAAQF,GAIT,GAAb7T,KAAKmR,OACLnR,KAAK2T,QAAQE,EAErB,EASAE,QAAS,SAAS3F,GAAa,EAO/B4B,eAAgB,WAAa,EAO7B8D,MAAO,WAAa,GA8DxBhT,EAAQ6Q,GAAgBX,GAAY,CAKhCC,SAAU,CAKNhL,SAAU,GASd+N,SAAU,SAASjO,GACf,IAAIkO,EAAiBjU,KAAKuF,QAAQU,SAClC,OAA0B,IAAnBgO,GAAwBlO,EAAME,SAASjH,SAAWiV,CAC7D,EAQAF,QAAS,SAAShO,GACd,IAAIoL,EAAQnR,KAAKmR,MACbrL,EAAYC,EAAMD,UAElBoO,EAAuB,EAAR/C,EACfgD,EAAUnU,KAAKgU,SAASjO,GAG5B,OAAImO,IAlzCO,EAkzCUpO,IAA6BqO,GAvVpC,GAwVHhD,EACA+C,GAAgBC,EArzCnB,EAszCArO,EA5VE,EA6VKqL,EA/VL,EAgWOA,EA/VL,EAkWDA,EAnWD,EAqWHJ,EACX,IAgBJjQ,EAAQ8Q,GAAeD,GAAgB,CAKnCV,SAAU,CACNwC,MAAO,MACPW,UAAW,GACXnO,SAAU,EACV2C,UA50CYyL,IA+0ChBrE,eAAgB,WACZ,IAAIpH,EAAY5I,KAAKuF,QAAQqD,UACzB+G,EAAU,GAOd,OA11CmBiB,EAo1CfhI,GACA+G,EAAQlM,KAAKuL,IAp1CA6B,GAs1CbjI,GACA+G,EAAQlM,KAAKsL,IAEVY,CACX,EAEA2E,cAAe,SAASvO,GACpB,IAAIR,EAAUvF,KAAKuF,QACfgP,GAAW,EACXrN,EAAWnB,EAAMmB,SACjB0B,EAAY7C,EAAM6C,UAClBpB,EAAIzB,EAAM0B,OACVC,EAAI3B,EAAM4B,OAed,OAZMiB,EAAYrD,EAAQqD,YAt2CPgI,EAu2CXrL,EAAQqD,WACRA,EAAmB,IAANpB,EA92CR,EA82CqCA,EAAI,EA72CzC,EACC,EA62CN+M,EAAW/M,GAAKxH,KAAK6R,GACrB3K,EAAWrJ,KAAKC,IAAIiI,EAAM0B,UAE1BmB,EAAmB,IAANlB,EAl3CR,EAk3CqCA,EAAI,EA/2C3C,EACE,GA+2CL6M,EAAW7M,GAAK1H,KAAK8R,GACrB5K,EAAWrJ,KAAKC,IAAIiI,EAAM4B,UAGlC5B,EAAM6C,UAAYA,EACX2L,GAAYrN,EAAW3B,EAAQ6O,WAAaxL,EAAYrD,EAAQqD,SAC3E,EAEAoL,SAAU,SAASjO,GACf,OAAO4L,GAAevQ,UAAU4S,SAAS/U,KAAKe,KAAM+F,KAva1C,EAwaL/F,KAAKmR,SAxaA,EAwa0BnR,KAAKmR,QAAwBnR,KAAKsU,cAAcvO,GACxF,EAEAoD,KAAM,SAASpD,GAEX/F,KAAK6R,GAAK9L,EAAM0B,OAChBzH,KAAK8R,GAAK/L,EAAM4B,OAEhB,IAAIiB,EAAY2I,GAAaxL,EAAM6C,WAE/BA,IACA7C,EAAM2N,gBAAkB1T,KAAKuF,QAAQkO,MAAQ7K,GAEjD5I,KAAKuB,OAAO4H,KAAKlK,KAAKe,KAAM+F,EAChC,IAaJjF,EAAQiR,GAAiBJ,GAAgB,CAKrCV,SAAU,CACNwC,MAAO,QACPW,UAAW,EACXnO,SAAU,GAGd+J,eAAgB,WACZ,MAAO,CAAClB,GACZ,EAEAkF,SAAU,SAASjO,GACf,OAAO/F,KAAKuB,OAAOyS,SAAS/U,KAAKe,KAAM+F,KAClClI,KAAKC,IAAIiI,EAAMsC,MAAQ,GAAKrI,KAAKuF,QAAQ6O,WApdpC,EAodiDpU,KAAKmR,MACpE,EAEAhI,KAAM,SAASpD,GACX,GAAoB,IAAhBA,EAAMsC,MAAa,CACnB,IAAImM,EAAQzO,EAAMsC,MAAQ,EAAI,KAAO,MACrCtC,EAAM2N,gBAAkB1T,KAAKuF,QAAQkO,MAAQe,CACjD,CACAxU,KAAKuB,OAAO4H,KAAKlK,KAAKe,KAAM+F,EAChC,IAgBJjF,EAAQkR,GAAiBhB,GAAY,CAKjCC,SAAU,CACNwC,MAAO,QACPxN,SAAU,EACVwO,KAAM,IACNL,UAAW,GAGfpE,eAAgB,WACZ,MAAO,CAACpB,GACZ,EAEAmF,QAAS,SAAShO,GACd,IAAIR,EAAUvF,KAAKuF,QACfmP,EAAgB3O,EAAME,SAASjH,SAAWuG,EAAQU,SAClD0O,EAAgB5O,EAAMmB,SAAW3B,EAAQ6O,UACzCQ,EAAY7O,EAAMgB,UAAYxB,EAAQkP,KAM1C,GAJAzU,KAAKkS,OAASnM,GAIT4O,IAAkBD,GAAoC,GAAlB3O,EAAMD,YAA2C8O,EACtF5U,KAAK8T,aACF,GAn+CG,EAm+CC/N,EAAMD,UACb9F,KAAK8T,QACL9T,KAAKiS,OAAShU,GAAkB,WAC5B+B,KAAKmR,MA1gBH,EA2gBFnR,KAAK2T,SACT,GAAGpO,EAAQkP,KAAMzU,WACd,GAv+CC,EAu+CG+F,EAAMD,UACb,OA9gBM,EAghBV,OAAOiL,EACX,EAEA+C,MAAO,WACHe,aAAa7U,KAAKiS,OACtB,EAEA9I,KAAM,SAASpD,GAvhBD,IAwhBN/F,KAAKmR,QAILpL,GAt/CI,EAs/CMA,EAAMD,UAChB9F,KAAKoF,QAAQ+D,KAAKnJ,KAAKuF,QAAQkO,MAAQ,KAAM1N,IAE7C/F,KAAKkS,OAAOpL,UAAY/I,IACxBiC,KAAKoF,QAAQ+D,KAAKnJ,KAAKuF,QAAQkO,MAAOzT,KAAKkS,SAEnD,IAaJpR,EAAQqR,GAAkBR,GAAgB,CAKtCV,SAAU,CACNwC,MAAO,SACPW,UAAW,EACXnO,SAAU,GAGd+J,eAAgB,WACZ,MAAO,CAAClB,GACZ,EAEAkF,SAAU,SAASjO,GACf,OAAO/F,KAAKuB,OAAOyS,SAAS/U,KAAKe,KAAM+F,KAClClI,KAAKC,IAAIiI,EAAMuC,UAAYtI,KAAKuF,QAAQ6O,WAlkBnC,EAkkBgDpU,KAAKmR,MACnE,IAaJrQ,EAAQsR,GAAiBT,GAAgB,CAKrCV,SAAU,CACNwC,MAAO,QACPW,UAAW,GACX3L,SAAU,GACVG,UAAWyL,GACXpO,SAAU,GAGd+J,eAAgB,WACZ,OAAO4B,GAAcxQ,UAAU4O,eAAe/Q,KAAKe,KACvD,EAEAgU,SAAU,SAASjO,GACf,IACI0C,EADAG,EAAY5I,KAAKuF,QAAQqD,UAW7B,OARgB,GAAZA,EACAH,EAAW1C,EAAMkC,gBArjDF2I,EAsjDRhI,EACPH,EAAW1C,EAAMoC,iBAtjDJ0I,GAujDNjI,IACPH,EAAW1C,EAAMqC,kBAGdpI,KAAKuB,OAAOyS,SAAS/U,KAAKe,KAAM+F,IACnC6C,EAAY7C,EAAM8B,iBAClB9B,EAAMmB,SAAWlH,KAAKuF,QAAQ6O,WAC9BrO,EAAMyC,aAAexI,KAAKuF,QAAQU,UAClCnI,EAAI2K,GAAYzI,KAAKuF,QAAQkD,UAzkDzB,EAykDqC1C,EAAMD,SACvD,EAEAqD,KAAM,SAASpD,GACX,IAAI6C,EAAY2I,GAAaxL,EAAM8B,iBAC/Be,GACA5I,KAAKoF,QAAQ+D,KAAKnJ,KAAKuF,QAAQkO,MAAQ7K,EAAW7C,GAGtD/F,KAAKoF,QAAQ+D,KAAKnJ,KAAKuF,QAAQkO,MAAO1N,EAC1C,IA0BJjF,EAAQuR,GAAerB,GAAY,CAK/BC,SAAU,CACNwC,MAAO,MACPxN,SAAU,EACV6O,KAAM,EACNC,SAAU,IACVN,KAAM,IACNL,UAAW,EACXY,aAAc,IAGlBhF,eAAgB,WACZ,MAAO,CAACnB,GACZ,EAEAkF,QAAS,SAAShO,GACd,IAAIR,EAAUvF,KAAKuF,QAEfmP,EAAgB3O,EAAME,SAASjH,SAAWuG,EAAQU,SAClD0O,EAAgB5O,EAAMmB,SAAW3B,EAAQ6O,UACzCa,EAAiBlP,EAAMgB,UAAYxB,EAAQkP,KAI/C,GAFAzU,KAAK8T,QAzoDK,EA2oDL/N,EAAMD,WAA4C,IAAf9F,KAAKwS,MACzC,OAAOxS,KAAKkV,cAKhB,GAAIP,GAAiBM,GAAkBP,EAAe,CAClD,GAhpDI,GAgpDA3O,EAAMD,UACN,OAAO9F,KAAKkV,cAGhB,IAAIC,GAAgBnV,KAAKsS,OAASvM,EAAMe,UAAY9G,KAAKsS,MAAQ/M,EAAQwP,SACrEK,GAAiBpV,KAAKuS,SAAWpL,EAAYnH,KAAKuS,QAASxM,EAAMa,QAAUrB,EAAQyP,aAgBvF,GAdAhV,KAAKsS,MAAQvM,EAAMe,UACnB9G,KAAKuS,QAAUxM,EAAMa,OAEhBwO,GAAkBD,EAGnBnV,KAAKwS,OAAS,EAFdxS,KAAKwS,MAAQ,EAKjBxS,KAAKkS,OAASnM,EAKG,GADF/F,KAAKwS,MAAQjN,EAAQuP,KAIhC,OAAK9U,KAAKuT,sBAGNvT,KAAKiS,OAAShU,GAAkB,WAC5B+B,KAAKmR,MAltBX,EAmtBMnR,KAAK2T,SACT,GAAGpO,EAAQwP,SAAU/U,MAttBvB,GAEA,CAwtBV,CACA,OAAO+Q,EACX,EAEAmE,YAAa,WAIT,OAHAlV,KAAKiS,OAAShU,GAAkB,WAC5B+B,KAAKmR,MAAQJ,EACjB,GAAG/Q,KAAKuF,QAAQwP,SAAU/U,MACnB+Q,EACX,EAEA+C,MAAO,WACHe,aAAa7U,KAAKiS,OACtB,EAEA9I,KAAM,WAvuBQ,GAwuBNnJ,KAAKmR,QACLnR,KAAKkS,OAAOmD,SAAWrV,KAAKwS,MAC5BxS,KAAKoF,QAAQ+D,KAAKnJ,KAAKuF,QAAQkO,MAAOzT,KAAKkS,QAEnD,IAkBJO,GAAO6C,QAAU,QAMjB7C,GAAOxB,SAAW,CAOdsE,WAAW,EAQX1F,YAAalB,GAMbhJ,QAAQ,EASRH,YAAa,KAObsN,WAAY,KAOZJ,OAAQ,CAEJ,CAACP,GAAkB,CAACxM,QAAQ,IAC5B,CAACoM,GAAiB,CAACpM,QAAQ,GAAQ,CAAC,WACpC,CAACyM,GAAiB,CAACxJ,UArwDAgI,IAswDnB,CAACgB,GAAe,CAAChJ,UAtwDEgI,GAswDgC,CAAC,UACpD,CAACyB,IACD,CAACA,GAAe,CAACoB,MAAO,YAAaqB,KAAM,GAAI,CAAC,QAChD,CAAC9C,KAQLoB,SAAU,CAMNoC,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAoC3BlD,GAAQvR,UAAY,CAMhBqO,IAAK,SAASlK,GAaV,OAZA/H,EAAOwC,KAAKuF,QAASA,GAGjBA,EAAQsK,aACR7P,KAAK6P,YAAYD,SAEjBrK,EAAQC,cAERxF,KAAK+F,MAAMiE,UACXhK,KAAK+F,MAAM5F,OAASoF,EAAQC,YAC5BxF,KAAK+F,MAAMH,QAER5F,IACX,EAQA8V,KAAM,SAASC,GACX/V,KAAKsG,QAAQ0P,QAAUD,EA5Db,EADP,CA8DP,EAQA3M,UAAW,SAASgF,GAChB,IAAI9H,EAAUtG,KAAKsG,QACnB,IAAIA,EAAQ0P,QAAZ,CAOA,IAAIjG,EAFJ/P,KAAK6P,YAAYQ,gBAAgBjC,GAGjC,IAAI0B,EAAc9P,KAAK8P,YAKnBmG,EAAgB3P,EAAQ2P,gBAIvBA,GAAkBA,GAz8Bb,EAy8B8BA,EAAc9E,SAClD8E,EAAgB3P,EAAQ2P,cAAgB,MAI5C,IADA,IAAInX,EAAI,EACDA,EAAIgR,EAAY9Q,QACnB+Q,EAAaD,EAAYhR,GA9FnB,IAsGFwH,EAAQ0P,SACHC,GAAiBlG,GAAckG,IAChClG,EAAWyD,iBAAiByC,GAGhClG,EAAW+D,QAFX/D,EAAW3G,UAAUgF,IAOpB6H,GAAoC,GAAnBlG,EAAWoB,QAC7B8E,EAAgB3P,EAAQ2P,cAAgBlG,GAE5CjR,GA1CJ,CA4CJ,EAOA4S,IAAK,SAAS3B,GACV,GAAIA,aAAsBiB,GACtB,OAAOjB,EAIX,IADA,IAAID,EAAc9P,KAAK8P,YACdhR,EAAI,EAAGA,EAAIgR,EAAY9Q,OAAQF,IACpC,GAAIgR,EAAYhR,GAAGyG,QAAQkO,OAAS1D,EAChC,OAAOD,EAAYhR,GAG3B,OAAO,IACX,EAQAmU,IAAK,SAASlD,GACV,GAAIxR,EAAewR,EAAY,MAAO/P,MAClC,OAAOA,KAIX,IAAIkW,EAAWlW,KAAK0R,IAAI3B,EAAWxK,QAAQkO,OAS3C,OARIyC,GACAlW,KAAKmW,OAAOD,GAGhBlW,KAAK8P,YAAYrM,KAAKsM,GACtBA,EAAW3K,QAAUpF,KAErBA,KAAK6P,YAAYD,SACVG,CACX,EAOAoG,OAAQ,SAASpG,GACb,GAAIxR,EAAewR,EAAY,SAAU/P,MACrC,OAAOA,KAMX,GAHA+P,EAAa/P,KAAK0R,IAAI3B,GAGN,CACZ,IAAID,EAAc9P,KAAK8P,YACnBxP,EAAQ0C,EAAQ8M,EAAaC,IAElB,IAAXzP,IACAwP,EAAYhE,OAAOxL,EAAO,GAC1BN,KAAK6P,YAAYD,SAEzB,CAEA,OAAO5P,IACX,EAQAoW,GAAI,SAASC,EAAQrU,GACjB,GAAIqU,IAAW9Y,GAGXyE,IAAYzE,EAAhB,CAIA,IAAIqV,EAAW5S,KAAK4S,SAKpB,OAJAjU,EAAKsD,EAASoU,IAAS,SAAS5C,GAC5Bb,EAASa,GAASb,EAASa,IAAU,GACrCb,EAASa,GAAOhQ,KAAKzB,EACzB,IACOhC,IAPP,CAQJ,EAQAsW,IAAK,SAASD,EAAQrU,GAClB,GAAIqU,IAAW9Y,EAAf,CAIA,IAAIqV,EAAW5S,KAAK4S,SAQpB,OAPAjU,EAAKsD,EAASoU,IAAS,SAAS5C,GACvBzR,EAGD4Q,EAASa,IAAUb,EAASa,GAAO3H,OAAO9I,EAAQ4P,EAASa,GAAQzR,GAAU,UAFtE4Q,EAASa,EAIxB,IACOzT,IAVP,CAWJ,EAOAmJ,KAAM,SAASsK,EAAO8C,GAEdvW,KAAKuF,QAAQgQ,WAkEzB,SAAyB9B,EAAO8C,GAC5B,IAAIC,EAAenZ,EAASoZ,YAAY,SACxCD,EAAaE,UAAUjD,GAAO,GAAM,GACpC+C,EAAaG,QAAUJ,EACvBA,EAAKpW,OAAOyW,cAAcJ,EAC9B,CAtEYK,CAAgBpD,EAAO8C,GAI3B,IAAI3D,EAAW5S,KAAK4S,SAASa,IAAUzT,KAAK4S,SAASa,GAAOtQ,QAC5D,GAAKyP,GAAaA,EAAS5T,OAA3B,CAIAuX,EAAKrU,KAAOuR,EACZ8C,EAAKhG,eAAiB,WAClBgG,EAAKtN,SAASsH,gBAClB,EAGA,IADA,IAAIzR,EAAI,EACDA,EAAI8T,EAAS5T,QAChB4T,EAAS9T,GAAGyX,GACZzX,GAVJ,CAYJ,EAMAkL,QAAS,WACLhK,KAAKoE,SAAW2O,GAAe/S,MAAM,GAErCA,KAAK4S,SAAW,CAAC,EACjB5S,KAAKsG,QAAU,CAAC,EAChBtG,KAAK+F,MAAMiE,UACXhK,KAAKoE,QAAU,IACnB,GAwCJ5G,EAAOiV,GAAQ,CACXqE,YAtoEc,EAuoEdC,WAtoEa,EAuoEbC,UAtoEY,EAuoEZC,aAtoEe,EAwoEfC,eAlrCiB,EAmrCjBC,YAlrCc,EAmrCdC,cAlrCgB,EAmrChBC,YAlrCc,EAmrCdC,iBAnrCc,EAorCdC,gBAlrCkB,GAmrClBxG,aAAcA,GAEdyG,eA9oEiB,EA+oEjB5G,eA9oEiB,EA+oEjB6G,gBA9oEkB,EA+oElB5G,aA9oEe,EA+oEf6G,eA9oEiB,GA+oEjBrD,qBA7oEuBzD,EA8oEvB+G,mBA7oEqB9G,GA8oErB+G,cA7oEgBvD,GA+oEhB1B,QAASA,GACTxN,MAAOA,EACPoK,YAAaA,GAEb1C,WAAYA,GACZxC,WAAYA,EACZc,kBAAmBA,GACnBmC,gBAAiBA,GACjBlB,iBAAkBA,GAElB4E,WAAYA,GACZW,eAAgBA,GAChBkG,IAAKxF,GACLyF,IAAKlG,GACLmG,MAAO3F,GACP4F,MAAOjG,GACPkG,OAAQ9F,GACR+F,MAAOlG,GAEPoE,GAAItU,EACJwU,IAAKlU,EACLzD,KAAMA,EACNiC,MAAOA,EACPH,OAAQA,EACRjD,OAAQA,EACRsD,QAASA,EACTxC,OAAQA,EACRsF,SAAUA,UAKsB,IAAXxG,EAAyBA,EAA0B,oBAATkI,KAAuBA,KAAO,CAAC,GACvFmN,OAASA,IAGhB,aACI,OAAOA,EACV,mCAOJ,CA7kFD,CA6kFGrV,OAAQC,+BCllFX,iBAQE,WAGA,IAAIE,EAUA4a,EAAkB,sBAIlBC,EAAiB,4BAMjBC,EAAc,yBAiBdC,EAAoB,GAEpBC,EAAgB,IAkBhBC,EAAW,IACXC,EAAmB,iBAEnBC,EAAM,IAGNC,EAAmB,WAKnBC,EAAY,CACd,CAAC,MAAOL,GACR,CAAC,OAtCkB,GAuCnB,CAAC,UAtCsB,GAuCvB,CAAC,QArCmB,GAsCpB,CAAC,aArCyB,IAsC1B,CAAC,OAjCkB,KAkCnB,CAAC,UAAWD,GACZ,CAAC,eAtC2B,IAuC5B,CAAC,QArCmB,MAyClBO,EAAU,qBACVC,EAAW,iBAEXC,EAAU,mBACVC,EAAU,gBAEVC,EAAW,iBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAS,eACTC,EAAY,kBAEZC,EAAY,kBACZC,EAAa,mBAEbC,EAAY,kBACZC,EAAS,eACTC,EAAY,kBACZC,EAAY,kBAEZC,EAAa,mBAGbC,EAAiB,uBACjBC,EAAc,oBACdC,EAAa,wBACbC,EAAa,wBACbC,EAAU,qBACVC,EAAW,sBACXC,EAAW,sBACXC,EAAW,sBACXC,EAAkB,6BAClBC,EAAY,uBACZC,EAAY,uBAGZC,EAAuB,iBACvBC,EAAsB,qBACtBC,EAAwB,gCAGxBC,EAAgB,4BAChBC,EAAkB,WAClBC,EAAmBC,OAAOH,EAAcpa,QACxCwa,EAAqBD,OAAOF,EAAgBra,QAG5Cya,EAAW,mBACXC,EAAa,kBACbC,EAAgB,mBAGhBC,EAAe,mDACfC,EAAgB,QAChBC,GAAa,mGAMbC,GAAe,sBACfC,GAAkBT,OAAOQ,GAAa/a,QAGtCib,GAAc,OAGdC,GAAe,KAGfC,GAAgB,4CAChBC,GAAgB,oCAChBC,GAAiB,QAGjBC,GAAc,4CAYdC,GAA6B,mBAG7BC,GAAe,WAMfC,GAAe,kCAGfC,GAAU,OAGVC,GAAa,qBAGbC,GAAa,aAGbC,GAAe,8BAGfC,GAAY,cAGZC,GAAW,mBAGXC,GAAU,8CAGVC,GAAY,OAGZC,GAAoB,yBAGpBC,GAAgB,kBAIhBC,GAAeC,gDACfC,GAAiB,kBACjBC,GAAe,4BAKfC,GAAe,4BACfC,GAAa,iBACbC,GAAeC,8OAIfC,GAAW,IAAMT,GAAgB,IACjCU,GAAU,IAAMH,GAAe,IAC/BI,GAAU,IAAMV,GAAe,IAC/BW,GAAW,OACXC,GAAY,IAAMV,GAAiB,IACnCW,GAAU,IAAMV,GAAe,IAC/BW,GAAS,KAAOf,GAAgBO,GAAeK,GAAWT,GAAiBC,GAAeC,GAAe,IACzGW,GAAS,2BAETC,GAAc,KAAOjB,GAAgB,IACrCkB,GAAa,kCACbC,GAAa,qCACbC,GAAU,IAAMf,GAAe,IAC/BgB,GAAQ,UAGRC,GAAc,MAAQR,GAAU,IAAMC,GAAS,IAC/CQ,GAAc,MAAQH,GAAU,IAAML,GAAS,IAC/CS,GAAkB,gCAClBC,GAAkB,gCAClBC,GAZa,MAAQf,GAAU,IAAMK,GAY1BW,KACXC,GAAW,IAAMtB,GAAa,KAI9BuB,GAAQD,GAAWF,GAHP,MAAQL,GAAQ,MAAQ,CAACJ,GAAaC,GAAYC,IAAYzN,KAAK,KAAO,IAAMkO,GAAWF,GAAW,KAIlHI,GAAU,MAAQ,CAACjB,GAAWK,GAAYC,IAAYzN,KAAK,KAAO,IAAMmO,GACxEE,GAAW,MAAQ,CAACd,GAAcN,GAAU,IAAKA,GAASO,GAAYC,GAAYV,IAAU/M,KAAK,KAAO,IAGxGsO,GAAS5D,OA/BA,OA+Be,KAMxB6D,GAAc7D,OAAOuC,GAAS,KAG9BuB,GAAY9D,OAAO4C,GAAS,MAAQA,GAAS,KAAOe,GAAWF,GAAO,KAGtEM,GAAgB/D,OAAO,CACzBgD,GAAU,IAAMN,GAAU,IAAMU,GAAkB,MAAQ,CAACd,GAASU,GAAS,KAAK1N,KAAK,KAAO,IAC9F6N,GAAc,IAAME,GAAkB,MAAQ,CAACf,GAASU,GAAUE,GAAa,KAAK5N,KAAK,KAAO,IAChG0N,GAAU,IAAME,GAAc,IAAME,GACpCJ,GAAU,IAAMK,GAtBD,mDADA,mDA0Bfb,GACAkB,IACApO,KAAK,KAAM,KAGT0O,GAAehE,OAAO,IAAMiD,GAAQrB,GAAiBC,GAAeK,GAAa,KAGjF+B,GAAmB,qEAGnBC,GAAe,CACjB,QAAS,SAAU,WAAY,OAAQ,QAAS,eAAgB,eAChE,WAAY,YAAa,aAAc,aAAc,MAAO,OAAQ,SACpE,UAAW,SAAU,MAAO,SAAU,SAAU,YAAa,aAC7D,oBAAqB,cAAe,cAAe,UACnD,IAAK,eAAgB,WAAY,WAAY,cAI3CC,IAAmB,EAGnBC,GAAiB,CAAC,EACtBA,GAAenF,GAAcmF,GAAelF,GAC5CkF,GAAejF,GAAWiF,GAAehF,GACzCgF,GAAe/E,GAAY+E,GAAe9E,GAC1C8E,GAAe7E,GAAmB6E,GAAe5E,GACjD4E,GAAe3E,IAAa,EAC5B2E,GAAerG,GAAWqG,GAAepG,GACzCoG,GAAerF,GAAkBqF,GAAenG,GAChDmG,GAAepF,GAAeoF,GAAelG,GAC7CkG,GAAejG,GAAYiG,GAAehG,GAC1CgG,GAAe9F,GAAU8F,GAAe7F,GACxC6F,GAAe5F,GAAa4F,GAAe1F,GAC3C0F,GAAezF,GAAUyF,GAAexF,GACxCwF,GAAetF,IAAc,EAG7B,IAAIuF,GAAgB,CAAC,EACrBA,GAActG,GAAWsG,GAAcrG,GACvCqG,GAActF,GAAkBsF,GAAcrF,GAC9CqF,GAAcpG,GAAWoG,GAAcnG,GACvCmG,GAAcpF,GAAcoF,GAAcnF,GAC1CmF,GAAclF,GAAWkF,GAAcjF,GACvCiF,GAAchF,GAAYgF,GAAc/F,GACxC+F,GAAc9F,GAAa8F,GAAc7F,GACzC6F,GAAc3F,GAAa2F,GAAc1F,GACzC0F,GAAczF,GAAayF,GAAcxF,GACzCwF,GAAc/E,GAAY+E,GAAc9E,GACxC8E,GAAc7E,GAAa6E,GAAc5E,IAAa,EACtD4E,GAAclG,GAAYkG,GAAcjG,GACxCiG,GAAcvF,IAAc,EAG5B,IA4EIwF,GAAgB,CAClB,KAAM,KACN,IAAK,IACL,KAAM,IACN,KAAM,IACN,SAAU,QACV,SAAU,SAIRC,GAAiBC,WACjBC,GAAeC,SAGfC,GAA8B,iBAAV,EAAAC,GAAsB,EAAAA,GAAU,EAAAA,EAAOxf,SAAWA,QAAU,EAAAwf,EAGhFC,GAA0B,iBAARra,MAAoBA,MAAQA,KAAKpF,SAAWA,QAAUoF,KAGxEsa,GAAOH,IAAcE,IAAYE,SAAS,cAATA,GAGjCC,GAA4CC,IAAYA,EAAQC,UAAYD,EAG5EE,GAAaH,IAA4CI,IAAWA,EAAOF,UAAYE,EAGvFC,GAAgBF,IAAcA,GAAWF,UAAYD,GAGrDM,GAAcD,IAAiBV,GAAW1L,QAG1CsM,GAAY,WACd,IAIE,OAFYJ,IAAcA,GAAWK,SAAWL,GAAWK,QAAQ,QAAQve,OAOpEqe,IAAeA,GAAYG,SAAWH,GAAYG,QAAQ,OACnE,CAAE,MAAO/gB,GAAI,CACf,CAZe,GAeXghB,GAAoBH,IAAYA,GAASI,cACzCC,GAAaL,IAAYA,GAASM,OAClCC,GAAYP,IAAYA,GAASQ,MACjCC,GAAeT,IAAYA,GAASU,SACpCC,GAAYX,IAAYA,GAASY,MACjCC,GAAmBb,IAAYA,GAASc,aAc5C,SAASphB,GAAMqhB,EAAMC,EAAS3f,GAC5B,OAAQA,EAAK1C,QACX,KAAK,EAAG,OAAOoiB,EAAKniB,KAAKoiB,GACzB,KAAK,EAAG,OAAOD,EAAKniB,KAAKoiB,EAAS3f,EAAK,IACvC,KAAK,EAAG,OAAO0f,EAAKniB,KAAKoiB,EAAS3f,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAO0f,EAAKniB,KAAKoiB,EAAS3f,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE3D,OAAO0f,EAAKrhB,MAAMshB,EAAS3f,EAC7B,CAYA,SAAS4f,GAAgBC,EAAOC,EAAQC,EAAUC,GAIhD,IAHA,IAAIphB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,SAE9BsB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GAClBkhB,EAAOE,EAAalS,EAAOiS,EAASjS,GAAQ+R,EAC9C,CACA,OAAOG,CACT,CAWA,SAASC,GAAUJ,EAAOE,GAIxB,IAHA,IAAInhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,SAE9BsB,EAAQtB,IAC8B,IAAzCyiB,EAASF,EAAMjhB,GAAQA,EAAOihB,KAIpC,OAAOA,CACT,CAWA,SAASK,GAAeL,EAAOE,GAG7B,IAFA,IAAIziB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OAEhCA,MAC0C,IAA3CyiB,EAASF,EAAMviB,GAASA,EAAQuiB,KAItC,OAAOA,CACT,CAYA,SAASM,GAAWN,EAAOO,GAIzB,IAHA,IAAIxhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,SAE9BsB,EAAQtB,GACf,IAAK8iB,EAAUP,EAAMjhB,GAAQA,EAAOihB,GAClC,OAAO,EAGX,OAAO,CACT,CAWA,SAASQ,GAAYR,EAAOO,GAM1B,IALA,IAAIxhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnCgjB,EAAW,EACXC,EAAS,KAEJ3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdwhB,EAAUtS,EAAOlP,EAAOihB,KAC1BU,EAAOD,KAAcxS,EAEzB,CACA,OAAOyS,CACT,CAWA,SAASC,GAAcX,EAAO/R,GAE5B,QADsB,MAAT+R,IAAoBA,EAAMviB,SACpBmjB,GAAYZ,EAAO/R,EAAO,IAAM,CACrD,CAWA,SAAS4S,GAAkBb,EAAO/R,EAAO6S,GAIvC,IAHA,IAAI/hB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,SAE9BsB,EAAQtB,GACf,GAAIqjB,EAAW7S,EAAO+R,EAAMjhB,IAC1B,OAAO,EAGX,OAAO,CACT,CAWA,SAASgiB,GAASf,EAAOE,GAKvB,IAJA,IAAInhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnCijB,EAASxjB,MAAMO,KAEVsB,EAAQtB,GACfijB,EAAO3hB,GAASmhB,EAASF,EAAMjhB,GAAQA,EAAOihB,GAEhD,OAAOU,CACT,CAUA,SAASM,GAAUhB,EAAO/d,GAKxB,IAJA,IAAIlD,GAAS,EACTtB,EAASwE,EAAOxE,OAChBoI,EAASma,EAAMviB,SAEVsB,EAAQtB,GACfuiB,EAAMna,EAAS9G,GAASkD,EAAOlD,GAEjC,OAAOihB,CACT,CAcA,SAASiB,GAAYjB,EAAOE,EAAUC,EAAae,GACjD,IAAIniB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OAKvC,IAHIyjB,GAAazjB,IACf0iB,EAAcH,IAAQjhB,MAEfA,EAAQtB,GACf0iB,EAAcD,EAASC,EAAaH,EAAMjhB,GAAQA,EAAOihB,GAE3D,OAAOG,CACT,CAcA,SAASgB,GAAiBnB,EAAOE,EAAUC,EAAae,GACtD,IAAIzjB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OAIvC,IAHIyjB,GAAazjB,IACf0iB,EAAcH,IAAQviB,IAEjBA,KACL0iB,EAAcD,EAASC,EAAaH,EAAMviB,GAASA,EAAQuiB,GAE7D,OAAOG,CACT,CAYA,SAASiB,GAAUpB,EAAOO,GAIxB,IAHA,IAAIxhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,SAE9BsB,EAAQtB,GACf,GAAI8iB,EAAUP,EAAMjhB,GAAQA,EAAOihB,GACjC,OAAO,EAGX,OAAO,CACT,CASA,IAAIqB,GAAYC,GAAa,UAmC7B,SAASC,GAAYC,EAAYjB,EAAWkB,GAC1C,IAAIf,EAOJ,OANAe,EAASD,GAAY,SAASvT,EAAOnM,EAAK0f,GACxC,GAAIjB,EAAUtS,EAAOnM,EAAK0f,GAExB,OADAd,EAAS5e,GACF,CAEX,IACO4e,CACT,CAaA,SAASgB,GAAc1B,EAAOO,EAAWoB,EAAWC,GAIlD,IAHA,IAAInkB,EAASuiB,EAAMviB,OACfsB,EAAQ4iB,GAAaC,EAAY,GAAK,GAElCA,EAAY7iB,MAAYA,EAAQtB,GACtC,GAAI8iB,EAAUP,EAAMjhB,GAAQA,EAAOihB,GACjC,OAAOjhB,EAGX,OAAQ,CACV,CAWA,SAAS6hB,GAAYZ,EAAO/R,EAAO0T,GACjC,OAAO1T,GAAUA,EAidnB,SAAuB+R,EAAO/R,EAAO0T,GAInC,IAHA,IAAI5iB,EAAQ4iB,EAAY,EACpBlkB,EAASuiB,EAAMviB,SAEVsB,EAAQtB,GACf,GAAIuiB,EAAMjhB,KAAWkP,EACnB,OAAOlP,EAGX,OAAQ,CACV,CA1dM8iB,CAAc7B,EAAO/R,EAAO0T,GAC5BD,GAAc1B,EAAO8B,GAAWH,EACtC,CAYA,SAASI,GAAgB/B,EAAO/R,EAAO0T,EAAWb,GAIhD,IAHA,IAAI/hB,EAAQ4iB,EAAY,EACpBlkB,EAASuiB,EAAMviB,SAEVsB,EAAQtB,GACf,GAAIqjB,EAAWd,EAAMjhB,GAAQkP,GAC3B,OAAOlP,EAGX,OAAQ,CACV,CASA,SAAS+iB,GAAU7T,GACjB,OAAOA,GAAUA,CACnB,CAWA,SAAS+T,GAAShC,EAAOE,GACvB,IAAIziB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAOA,EAAUwkB,GAAQjC,EAAOE,GAAYziB,EAAU0Z,CACxD,CASA,SAASmK,GAAaxf,GACpB,OAAO,SAASogB,GACd,OAAiB,MAAVA,EAAiBlmB,EAAYkmB,EAAOpgB,EAC7C,CACF,CASA,SAASqgB,GAAeD,GACtB,OAAO,SAASpgB,GACd,OAAiB,MAAVogB,EAAiBlmB,EAAYkmB,EAAOpgB,EAC7C,CACF,CAeA,SAASsgB,GAAWZ,EAAYtB,EAAUC,EAAae,EAAWO,GAMhE,OALAA,EAASD,GAAY,SAASvT,EAAOlP,EAAOyiB,GAC1CrB,EAAce,GACTA,GAAY,EAAOjT,GACpBiS,EAASC,EAAalS,EAAOlP,EAAOyiB,EAC1C,IACOrB,CACT,CA+BA,SAAS8B,GAAQjC,EAAOE,GAKtB,IAJA,IAAIQ,EACA3hB,GAAS,EACTtB,EAASuiB,EAAMviB,SAEVsB,EAAQtB,GAAQ,CACvB,IAAI4kB,EAAUnC,EAASF,EAAMjhB,IACzBsjB,IAAYrmB,IACd0kB,EAASA,IAAW1kB,EAAYqmB,EAAW3B,EAAS2B,EAExD,CACA,OAAO3B,CACT,CAWA,SAAS4B,GAAUC,EAAGrC,GAIpB,IAHA,IAAInhB,GAAS,EACT2hB,EAASxjB,MAAMqlB,KAEVxjB,EAAQwjB,GACf7B,EAAO3hB,GAASmhB,EAASnhB,GAE3B,OAAO2hB,CACT,CAwBA,SAAS8B,GAASC,GAChB,OAAOA,EACHA,EAAO7gB,MAAM,EAAG8gB,GAAgBD,GAAU,GAAGrkB,QAAQ6b,GAAa,IAClEwI,CACN,CASA,SAASE,GAAU9C,GACjB,OAAO,SAAS5R,GACd,OAAO4R,EAAK5R,EACd,CACF,CAYA,SAAS2U,GAAWV,EAAQha,GAC1B,OAAO6Y,GAAS7Y,GAAO,SAASpG,GAC9B,OAAOogB,EAAOpgB,EAChB,GACF,CAUA,SAAS+gB,GAASC,EAAOhhB,GACvB,OAAOghB,EAAMC,IAAIjhB,EACnB,CAWA,SAASkhB,GAAgBC,EAAYC,GAInC,IAHA,IAAInkB,GAAS,EACTtB,EAASwlB,EAAWxlB,SAEfsB,EAAQtB,GAAUmjB,GAAYsC,EAAYD,EAAWlkB,GAAQ,IAAM,IAC5E,OAAOA,CACT,CAWA,SAASokB,GAAcF,EAAYC,GAGjC,IAFA,IAAInkB,EAAQkkB,EAAWxlB,OAEhBsB,KAAW6hB,GAAYsC,EAAYD,EAAWlkB,GAAQ,IAAM,IACnE,OAAOA,CACT,CA8BA,IAAIqkB,GAAejB,GAjxBG,CAEpB,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAC1E,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAC1E,EAAQ,IAAM,EAAQ,IACtB,EAAQ,IAAM,EAAQ,IACtB,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IACtB,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAC1E,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAC1E,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IAAK,EAAQ,IAChD,EAAQ,IAAM,EAAQ,IAAK,EAAQ,IACnC,EAAQ,KAAM,EAAQ,KACtB,EAAQ,KAAM,EAAQ,KACtB,EAAQ,KAER,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAC1B,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACvE,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IACxD,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACtF,EAAU,IAAM,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IAAK,EAAU,IACtF,EAAU,IAAM,EAAU,IAC1B,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,IAAM,EAAU,IAAK,EAAU,IACzC,EAAU,KAAM,EAAU,KAC1B,EAAU,KAAM,EAAU,KAC1B,EAAU,KAAM,EAAU,MAouBxBkB,GAAiBlB,GAhuBH,CAChB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,UAouBP,SAASmB,GAAiBC,GACxB,MAAO,KAAO1F,GAAc0F,EAC9B,CAqBA,SAASC,GAAWf,GAClB,OAAOlF,GAAala,KAAKof,EAC3B,CAqCA,SAASgB,GAAWC,GAClB,IAAI3kB,GAAS,EACT2hB,EAASxjB,MAAMwmB,EAAIC,MAKvB,OAHAD,EAAIlmB,SAAQ,SAASyQ,EAAOnM,GAC1B4e,IAAS3hB,GAAS,CAAC+C,EAAKmM,EAC1B,IACOyS,CACT,CAUA,SAASkD,GAAQ/D,EAAMgE,GACrB,OAAO,SAAS5mB,GACd,OAAO4iB,EAAKgE,EAAU5mB,GACxB,CACF,CAWA,SAAS6mB,GAAe9D,EAAO+D,GAM7B,IALA,IAAIhlB,GAAS,EACTtB,EAASuiB,EAAMviB,OACfgjB,EAAW,EACXC,EAAS,KAEJ3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdkP,IAAU8V,GAAe9V,IAAU6I,IACrCkJ,EAAMjhB,GAAS+X,EACf4J,EAAOD,KAAc1hB,EAEzB,CACA,OAAO2hB,CACT,CASA,SAASsD,GAAW9V,GAClB,IAAInP,GAAS,EACT2hB,EAASxjB,MAAMgR,EAAIyV,MAKvB,OAHAzV,EAAI1Q,SAAQ,SAASyQ,GACnByS,IAAS3hB,GAASkP,CACpB,IACOyS,CACT,CASA,SAASuD,GAAW/V,GAClB,IAAInP,GAAS,EACT2hB,EAASxjB,MAAMgR,EAAIyV,MAKvB,OAHAzV,EAAI1Q,SAAQ,SAASyQ,GACnByS,IAAS3hB,GAAS,CAACkP,EAAOA,EAC5B,IACOyS,CACT,CAmDA,SAASwD,GAAWzB,GAClB,OAAOe,GAAWf,GAiDpB,SAAqBA,GAEnB,IADA,IAAI/B,EAASrD,GAAU8G,UAAY,EAC5B9G,GAAUha,KAAKof,MAClB/B,EAEJ,OAAOA,CACT,CAtDM0D,CAAY3B,GACZpB,GAAUoB,EAChB,CASA,SAAS4B,GAAc5B,GACrB,OAAOe,GAAWf,GAmDpB,SAAwBA,GACtB,OAAOA,EAAO6B,MAAMjH,KAAc,EACpC,CApDMkH,CAAe9B,GA7kBrB,SAAsBA,GACpB,OAAOA,EAAOjhB,MAAM,GACtB,CA4kBMgjB,CAAa/B,EACnB,CAUA,SAASC,GAAgBD,GAGvB,IAFA,IAAI1jB,EAAQ0jB,EAAOhlB,OAEZsB,KAAWmb,GAAa7W,KAAKof,EAAOgC,OAAO1lB,MAClD,OAAOA,CACT,CASA,IAAI2lB,GAAmBvC,GA38BH,CAClB,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,QAAS,MAk4gBPwC,GAt3ee,SAAUC,EAAa/nB,GAIxC,IA6BMgoB,EA7BF3nB,GAHJL,EAAqB,MAAXA,EAAkBwhB,GAAOsG,GAAEjV,SAAS2O,GAAK1f,SAAU9B,EAAS8nB,GAAEG,KAAKzG,GAAMZ,MAG/DvgB,MAChBT,GAAOI,EAAQJ,KACfyB,GAAQrB,EAAQqB,MAChBogB,GAAWzhB,EAAQyhB,SACnBhiB,GAAOO,EAAQP,KACfqC,GAAS9B,EAAQ8B,OACjB4a,GAAS1c,EAAQ0c,OACjBwL,GAASloB,EAAQkoB,OACjBlmB,GAAYhC,EAAQgC,UAGpBmmB,GAAa9nB,EAAM2C,UACnBolB,GAAY3G,GAASze,UACrBqlB,GAAcvmB,GAAOkB,UAGrBslB,GAAatoB,EAAQ,sBAGrBuoB,GAAeH,GAAUI,SAGzB1nB,GAAiBunB,GAAYvnB,eAG7B2nB,GAAY,EAGZC,IACEV,EAAM,SAASW,KAAKL,IAAcA,GAAW7lB,MAAQ6lB,GAAW7lB,KAAKmmB,UAAY,KACvE,iBAAmBZ,EAAO,GAQtCa,GAAuBR,GAAYG,SAGnCM,GAAmBP,GAAa1nB,KAAKiB,IAGrCinB,GAAUvH,GAAKsG,EAGfkB,GAAatM,GAAO,IACtB6L,GAAa1nB,KAAKC,IAAgBS,QAAQ2b,GAAc,QACvD3b,QAAQ,yDAA0D,SAAW,KAI5E0nB,GAASlH,GAAgB/hB,EAAQipB,OAAS9pB,EAC1C+pB,GAASlpB,EAAQkpB,OACjBC,GAAanpB,EAAQmpB,WACrBC,GAAcH,GAASA,GAAOG,YAAcjqB,EAC5CkqB,GAAetC,GAAQjlB,GAAOwnB,eAAgBxnB,IAC9CynB,GAAeznB,GAAOmB,OACtBumB,GAAuBnB,GAAYmB,qBACnC9b,GAASya,GAAWza,OACpB+b,GAAmBP,GAASA,GAAOQ,mBAAqBvqB,EACxDwqB,GAAcT,GAASA,GAAOzoB,SAAWtB,EACzCyqB,GAAiBV,GAASA,GAAOW,YAAc1qB,EAE/C2qB,GAAkB,WACpB,IACE,IAAI9G,EAAO+G,GAAUjoB,GAAQ,kBAE7B,OADAkhB,EAAK,CAAC,EAAG,GAAI,CAAC,GACPA,CACT,CAAE,MAAO5hB,GAAI,CACf,CANqB,GASjB4oB,GAAkBhqB,EAAQyW,eAAiB+K,GAAK/K,cAAgBzW,EAAQyW,aACxEwT,GAASrqB,IAAQA,GAAKD,MAAQ6hB,GAAK5hB,KAAKD,KAAOC,GAAKD,IACpDuqB,GAAgBlqB,EAAQC,aAAeuhB,GAAKvhB,YAAcD,EAAQC,WAGlEkqB,GAAa1qB,GAAK2qB,KAClBC,GAAc5qB,GAAK6qB,MACnBC,GAAmBzoB,GAAO0oB,sBAC1BC,GAAiBxB,GAASA,GAAOyB,SAAWvrB,EAC5CwrB,GAAiB3qB,EAAQ4qB,SACzBC,GAAa1C,GAAWnW,KACxB8Y,GAAa/D,GAAQjlB,GAAOW,KAAMX,IAClCipB,GAAYtrB,GAAKurB,IACjBC,GAAYxrB,GAAKyrB,IACjBC,GAAYvrB,GAAKD,IACjByrB,GAAiBprB,EAAQohB,SACzBiK,GAAe5rB,GAAK6rB,OACpBC,GAAgBpD,GAAWqD,QAG3BC,GAAW1B,GAAU/pB,EAAS,YAC9B0rB,GAAM3B,GAAU/pB,EAAS,OACzB2rB,GAAU5B,GAAU/pB,EAAS,WAC7B4rB,GAAM7B,GAAU/pB,EAAS,OACzB6rB,GAAU9B,GAAU/pB,EAAS,WAC7B8rB,GAAe/B,GAAUjoB,GAAQ,UAGjCiqB,GAAUF,IAAW,IAAIA,GAGzBG,GAAY,CAAC,EAGbC,GAAqBC,GAAST,IAC9BU,GAAgBD,GAASR,IACzBU,GAAoBF,GAASP,IAC7BU,GAAgBH,GAASN,IACzBU,GAAoBJ,GAASL,IAG7BU,GAAcrD,GAASA,GAAOlmB,UAAY7D,EAC1CqtB,GAAgBD,GAAcA,GAAYE,QAAUttB,EACpDutB,GAAiBH,GAAcA,GAAY/D,SAAWrpB,EAyH1D,SAASwtB,GAAOvb,GACd,GAAIwb,GAAaxb,KAAW9Q,GAAQ8Q,MAAYA,aAAiByb,IAAc,CAC7E,GAAIzb,aAAiB0b,GACnB,OAAO1b,EAET,GAAItQ,GAAeD,KAAKuQ,EAAO,eAC7B,OAAO2b,GAAa3b,EAExB,CACA,OAAO,IAAI0b,GAAc1b,EAC3B,CAUA,IAAI4b,GAAc,WAChB,SAAS3H,IAAU,CACnB,OAAO,SAAS4H,GACd,IAAKC,GAASD,GACZ,MAAO,CAAC,EAEV,GAAI1D,GACF,OAAOA,GAAa0D,GAEtB5H,EAAOriB,UAAYiqB,EACnB,IAAIpJ,EAAS,IAAIwB,EAEjB,OADAA,EAAOriB,UAAY7D,EACZ0kB,CACT,CACF,CAdiB,GAqBjB,SAASsJ,KAET,CASA,SAASL,GAAc1b,EAAOgc,GAC5BxrB,KAAKyrB,YAAcjc,EACnBxP,KAAK0rB,YAAc,GACnB1rB,KAAK2rB,YAAcH,EACnBxrB,KAAK4rB,UAAY,EACjB5rB,KAAK6rB,WAAatuB,CACpB,CA+EA,SAAS0tB,GAAYzb,GACnBxP,KAAKyrB,YAAcjc,EACnBxP,KAAK0rB,YAAc,GACnB1rB,KAAK8rB,QAAU,EACf9rB,KAAK+rB,cAAe,EACpB/rB,KAAKgsB,cAAgB,GACrBhsB,KAAKisB,cAAgBtT,EACrB3Y,KAAKksB,UAAY,EACnB,CA+GA,SAASC,GAAKC,GACZ,IAAI9rB,GAAS,EACTtB,EAAoB,MAAXotB,EAAkB,EAAIA,EAAQptB,OAG3C,IADAgB,KAAKqsB,UACI/rB,EAAQtB,GAAQ,CACvB,IAAIstB,EAAQF,EAAQ9rB,GACpBN,KAAKyP,IAAI6c,EAAM,GAAIA,EAAM,GAC3B,CACF,CA+FA,SAASC,GAAUH,GACjB,IAAI9rB,GAAS,EACTtB,EAAoB,MAAXotB,EAAkB,EAAIA,EAAQptB,OAG3C,IADAgB,KAAKqsB,UACI/rB,EAAQtB,GAAQ,CACvB,IAAIstB,EAAQF,EAAQ9rB,GACpBN,KAAKyP,IAAI6c,EAAM,GAAIA,EAAM,GAC3B,CACF,CA4GA,SAASE,GAASJ,GAChB,IAAI9rB,GAAS,EACTtB,EAAoB,MAAXotB,EAAkB,EAAIA,EAAQptB,OAG3C,IADAgB,KAAKqsB,UACI/rB,EAAQtB,GAAQ,CACvB,IAAIstB,EAAQF,EAAQ9rB,GACpBN,KAAKyP,IAAI6c,EAAM,GAAIA,EAAM,GAC3B,CACF,CA+FA,SAASG,GAASjpB,GAChB,IAAIlD,GAAS,EACTtB,EAAmB,MAAVwE,EAAiB,EAAIA,EAAOxE,OAGzC,IADAgB,KAAK0sB,SAAW,IAAIF,KACXlsB,EAAQtB,GACfgB,KAAKiT,IAAIzP,EAAOlD,GAEpB,CA2CA,SAASqsB,GAAMP,GACb,IAAI7V,EAAOvW,KAAK0sB,SAAW,IAAIH,GAAUH,GACzCpsB,KAAKklB,KAAO3O,EAAK2O,IACnB,CAoGA,SAAS0H,GAAcpd,EAAOqd,GAC5B,IAAIC,EAAQpuB,GAAQ8Q,GAChBud,GAASD,GAASE,GAAYxd,GAC9Byd,GAAUH,IAAUC,GAASjE,GAAStZ,GACtC0d,GAAUJ,IAAUC,IAAUE,GAAU9L,GAAa3R,GACrD2d,EAAcL,GAASC,GAASE,GAAUC,EAC1CjL,EAASkL,EAActJ,GAAUrU,EAAMxQ,OAAQsnB,IAAU,GACzDtnB,EAASijB,EAAOjjB,OAEpB,IAAK,IAAIqE,KAAOmM,GACTqd,IAAa3tB,GAAeD,KAAKuQ,EAAOnM,IACvC8pB,IAEQ,UAAP9pB,GAEC4pB,IAAkB,UAAP5pB,GAA0B,UAAPA,IAE9B6pB,IAAkB,UAAP7pB,GAA0B,cAAPA,GAA8B,cAAPA,IAEtD+pB,GAAQ/pB,EAAKrE,KAElBijB,EAAOxe,KAAKJ,GAGhB,OAAO4e,CACT,CASA,SAASoL,GAAY9L,GACnB,IAAIviB,EAASuiB,EAAMviB,OACnB,OAAOA,EAASuiB,EAAM+L,GAAW,EAAGtuB,EAAS,IAAMzB,CACrD,CAUA,SAASgwB,GAAgBhM,EAAOuC,GAC9B,OAAO0J,GAAYC,GAAUlM,GAAQmM,GAAU5J,EAAG,EAAGvC,EAAMviB,QAC7D,CASA,SAAS2uB,GAAapM,GACpB,OAAOiM,GAAYC,GAAUlM,GAC/B,CAWA,SAASqM,GAAiBnK,EAAQpgB,EAAKmM,IAChCA,IAAUjS,IAAcswB,GAAGpK,EAAOpgB,GAAMmM,IACxCA,IAAUjS,KAAe8F,KAAOogB,KACnCqK,GAAgBrK,EAAQpgB,EAAKmM,EAEjC,CAYA,SAASue,GAAYtK,EAAQpgB,EAAKmM,GAChC,IAAIwe,EAAWvK,EAAOpgB,GAChBnE,GAAeD,KAAKwkB,EAAQpgB,IAAQwqB,GAAGG,EAAUxe,KAClDA,IAAUjS,GAAe8F,KAAOogB,IACnCqK,GAAgBrK,EAAQpgB,EAAKmM,EAEjC,CAUA,SAASye,GAAa1M,EAAOle,GAE3B,IADA,IAAIrE,EAASuiB,EAAMviB,OACZA,KACL,GAAI6uB,GAAGtM,EAAMviB,GAAQ,GAAIqE,GACvB,OAAOrE,EAGX,OAAQ,CACV,CAaA,SAASkvB,GAAenL,EAAYvB,EAAQC,EAAUC,GAIpD,OAHAyM,GAASpL,GAAY,SAASvT,EAAOnM,EAAK0f,GACxCvB,EAAOE,EAAalS,EAAOiS,EAASjS,GAAQuT,EAC9C,IACOrB,CACT,CAWA,SAAS0M,GAAW3K,EAAQljB,GAC1B,OAAOkjB,GAAU4K,GAAW9tB,EAAQM,GAAKN,GAASkjB,EACpD,CAwBA,SAASqK,GAAgBrK,EAAQpgB,EAAKmM,GACzB,aAAPnM,GAAsB6kB,GACxBA,GAAezE,EAAQpgB,EAAK,CAC1B,cAAgB,EAChB,YAAc,EACd,MAASmM,EACT,UAAY,IAGdiU,EAAOpgB,GAAOmM,CAElB,CAUA,SAAS8e,GAAO7K,EAAQ8K,GAMtB,IALA,IAAIjuB,GAAS,EACTtB,EAASuvB,EAAMvvB,OACfijB,EAASxjB,EAAMO,GACfwvB,EAAiB,MAAV/K,IAEFnjB,EAAQtB,GACfijB,EAAO3hB,GAASkuB,EAAOjxB,EAAYmU,GAAI+R,EAAQ8K,EAAMjuB,IAEvD,OAAO2hB,CACT,CAWA,SAASyL,GAAUe,EAAQC,EAAOC,GAShC,OARIF,GAAWA,IACTE,IAAUpxB,IACZkxB,EAASA,GAAUE,EAAQF,EAASE,GAElCD,IAAUnxB,IACZkxB,EAASA,GAAUC,EAAQD,EAASC,IAGjCD,CACT,CAkBA,SAASG,GAAUpf,EAAOqf,EAASC,EAAYzrB,EAAKogB,EAAQ/jB,GAC1D,IAAIuiB,EACA8M,EArkFc,EAqkFLF,EACTG,EArkFc,EAqkFLH,EACTI,EArkFiB,EAqkFRJ,EAKb,GAHIC,IACF7M,EAASwB,EAASqL,EAAWtf,EAAOnM,EAAKogB,EAAQ/jB,GAASovB,EAAWtf,IAEnEyS,IAAW1kB,EACb,OAAO0kB,EAET,IAAKqJ,GAAS9b,GACZ,OAAOA,EAET,IAAIsd,EAAQpuB,GAAQ8Q,GACpB,GAAIsd,GAEF,GADA7K,EA68GJ,SAAwBV,GACtB,IAAIviB,EAASuiB,EAAMviB,OACfijB,EAAS,IAAIV,EAAMjgB,YAAYtC,GAOnC,OAJIA,GAA6B,iBAAZuiB,EAAM,IAAkBriB,GAAeD,KAAKsiB,EAAO,WACtEU,EAAO3hB,MAAQihB,EAAMjhB,MACrB2hB,EAAOlc,MAAQwb,EAAMxb,OAEhBkc,CACT,CAv9GaiN,CAAe1f,IACnBuf,EACH,OAAOtB,GAAUje,EAAOyS,OAErB,CACL,IAAIkN,EAAMC,GAAO5f,GACb6f,EAASF,GAAOjW,GAAWiW,GAAOhW,EAEtC,GAAI2P,GAAStZ,GACX,OAAO8f,GAAY9f,EAAOuf,GAE5B,GAAII,GAAO7V,GAAa6V,GAAOtW,GAAYwW,IAAW5L,GAEpD,GADAxB,EAAU+M,GAAUK,EAAU,CAAC,EAAIE,GAAgB/f,IAC9Cuf,EACH,OAAOC,EA+nEf,SAAuBzuB,EAAQkjB,GAC7B,OAAO4K,GAAW9tB,EAAQivB,GAAajvB,GAASkjB,EAClD,CAhoEYgM,CAAcjgB,EAnH1B,SAAsBiU,EAAQljB,GAC5B,OAAOkjB,GAAU4K,GAAW9tB,EAAQmvB,GAAOnvB,GAASkjB,EACtD,CAiHiCkM,CAAa1N,EAAQzS,IAknEtD,SAAqBjP,EAAQkjB,GAC3B,OAAO4K,GAAW9tB,EAAQqvB,GAAWrvB,GAASkjB,EAChD,CAnnEYoM,CAAYrgB,EAAO4e,GAAWnM,EAAQzS,QAEvC,CACL,IAAK2P,GAAcgQ,GACjB,OAAO1L,EAASjU,EAAQ,CAAC,EAE3ByS,EA49GN,SAAwBwB,EAAQ0L,EAAKJ,GACnC,IAzlDmBe,EAylDfC,EAAOtM,EAAOniB,YAClB,OAAQ6tB,GACN,KAAKtV,EACH,OAAOmW,GAAiBvM,GAE1B,KAAK1K,EACL,KAAKC,EACH,OAAO,IAAI+W,GAAMtM,GAEnB,KAAK3J,EACH,OA5nDN,SAAuBmW,EAAUlB,GAC/B,IAAImB,EAASnB,EAASiB,GAAiBC,EAASC,QAAUD,EAASC,OACnE,OAAO,IAAID,EAAS3uB,YAAY4uB,EAAQD,EAASE,WAAYF,EAASG,WACxE,CAynDaC,CAAc5M,EAAQsL,GAE/B,KAAKhV,EAAY,KAAKC,EACtB,KAAKC,EAAS,KAAKC,EAAU,KAAKC,EAClC,KAAKC,EAAU,KAAKC,EAAiB,KAAKC,EAAW,KAAKC,EACxD,OAAO+V,GAAgB7M,EAAQsL,GAEjC,KAAK3V,EACH,OAAO,IAAI2W,EAEb,KAAK1W,EACL,KAAKK,EACH,OAAO,IAAIqW,EAAKtM,GAElB,KAAKjK,EACH,OA/nDN,SAAqB+W,GACnB,IAAItO,EAAS,IAAIsO,EAAOjvB,YAAYivB,EAAOhwB,OAAQ0b,GAAQ8K,KAAKwJ,IAEhE,OADAtO,EAAOyD,UAAY6K,EAAO7K,UACnBzD,CACT,CA2nDauO,CAAY/M,GAErB,KAAKhK,EACH,OAAO,IAAIsW,EAEb,KAAKpW,EACH,OAxnDemW,EAwnDIrM,EAvnDhBmH,GAAgB1qB,GAAO0qB,GAAc3rB,KAAK6wB,IAAW,CAAC,EAynD/D,CA9/GeW,CAAejhB,EAAO2f,EAAKJ,EACtC,CACF,CAEArvB,IAAUA,EAAQ,IAAIitB,IACtB,IAAI+D,EAAUhxB,EAAMgS,IAAIlC,GACxB,GAAIkhB,EACF,OAAOA,EAEThxB,EAAM+P,IAAID,EAAOyS,GAEbhB,GAAMzR,GACRA,EAAMzQ,SAAQ,SAAS4xB,GACrB1O,EAAOhP,IAAI2b,GAAU+B,EAAU9B,EAASC,EAAY6B,EAAUnhB,EAAO9P,GACvE,IACSmhB,GAAMrR,IACfA,EAAMzQ,SAAQ,SAAS4xB,EAAUttB,GAC/B4e,EAAOxS,IAAIpM,EAAKurB,GAAU+B,EAAU9B,EAASC,EAAYzrB,EAAKmM,EAAO9P,GACvE,IAGF,IAII+J,EAAQqjB,EAAQvvB,GAJL0xB,EACVD,EAAS4B,GAAeC,GACxB7B,EAASU,GAAS7uB,IAEkB2O,GASzC,OARAmS,GAAUlY,GAAS+F,GAAO,SAASmhB,EAAUttB,GACvCoG,IAEFknB,EAAWnhB,EADXnM,EAAMstB,IAIR5C,GAAY9L,EAAQ5e,EAAKurB,GAAU+B,EAAU9B,EAASC,EAAYzrB,EAAKmM,EAAO9P,GAChF,IACOuiB,CACT,CAwBA,SAAS6O,GAAerN,EAAQljB,EAAQkJ,GACtC,IAAIzK,EAASyK,EAAMzK,OACnB,GAAc,MAAVykB,EACF,OAAQzkB,EAGV,IADAykB,EAASvjB,GAAOujB,GACTzkB,KAAU,CACf,IAAIqE,EAAMoG,EAAMzK,GACZ8iB,EAAYvhB,EAAO8C,GACnBmM,EAAQiU,EAAOpgB,GAEnB,GAAKmM,IAAUjS,KAAe8F,KAAOogB,KAAa3B,EAAUtS,GAC1D,OAAO,CAEX,CACA,OAAO,CACT,CAYA,SAASuhB,GAAU3P,EAAM4P,EAAMtvB,GAC7B,GAAmB,mBAAR0f,EACT,MAAM,IAAIhhB,GAAU+X,GAEtB,OAAO9Z,IAAW,WAAa+iB,EAAKrhB,MAAMxC,EAAWmE,EAAO,GAAGsvB,EACjE,CAaA,SAASC,GAAe1P,EAAO/d,EAAQie,EAAUY,GAC/C,IAAI/hB,GAAS,EACT4wB,EAAWhP,GACXiP,GAAW,EACXnyB,EAASuiB,EAAMviB,OACfijB,EAAS,GACTmP,EAAe5tB,EAAOxE,OAE1B,IAAKA,EACH,OAAOijB,EAELR,IACFje,EAAS8e,GAAS9e,EAAQ0gB,GAAUzC,KAElCY,GACF6O,EAAW9O,GACX+O,GAAW,GAEJ3tB,EAAOxE,QAtvFG,MAuvFjBkyB,EAAW9M,GACX+M,GAAW,EACX3tB,EAAS,IAAIipB,GAASjpB,IAExB6tB,EACA,OAAS/wB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdgxB,EAAuB,MAAZ7P,EAAmBjS,EAAQiS,EAASjS,GAGnD,GADAA,EAAS6S,GAAwB,IAAV7S,EAAeA,EAAQ,EAC1C2hB,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAIC,EAAcH,EACXG,KACL,GAAI/tB,EAAO+tB,KAAiBD,EAC1B,SAASD,EAGbpP,EAAOxe,KAAK+L,EACd,MACU0hB,EAAS1tB,EAAQ8tB,EAAUjP,IACnCJ,EAAOxe,KAAK+L,EAEhB,CACA,OAAOyS,CACT,CAlkCA8I,GAAOyG,iBAAmB,CAQxB,OAAUxW,EAQV,SAAYC,EAQZ,YAAeC,EAQf,SAAY,GAQZ,QAAW,CAQT,EAAK6P,KAKTA,GAAO3pB,UAAYmqB,GAAWnqB,UAC9B2pB,GAAO3pB,UAAUE,YAAcypB,GAE/BG,GAAc9pB,UAAYgqB,GAAWG,GAAWnqB,WAChD8pB,GAAc9pB,UAAUE,YAAc4pB,GAsHtCD,GAAY7pB,UAAYgqB,GAAWG,GAAWnqB,WAC9C6pB,GAAY7pB,UAAUE,YAAc2pB,GAoGpCkB,GAAK/qB,UAAUirB,MAvEf,WACErsB,KAAK0sB,SAAWxC,GAAeA,GAAa,MAAQ,CAAC,EACrDlqB,KAAKklB,KAAO,CACd,EAqEAiH,GAAK/qB,UAAkB,OAzDvB,SAAoBiC,GAClB,IAAI4e,EAASjiB,KAAKskB,IAAIjhB,WAAerD,KAAK0sB,SAASrpB,GAEnD,OADArD,KAAKklB,MAAQjD,EAAS,EAAI,EACnBA,CACT,EAsDAkK,GAAK/qB,UAAUsQ,IA3Cf,SAAiBrO,GACf,IAAIkT,EAAOvW,KAAK0sB,SAChB,GAAIxC,GAAc,CAChB,IAAIjI,EAAS1L,EAAKlT,GAClB,OAAO4e,IAAW7J,EAAiB7a,EAAY0kB,CACjD,CACA,OAAO/iB,GAAeD,KAAKsX,EAAMlT,GAAOkT,EAAKlT,GAAO9F,CACtD,EAqCA4uB,GAAK/qB,UAAUkjB,IA1Bf,SAAiBjhB,GACf,IAAIkT,EAAOvW,KAAK0sB,SAChB,OAAOxC,GAAgB3T,EAAKlT,KAAS9F,EAAa2B,GAAeD,KAAKsX,EAAMlT,EAC9E,EAwBA8oB,GAAK/qB,UAAUqO,IAZf,SAAiBpM,EAAKmM,GACpB,IAAI+G,EAAOvW,KAAK0sB,SAGhB,OAFA1sB,KAAKklB,MAAQllB,KAAKskB,IAAIjhB,GAAO,EAAI,EACjCkT,EAAKlT,GAAQ6mB,IAAgB1a,IAAUjS,EAAa6a,EAAiB5I,EAC9DxP,IACT,EAwHAusB,GAAUnrB,UAAUirB,MApFpB,WACErsB,KAAK0sB,SAAW,GAChB1sB,KAAKklB,KAAO,CACd,EAkFAqH,GAAUnrB,UAAkB,OAvE5B,SAAyBiC,GACvB,IAAIkT,EAAOvW,KAAK0sB,SACZpsB,EAAQ2tB,GAAa1X,EAAMlT,GAE/B,QAAI/C,EAAQ,IAIRA,GADYiW,EAAKvX,OAAS,EAE5BuX,EAAKkb,MAEL3lB,GAAO7M,KAAKsX,EAAMjW,EAAO,KAEzBN,KAAKklB,KACA,GACT,EAyDAqH,GAAUnrB,UAAUsQ,IA9CpB,SAAsBrO,GACpB,IAAIkT,EAAOvW,KAAK0sB,SACZpsB,EAAQ2tB,GAAa1X,EAAMlT,GAE/B,OAAO/C,EAAQ,EAAI/C,EAAYgZ,EAAKjW,GAAO,EAC7C,EA0CAisB,GAAUnrB,UAAUkjB,IA/BpB,SAAsBjhB,GACpB,OAAO4qB,GAAajuB,KAAK0sB,SAAUrpB,IAAQ,CAC7C,EA8BAkpB,GAAUnrB,UAAUqO,IAlBpB,SAAsBpM,EAAKmM,GACzB,IAAI+G,EAAOvW,KAAK0sB,SACZpsB,EAAQ2tB,GAAa1X,EAAMlT,GAQ/B,OANI/C,EAAQ,KACRN,KAAKklB,KACP3O,EAAK9S,KAAK,CAACJ,EAAKmM,KAEhB+G,EAAKjW,GAAO,GAAKkP,EAEZxP,IACT,EA0GAwsB,GAASprB,UAAUirB,MAtEnB,WACErsB,KAAKklB,KAAO,EACZllB,KAAK0sB,SAAW,CACd,KAAQ,IAAIP,GACZ,IAAO,IAAKrC,IAAOyC,IACnB,OAAU,IAAIJ,GAElB,EAgEAK,GAASprB,UAAkB,OArD3B,SAAwBiC,GACtB,IAAI4e,EAASyP,GAAW1xB,KAAMqD,GAAa,OAAEA,GAE7C,OADArD,KAAKklB,MAAQjD,EAAS,EAAI,EACnBA,CACT,EAkDAuK,GAASprB,UAAUsQ,IAvCnB,SAAqBrO,GACnB,OAAOquB,GAAW1xB,KAAMqD,GAAKqO,IAAIrO,EACnC,EAsCAmpB,GAASprB,UAAUkjB,IA3BnB,SAAqBjhB,GACnB,OAAOquB,GAAW1xB,KAAMqD,GAAKihB,IAAIjhB,EACnC,EA0BAmpB,GAASprB,UAAUqO,IAdnB,SAAqBpM,EAAKmM,GACxB,IAAI+G,EAAOmb,GAAW1xB,KAAMqD,GACxB6hB,EAAO3O,EAAK2O,KAIhB,OAFA3O,EAAK9G,IAAIpM,EAAKmM,GACdxP,KAAKklB,MAAQ3O,EAAK2O,MAAQA,EAAO,EAAI,EAC9BllB,IACT,EA0DAysB,GAASrrB,UAAU6R,IAAMwZ,GAASrrB,UAAUqC,KAnB5C,SAAqB+L,GAEnB,OADAxP,KAAK0sB,SAASjd,IAAID,EAAO4I,GAClBpY,IACT,EAiBAysB,GAASrrB,UAAUkjB,IANnB,SAAqB9U,GACnB,OAAOxP,KAAK0sB,SAASpI,IAAI9U,EAC3B,EAsGAmd,GAAMvrB,UAAUirB,MA3EhB,WACErsB,KAAK0sB,SAAW,IAAIH,GACpBvsB,KAAKklB,KAAO,CACd,EAyEAyH,GAAMvrB,UAAkB,OA9DxB,SAAqBiC,GACnB,IAAIkT,EAAOvW,KAAK0sB,SACZzK,EAAS1L,EAAa,OAAElT,GAG5B,OADArD,KAAKklB,KAAO3O,EAAK2O,KACVjD,CACT,EAyDA0K,GAAMvrB,UAAUsQ,IA9ChB,SAAkBrO,GAChB,OAAOrD,KAAK0sB,SAAShb,IAAIrO,EAC3B,EA6CAspB,GAAMvrB,UAAUkjB,IAlChB,SAAkBjhB,GAChB,OAAOrD,KAAK0sB,SAASpI,IAAIjhB,EAC3B,EAiCAspB,GAAMvrB,UAAUqO,IArBhB,SAAkBpM,EAAKmM,GACrB,IAAI+G,EAAOvW,KAAK0sB,SAChB,GAAInW,aAAgBgW,GAAW,CAC7B,IAAIoF,EAAQpb,EAAKmW,SACjB,IAAK5C,IAAQ6H,EAAM3yB,OAAS4yB,IAG1B,OAFAD,EAAMluB,KAAK,CAACJ,EAAKmM,IACjBxP,KAAKklB,OAAS3O,EAAK2O,KACZllB,KAETuW,EAAOvW,KAAK0sB,SAAW,IAAIF,GAASmF,EACtC,CAGA,OAFApb,EAAK9G,IAAIpM,EAAKmM,GACdxP,KAAKklB,KAAO3O,EAAK2O,KACVllB,IACT,EAqcA,IAAImuB,GAAW0D,GAAeC,IAU1BC,GAAgBF,GAAeG,IAAiB,GAWpD,SAASC,GAAUlP,EAAYjB,GAC7B,IAAIG,GAAS,EAKb,OAJAkM,GAASpL,GAAY,SAASvT,EAAOlP,EAAOyiB,GAE1C,OADAd,IAAWH,EAAUtS,EAAOlP,EAAOyiB,EAErC,IACOd,CACT,CAYA,SAASiQ,GAAa3Q,EAAOE,EAAUY,GAIrC,IAHA,IAAI/hB,GAAS,EACTtB,EAASuiB,EAAMviB,SAEVsB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdsjB,EAAUnC,EAASjS,GAEvB,GAAe,MAAXoU,IAAoB0N,IAAa/zB,EAC5BqmB,GAAYA,IAAYuO,GAASvO,GAClCvB,EAAWuB,EAAS0N,IAE1B,IAAIA,EAAW1N,EACX3B,EAASzS,CAEjB,CACA,OAAOyS,CACT,CAsCA,SAASmQ,GAAWrP,EAAYjB,GAC9B,IAAIG,EAAS,GAMb,OALAkM,GAASpL,GAAY,SAASvT,EAAOlP,EAAOyiB,GACtCjB,EAAUtS,EAAOlP,EAAOyiB,IAC1Bd,EAAOxe,KAAK+L,EAEhB,IACOyS,CACT,CAaA,SAASoQ,GAAY9Q,EAAO+Q,EAAOxQ,EAAWyQ,EAAUtQ,GACtD,IAAI3hB,GAAS,EACTtB,EAASuiB,EAAMviB,OAKnB,IAHA8iB,IAAcA,EAAY0Q,IAC1BvQ,IAAWA,EAAS,MAEX3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdgyB,EAAQ,GAAKxQ,EAAUtS,GACrB8iB,EAAQ,EAEVD,GAAY7iB,EAAO8iB,EAAQ,EAAGxQ,EAAWyQ,EAAUtQ,GAEnDM,GAAUN,EAAQzS,GAEV+iB,IACVtQ,EAAOA,EAAOjjB,QAAUwQ,EAE5B,CACA,OAAOyS,CACT,CAaA,IAAIwQ,GAAUC,KAYVC,GAAeD,IAAc,GAUjC,SAASZ,GAAWrO,EAAQhC,GAC1B,OAAOgC,GAAUgP,GAAQhP,EAAQhC,EAAU5gB,GAC7C,CAUA,SAASmxB,GAAgBvO,EAAQhC,GAC/B,OAAOgC,GAAUkP,GAAalP,EAAQhC,EAAU5gB,GAClD,CAWA,SAAS+xB,GAAcnP,EAAQha,GAC7B,OAAOsY,GAAYtY,GAAO,SAASpG,GACjC,OAAOwvB,GAAWpP,EAAOpgB,GAC3B,GACF,CAUA,SAASyvB,GAAQrP,EAAQsP,GAMvB,IAHA,IAAIzyB,EAAQ,EACRtB,GAHJ+zB,EAAOC,GAASD,EAAMtP,IAGJzkB,OAED,MAAVykB,GAAkBnjB,EAAQtB,GAC/BykB,EAASA,EAAOwP,GAAMF,EAAKzyB,OAE7B,OAAQA,GAASA,GAAStB,EAAUykB,EAASlmB,CAC/C,CAaA,SAAS21B,GAAezP,EAAQ0P,EAAUC,GACxC,IAAInR,EAASkR,EAAS1P,GACtB,OAAO/kB,GAAQ+kB,GAAUxB,EAASM,GAAUN,EAAQmR,EAAY3P,GAClE,CASA,SAAS4P,GAAW7jB,GAClB,OAAa,MAATA,EACKA,IAAUjS,EAn7FJ,qBARL,gBA67FFyqB,IAAkBA,MAAkB9nB,GAAOsP,GA23FrD,SAAmBA,GACjB,IAAI8jB,EAAQp0B,GAAeD,KAAKuQ,EAAOwY,IACnCmH,EAAM3f,EAAMwY,IAEhB,IACExY,EAAMwY,IAAkBzqB,EACxB,IAAIg2B,GAAW,CACjB,CAAE,MAAO/zB,GAAI,CAEb,IAAIyiB,EAASgF,GAAqBhoB,KAAKuQ,GAQvC,OAPI+jB,IACED,EACF9jB,EAAMwY,IAAkBmH,SAEjB3f,EAAMwY,KAGV/F,CACT,CA54FMuR,CAAUhkB,GA+5GhB,SAAwBA,GACtB,OAAOyX,GAAqBhoB,KAAKuQ,EACnC,CAh6GMikB,CAAejkB,EACrB,CAWA,SAASkkB,GAAOlkB,EAAOmkB,GACrB,OAAOnkB,EAAQmkB,CACjB,CAUA,SAASC,GAAQnQ,EAAQpgB,GACvB,OAAiB,MAAVogB,GAAkBvkB,GAAeD,KAAKwkB,EAAQpgB,EACvD,CAUA,SAASwwB,GAAUpQ,EAAQpgB,GACzB,OAAiB,MAAVogB,GAAkBpgB,KAAOnD,GAAOujB,EACzC,CAyBA,SAASqQ,GAAiBC,EAAQtS,EAAUY,GAS1C,IARA,IAAI6O,EAAW7O,EAAaD,GAAoBF,GAC5CljB,EAAS+0B,EAAO,GAAG/0B,OACnBg1B,EAAYD,EAAO/0B,OACnBi1B,EAAWD,EACXE,EAASz1B,EAAMu1B,GACfG,EAAYC,IACZnS,EAAS,GAENgS,KAAY,CACjB,IAAI1S,EAAQwS,EAAOE,GACfA,GAAYxS,IACdF,EAAQe,GAASf,EAAO2C,GAAUzC,KAEpC0S,EAAY9K,GAAU9H,EAAMviB,OAAQm1B,GACpCD,EAAOD,IAAa5R,IAAeZ,GAAaziB,GAAU,KAAOuiB,EAAMviB,QAAU,KAC7E,IAAIytB,GAASwH,GAAY1S,GACzBhkB,CACN,CACAgkB,EAAQwS,EAAO,GAEf,IAAIzzB,GAAS,EACT+zB,EAAOH,EAAO,GAElB7C,EACA,OAAS/wB,EAAQtB,GAAUijB,EAAOjjB,OAASm1B,GAAW,CACpD,IAAI3kB,EAAQ+R,EAAMjhB,GACdgxB,EAAW7P,EAAWA,EAASjS,GAASA,EAG5C,GADAA,EAAS6S,GAAwB,IAAV7S,EAAeA,EAAQ,IACxC6kB,EACEjQ,GAASiQ,EAAM/C,GACfJ,EAASjP,EAAQqP,EAAUjP,IAC5B,CAEL,IADA4R,EAAWD,IACFC,GAAU,CACjB,IAAI5P,EAAQ6P,EAAOD,GACnB,KAAM5P,EACED,GAASC,EAAOiN,GAChBJ,EAAS6C,EAAOE,GAAW3C,EAAUjP,IAE3C,SAASgP,CAEb,CACIgD,GACFA,EAAK5wB,KAAK6tB,GAEZrP,EAAOxe,KAAK+L,EACd,CACF,CACA,OAAOyS,CACT,CA8BA,SAASqS,GAAW7Q,EAAQsP,EAAMrxB,GAGhC,IAAI0f,EAAiB,OADrBqC,EAASjhB,GAAOihB,EADhBsP,EAAOC,GAASD,EAAMtP,KAEMA,EAASA,EAAOwP,GAAMpqB,GAAKkqB,KACvD,OAAe,MAAR3R,EAAe7jB,EAAYwC,GAAMqhB,EAAMqC,EAAQ/hB,EACxD,CASA,SAAS6yB,GAAgB/kB,GACvB,OAAOwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUqJ,CACrD,CAsCA,SAAS2b,GAAYhlB,EAAOmkB,EAAO9E,EAASC,EAAYpvB,GACtD,OAAI8P,IAAUmkB,IAGD,MAATnkB,GAA0B,MAATmkB,IAAmB3I,GAAaxb,KAAWwb,GAAa2I,GACpEnkB,GAAUA,GAASmkB,GAAUA,EAmBxC,SAAyBlQ,EAAQkQ,EAAO9E,EAASC,EAAY2F,EAAW/0B,GACtE,IAAIg1B,EAAWh2B,GAAQ+kB,GACnBkR,EAAWj2B,GAAQi1B,GACnBiB,EAASF,EAAW5b,EAAWsW,GAAO3L,GACtCoR,EAASF,EAAW7b,EAAWsW,GAAOuE,GAKtCmB,GAHJF,EAASA,GAAU/b,EAAUS,EAAYsb,IAGhBtb,EACrByb,GAHJF,EAASA,GAAUhc,EAAUS,EAAYub,IAGhBvb,EACrB0b,EAAYJ,GAAUC,EAE1B,GAAIG,GAAalM,GAASrF,GAAS,CACjC,IAAKqF,GAAS6K,GACZ,OAAO,EAETe,GAAW,EACXI,GAAW,CACb,CACA,GAAIE,IAAcF,EAEhB,OADAp1B,IAAUA,EAAQ,IAAIitB,IACd+H,GAAYvT,GAAasC,GAC7BwR,GAAYxR,EAAQkQ,EAAO9E,EAASC,EAAY2F,EAAW/0B,GA81EnE,SAAoB+jB,EAAQkQ,EAAOxE,EAAKN,EAASC,EAAY2F,EAAW/0B,GACtE,OAAQyvB,GACN,KAAKrV,EACH,GAAK2J,EAAO2M,YAAcuD,EAAMvD,YAC3B3M,EAAO0M,YAAcwD,EAAMxD,WAC9B,OAAO,EAET1M,EAASA,EAAOyM,OAChByD,EAAQA,EAAMzD,OAEhB,KAAKrW,EACH,QAAK4J,EAAO2M,YAAcuD,EAAMvD,aAC3BqE,EAAU,IAAIlN,GAAW9D,GAAS,IAAI8D,GAAWoM,KAKxD,KAAK5a,EACL,KAAKC,EACL,KAAKK,EAGH,OAAOwU,IAAIpK,GAASkQ,GAEtB,KAAK1a,EACH,OAAOwK,EAAOpkB,MAAQs0B,EAAMt0B,MAAQokB,EAAOnkB,SAAWq0B,EAAMr0B,QAE9D,KAAKka,EACL,KAAKE,EAIH,OAAO+J,GAAWkQ,EAAQ,GAE5B,KAAKva,EACH,IAAI8b,EAAUlQ,GAEhB,KAAKvL,EACH,IAAI0b,EAxnLe,EAwnLHtG,EAGhB,GAFAqG,IAAYA,EAAU3P,IAElB9B,EAAOyB,MAAQyO,EAAMzO,OAASiQ,EAChC,OAAO,EAGT,IAAIzE,EAAUhxB,EAAMgS,IAAI+R,GACxB,GAAIiN,EACF,OAAOA,GAAWiD,EAEpB9E,GAloLqB,EAqoLrBnvB,EAAM+P,IAAIgU,EAAQkQ,GAClB,IAAI1R,EAASgT,GAAYC,EAAQzR,GAASyR,EAAQvB,GAAQ9E,EAASC,EAAY2F,EAAW/0B,GAE1F,OADAA,EAAc,OAAE+jB,GACTxB,EAET,KAAKtI,EACH,GAAIiR,GACF,OAAOA,GAAc3rB,KAAKwkB,IAAWmH,GAAc3rB,KAAK00B,GAG9D,OAAO,CACT,CA55EQyB,CAAW3R,EAAQkQ,EAAOiB,EAAQ/F,EAASC,EAAY2F,EAAW/0B,GAExE,KAvvGuB,EAuvGjBmvB,GAAiC,CACrC,IAAIwG,EAAeP,GAAY51B,GAAeD,KAAKwkB,EAAQ,eACvD6R,EAAeP,GAAY71B,GAAeD,KAAK00B,EAAO,eAE1D,GAAI0B,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAe5R,EAAOjU,QAAUiU,EAC/C+R,EAAeF,EAAe3B,EAAMnkB,QAAUmkB,EAGlD,OADAj0B,IAAUA,EAAQ,IAAIitB,IACf8H,EAAUc,EAAcC,EAAc3G,EAASC,EAAYpvB,EACpE,CACF,CACA,QAAKs1B,IAGLt1B,IAAUA,EAAQ,IAAIitB,IA05ExB,SAAsBlJ,EAAQkQ,EAAO9E,EAASC,EAAY2F,EAAW/0B,GACnE,IAAIy1B,EAjqLmB,EAiqLPtG,EACZ4G,EAAW5E,GAAWpN,GACtBiS,EAAYD,EAASz2B,OAIzB,GAAI02B,GAHW7E,GAAW8C,GACD30B,SAEMm2B,EAC7B,OAAO,EAGT,IADA,IAAI70B,EAAQo1B,EACLp1B,KAAS,CACd,IAAI+C,EAAMoyB,EAASn1B,GACnB,KAAM60B,EAAY9xB,KAAOswB,EAAQz0B,GAAeD,KAAK00B,EAAOtwB,IAC1D,OAAO,CAEX,CAEA,IAAIsyB,EAAaj2B,EAAMgS,IAAI+R,GACvBmS,EAAal2B,EAAMgS,IAAIiiB,GAC3B,GAAIgC,GAAcC,EAChB,OAAOD,GAAchC,GAASiC,GAAcnS,EAE9C,IAAIxB,GAAS,EACbviB,EAAM+P,IAAIgU,EAAQkQ,GAClBj0B,EAAM+P,IAAIkkB,EAAOlQ,GAGjB,IADA,IAAIoS,EAAWV,IACN70B,EAAQo1B,GAAW,CAE1B,IAAI1H,EAAWvK,EADfpgB,EAAMoyB,EAASn1B,IAEXw1B,EAAWnC,EAAMtwB,GAErB,GAAIyrB,EACF,IAAIiH,EAAWZ,EACXrG,EAAWgH,EAAU9H,EAAU3qB,EAAKswB,EAAOlQ,EAAQ/jB,GACnDovB,EAAWd,EAAU8H,EAAUzyB,EAAKogB,EAAQkQ,EAAOj0B,GAGzD,KAAMq2B,IAAax4B,EACVywB,IAAa8H,GAAYrB,EAAUzG,EAAU8H,EAAUjH,EAASC,EAAYpvB,GAC7Eq2B,GACD,CACL9T,GAAS,EACT,KACF,CACA4T,IAAaA,EAAkB,eAAPxyB,EAC1B,CACA,GAAI4e,IAAW4T,EAAU,CACvB,IAAIG,EAAUvS,EAAOniB,YACjB20B,EAAUtC,EAAMryB,YAGhB00B,GAAWC,KACV,gBAAiBxS,MAAU,gBAAiBkQ,IACzB,mBAAXqC,GAAyBA,aAAmBA,GACjC,mBAAXC,GAAyBA,aAAmBA,IACvDhU,GAAS,EAEb,CAGA,OAFAviB,EAAc,OAAE+jB,GAChB/jB,EAAc,OAAEi0B,GACT1R,CACT,CAx9ESiU,CAAazS,EAAQkQ,EAAO9E,EAASC,EAAY2F,EAAW/0B,GACrE,CA5DSy2B,CAAgB3mB,EAAOmkB,EAAO9E,EAASC,EAAY0F,GAAa90B,GACzE,CAkFA,SAAS02B,GAAY3S,EAAQljB,EAAQ81B,EAAWvH,GAC9C,IAAIxuB,EAAQ+1B,EAAUr3B,OAClBA,EAASsB,EACTg2B,GAAgBxH,EAEpB,GAAc,MAAVrL,EACF,OAAQzkB,EAGV,IADAykB,EAASvjB,GAAOujB,GACTnjB,KAAS,CACd,IAAIiW,EAAO8f,EAAU/1B,GACrB,GAAKg2B,GAAgB/f,EAAK,GAClBA,EAAK,KAAOkN,EAAOlN,EAAK,MACtBA,EAAK,KAAMkN,GAEnB,OAAO,CAEX,CACA,OAASnjB,EAAQtB,GAAQ,CAEvB,IAAIqE,GADJkT,EAAO8f,EAAU/1B,IACF,GACX0tB,EAAWvK,EAAOpgB,GAClBkzB,EAAWhgB,EAAK,GAEpB,GAAI+f,GAAgB/f,EAAK,IACvB,GAAIyX,IAAazwB,KAAe8F,KAAOogB,GACrC,OAAO,MAEJ,CACL,IAAI/jB,EAAQ,IAAIitB,GAChB,GAAImC,EACF,IAAI7M,EAAS6M,EAAWd,EAAUuI,EAAUlzB,EAAKogB,EAAQljB,EAAQb,GAEnE,KAAMuiB,IAAW1kB,EACTi3B,GAAY+B,EAAUvI,EAAUwI,EAA+C1H,EAAYpvB,GAC3FuiB,GAEN,OAAO,CAEX,CACF,CACA,OAAO,CACT,CAUA,SAASwU,GAAajnB,GACpB,SAAK8b,GAAS9b,KA05FE4R,EA15FiB5R,EA25FxBsX,IAAeA,MAAc1F,MAx5FxByR,GAAWrjB,GAAS4X,GAAahL,IAChCxX,KAAK0lB,GAAS9a,IAs5F/B,IAAkB4R,CAr5FlB,CA2CA,SAASsV,GAAalnB,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACKmnB,GAEW,iBAATnnB,EACF9Q,GAAQ8Q,GACXonB,GAAoBpnB,EAAM,GAAIA,EAAM,IACpCqnB,GAAYrnB,GAEX3L,GAAS2L,EAClB,CASA,SAASsnB,GAASrT,GAChB,IAAKsT,GAAYtT,GACf,OAAOyF,GAAWzF,GAEpB,IAAIxB,EAAS,GACb,IAAK,IAAI5e,KAAOnD,GAAOujB,GACjBvkB,GAAeD,KAAKwkB,EAAQpgB,IAAe,eAAPA,GACtC4e,EAAOxe,KAAKJ,GAGhB,OAAO4e,CACT,CAiCA,SAAS+U,GAAOxnB,EAAOmkB,GACrB,OAAOnkB,EAAQmkB,CACjB,CAUA,SAASsD,GAAQlU,EAAYtB,GAC3B,IAAInhB,GAAS,EACT2hB,EAASiV,GAAYnU,GAActkB,EAAMskB,EAAW/jB,QAAU,GAKlE,OAHAmvB,GAASpL,GAAY,SAASvT,EAAOnM,EAAK0f,GACxCd,IAAS3hB,GAASmhB,EAASjS,EAAOnM,EAAK0f,EACzC,IACOd,CACT,CASA,SAAS4U,GAAYt2B,GACnB,IAAI81B,EAAYc,GAAa52B,GAC7B,OAAwB,GAApB81B,EAAUr3B,QAAeq3B,EAAU,GAAG,GACjCe,GAAwBf,EAAU,GAAG,GAAIA,EAAU,GAAG,IAExD,SAAS5S,GACd,OAAOA,IAAWljB,GAAU61B,GAAY3S,EAAQljB,EAAQ81B,EAC1D,CACF,CAUA,SAASO,GAAoB7D,EAAMwD,GACjC,OAAIc,GAAMtE,IAASuE,GAAmBf,GAC7Ba,GAAwBnE,GAAMF,GAAOwD,GAEvC,SAAS9S,GACd,IAAIuK,EAAWtc,GAAI+R,EAAQsP,GAC3B,OAAQ/E,IAAazwB,GAAaywB,IAAauI,EAC3CgB,GAAM9T,EAAQsP,GACdyB,GAAY+B,EAAUvI,EAAUwI,EACtC,CACF,CAaA,SAASgB,GAAU/T,EAAQljB,EAAQk3B,EAAU3I,EAAYpvB,GACnD+jB,IAAWljB,GAGfkyB,GAAQlyB,GAAQ,SAASg2B,EAAUlzB,GAEjC,GADA3D,IAAUA,EAAQ,IAAIitB,IAClBrB,GAASiL,IA+BjB,SAAuB9S,EAAQljB,EAAQ8C,EAAKo0B,EAAUC,EAAW5I,EAAYpvB,GAC3E,IAAIsuB,EAAW2J,GAAQlU,EAAQpgB,GAC3BkzB,EAAWoB,GAAQp3B,EAAQ8C,GAC3BqtB,EAAUhxB,EAAMgS,IAAI6kB,GAExB,GAAI7F,EACF9C,GAAiBnK,EAAQpgB,EAAKqtB,OADhC,CAIA,IAAIkH,EAAW9I,EACXA,EAAWd,EAAUuI,EAAWlzB,EAAM,GAAKogB,EAAQljB,EAAQb,GAC3DnC,EAEA4zB,EAAWyG,IAAar6B,EAE5B,GAAI4zB,EAAU,CACZ,IAAIrE,EAAQpuB,GAAQ63B,GAChBtJ,GAAUH,GAAShE,GAASyN,GAC5BsB,GAAW/K,IAAUG,GAAU9L,GAAaoV,GAEhDqB,EAAWrB,EACPzJ,GAASG,GAAU4K,EACjBn5B,GAAQsvB,GACV4J,EAAW5J,EAEJ8J,GAAkB9J,GACzB4J,EAAWnK,GAAUO,GAEdf,GACPkE,GAAW,EACXyG,EAAWtI,GAAYiH,GAAU,IAE1BsB,GACP1G,GAAW,EACXyG,EAAWtH,GAAgBiG,GAAU,IAGrCqB,EAAW,GAGNG,GAAcxB,IAAavJ,GAAYuJ,IAC9CqB,EAAW5J,EACPhB,GAAYgB,GACd4J,EAAWI,GAAchK,GAEjB1C,GAAS0C,KAAa6E,GAAW7E,KACzC4J,EAAWrI,GAAgBgH,KAI7BpF,GAAW,CAEf,CACIA,IAEFzxB,EAAM+P,IAAI8mB,EAAUqB,GACpBF,EAAUE,EAAUrB,EAAUkB,EAAU3I,EAAYpvB,GACpDA,EAAc,OAAE62B,IAElB3I,GAAiBnK,EAAQpgB,EAAKu0B,EAnD9B,CAoDF,CA1FMK,CAAcxU,EAAQljB,EAAQ8C,EAAKo0B,EAAUD,GAAW1I,EAAYpvB,OAEjE,CACH,IAAIk4B,EAAW9I,EACXA,EAAW6I,GAAQlU,EAAQpgB,GAAMkzB,EAAWlzB,EAAM,GAAKogB,EAAQljB,EAAQb,GACvEnC,EAEAq6B,IAAar6B,IACfq6B,EAAWrB,GAEb3I,GAAiBnK,EAAQpgB,EAAKu0B,EAChC,CACF,GAAGlI,GACL,CAuFA,SAASwI,GAAQ3W,EAAOuC,GACtB,IAAI9kB,EAASuiB,EAAMviB,OACnB,GAAKA,EAIL,OAAOouB,GADPtJ,GAAKA,EAAI,EAAI9kB,EAAS,EACJA,GAAUuiB,EAAMuC,GAAKvmB,CACzC,CAWA,SAAS46B,GAAYpV,EAAYqV,EAAWC,GAExCD,EADEA,EAAUp5B,OACAsjB,GAAS8V,GAAW,SAAS3W,GACvC,OAAI/iB,GAAQ+iB,GACH,SAASjS,GACd,OAAOsjB,GAAQtjB,EAA2B,IAApBiS,EAASziB,OAAeyiB,EAAS,GAAKA,EAC9D,EAEKA,CACT,IAEY,CAACkV,IAGf,IAAIr2B,GAAS,EACb83B,EAAY9V,GAAS8V,EAAWlU,GAAUoU,OAE1C,IAAIrW,EAASgV,GAAQlU,GAAY,SAASvT,EAAOnM,EAAK0f,GACpD,IAAIwV,EAAWjW,GAAS8V,GAAW,SAAS3W,GAC1C,OAAOA,EAASjS,EAClB,IACA,MAAO,CAAE,SAAY+oB,EAAU,QAAWj4B,EAAO,MAASkP,EAC5D,IAEA,OA5xFJ,SAAoB+R,GAClB,IAAIviB,EAASuiB,EAAMviB,OAGnB,IADAuiB,EAAMje,MAyxFsB,SAASmgB,EAAQkQ,GACzC,OA04BJ,SAAyBlQ,EAAQkQ,EAAO0E,GAOtC,IANA,IAAI/3B,GAAS,EACTk4B,EAAc/U,EAAO8U,SACrBE,EAAc9E,EAAM4E,SACpBv5B,EAASw5B,EAAYx5B,OACrB05B,EAAeL,EAAOr5B,SAEjBsB,EAAQtB,GAAQ,CACvB,IAAIijB,EAAS0W,GAAiBH,EAAYl4B,GAAQm4B,EAAYn4B,IAC9D,GAAI2hB,EACF,OAAI3hB,GAASo4B,EACJzW,EAGFA,GAAmB,QADdoW,EAAO/3B,IACiB,EAAI,EAE5C,CAQA,OAAOmjB,EAAOnjB,MAAQqzB,EAAMrzB,KAC9B,CAn6BWs4B,CAAgBnV,EAAQkQ,EAAO0E,EACxC,IA1xFKr5B,KACLuiB,EAAMviB,GAAUuiB,EAAMviB,GAAQwQ,MAEhC,OAAO+R,CACT,CAoxFWsX,CAAW5W,EAGpB,CA0BA,SAAS6W,GAAWrV,EAAQ8K,EAAOzM,GAKjC,IAJA,IAAIxhB,GAAS,EACTtB,EAASuvB,EAAMvvB,OACfijB,EAAS,CAAC,IAEL3hB,EAAQtB,GAAQ,CACvB,IAAI+zB,EAAOxE,EAAMjuB,GACbkP,EAAQsjB,GAAQrP,EAAQsP,GAExBjR,EAAUtS,EAAOujB,IACnBgG,GAAQ9W,EAAQ+Q,GAASD,EAAMtP,GAASjU,EAE5C,CACA,OAAOyS,CACT,CA0BA,SAAS+W,GAAYzX,EAAO/d,EAAQie,EAAUY,GAC5C,IAAIxf,EAAUwf,EAAaiB,GAAkBnB,GACzC7hB,GAAS,EACTtB,EAASwE,EAAOxE,OAChBq1B,EAAO9S,EAQX,IANIA,IAAU/d,IACZA,EAASiqB,GAAUjqB,IAEjBie,IACF4S,EAAO/R,GAASf,EAAO2C,GAAUzC,OAE1BnhB,EAAQtB,GAKf,IAJA,IAAIkkB,EAAY,EACZ1T,EAAQhM,EAAOlD,GACfgxB,EAAW7P,EAAWA,EAASjS,GAASA,GAEpC0T,EAAYrgB,EAAQwxB,EAAM/C,EAAUpO,EAAWb,KAAgB,GACjEgS,IAAS9S,GACXzV,GAAO7M,KAAKo1B,EAAMnR,EAAW,GAE/BpX,GAAO7M,KAAKsiB,EAAO2B,EAAW,GAGlC,OAAO3B,CACT,CAWA,SAAS0X,GAAW1X,EAAO2X,GAIzB,IAHA,IAAIl6B,EAASuiB,EAAQ2X,EAAQl6B,OAAS,EAClC0mB,EAAY1mB,EAAS,EAElBA,KAAU,CACf,IAAIsB,EAAQ44B,EAAQl6B,GACpB,GAAIA,GAAU0mB,GAAaplB,IAAU64B,EAAU,CAC7C,IAAIA,EAAW74B,EACX8sB,GAAQ9sB,GACVwL,GAAO7M,KAAKsiB,EAAOjhB,EAAO,GAE1B84B,GAAU7X,EAAOjhB,EAErB,CACF,CACA,OAAOihB,CACT,CAWA,SAAS+L,GAAWoB,EAAOC,GACzB,OAAOD,EAAQjG,GAAYgB,MAAkBkF,EAAQD,EAAQ,GAC/D,CAiCA,SAAS2K,GAAWrV,EAAQF,GAC1B,IAAI7B,EAAS,GACb,IAAK+B,GAAUF,EAAI,GAAKA,EAAIrL,EAC1B,OAAOwJ,EAIT,GACM6B,EAAI,IACN7B,GAAU+B,IAEZF,EAAI2E,GAAY3E,EAAI,MAElBE,GAAUA,SAELF,GAET,OAAO7B,CACT,CAUA,SAASqX,GAASlY,EAAMrZ,GACtB,OAAOwxB,GAAYC,GAASpY,EAAMrZ,EAAO4uB,IAAWvV,EAAO,GAC7D,CASA,SAASqY,GAAW1W,GAClB,OAAOsK,GAAY7pB,GAAOuf,GAC5B,CAUA,SAAS2W,GAAe3W,EAAYe,GAClC,IAAIvC,EAAQ/d,GAAOuf,GACnB,OAAOyK,GAAYjM,EAAOmM,GAAU5J,EAAG,EAAGvC,EAAMviB,QAClD,CAYA,SAAS+5B,GAAQtV,EAAQsP,EAAMvjB,EAAOsf,GACpC,IAAKxD,GAAS7H,GACZ,OAAOA,EAST,IALA,IAAInjB,GAAS,EACTtB,GAHJ+zB,EAAOC,GAASD,EAAMtP,IAGJzkB,OACd0mB,EAAY1mB,EAAS,EACrB26B,EAASlW,EAEI,MAAVkW,KAAoBr5B,EAAQtB,GAAQ,CACzC,IAAIqE,EAAM4vB,GAAMF,EAAKzyB,IACjBs3B,EAAWpoB,EAEf,GAAY,cAARnM,GAA+B,gBAARA,GAAiC,cAARA,EAClD,OAAOogB,EAGT,GAAInjB,GAASolB,EAAW,CACtB,IAAIsI,EAAW2L,EAAOt2B,IACtBu0B,EAAW9I,EAAaA,EAAWd,EAAU3qB,EAAKs2B,GAAUp8B,KAC3CA,IACfq6B,EAAWtM,GAAS0C,GAChBA,EACCZ,GAAQ2F,EAAKzyB,EAAQ,IAAM,GAAK,CAAC,EAE1C,CACAytB,GAAY4L,EAAQt2B,EAAKu0B,GACzB+B,EAASA,EAAOt2B,EAClB,CACA,OAAOogB,CACT,CAUA,IAAImW,GAAezP,GAAqB,SAAS/I,EAAM7K,GAErD,OADA4T,GAAQ1a,IAAI2R,EAAM7K,GACX6K,CACT,EAH6BuV,GAazBkD,GAAmB3R,GAA4B,SAAS9G,EAAM4C,GAChE,OAAOkE,GAAe9G,EAAM,WAAY,CACtC,cAAgB,EAChB,YAAc,EACd,MAAS0Y,GAAS9V,GAClB,UAAY,GAEhB,EAPwC2S,GAgBxC,SAASoD,GAAYhX,GACnB,OAAOyK,GAAYhqB,GAAOuf,GAC5B,CAWA,SAASiX,GAAUzY,EAAOxZ,EAAOC,GAC/B,IAAI1H,GAAS,EACTtB,EAASuiB,EAAMviB,OAEf+I,EAAQ,IACVA,GAASA,EAAQ/I,EAAS,EAAKA,EAAS+I,IAE1CC,EAAMA,EAAMhJ,EAASA,EAASgJ,GACpB,IACRA,GAAOhJ,GAETA,EAAS+I,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIka,EAASxjB,EAAMO,KACVsB,EAAQtB,GACfijB,EAAO3hB,GAASihB,EAAMjhB,EAAQyH,GAEhC,OAAOka,CACT,CAWA,SAASgY,GAASlX,EAAYjB,GAC5B,IAAIG,EAMJ,OAJAkM,GAASpL,GAAY,SAASvT,EAAOlP,EAAOyiB,GAE1C,QADAd,EAASH,EAAUtS,EAAOlP,EAAOyiB,GAEnC,MACSd,CACX,CAcA,SAASiY,GAAgB3Y,EAAO/R,EAAO2qB,GACrC,IAAIC,EAAM,EACNC,EAAgB,MAAT9Y,EAAgB6Y,EAAM7Y,EAAMviB,OAEvC,GAAoB,iBAATwQ,GAAqBA,GAAUA,GAAS6qB,GAn/H3B1hB,WAm/H0D,CAChF,KAAOyhB,EAAMC,GAAM,CACjB,IAAIC,EAAOF,EAAMC,IAAU,EACvB/I,EAAW/P,EAAM+Y,GAEJ,OAAbhJ,IAAsBa,GAASb,KAC9B6I,EAAc7I,GAAY9hB,EAAU8hB,EAAW9hB,GAClD4qB,EAAME,EAAM,EAEZD,EAAOC,CAEX,CACA,OAAOD,CACT,CACA,OAAOE,GAAkBhZ,EAAO/R,EAAOmnB,GAAUwD,EACnD,CAeA,SAASI,GAAkBhZ,EAAO/R,EAAOiS,EAAU0Y,GACjD,IAAIC,EAAM,EACNC,EAAgB,MAAT9Y,EAAgB,EAAIA,EAAMviB,OACrC,GAAa,IAATq7B,EACF,OAAO,EAST,IALA,IAAIG,GADJhrB,EAAQiS,EAASjS,KACQA,EACrBirB,EAAsB,OAAVjrB,EACZkrB,EAAcvI,GAAS3iB,GACvBmrB,EAAiBnrB,IAAUjS,EAExB68B,EAAMC,GAAM,CACjB,IAAIC,EAAM7R,IAAa2R,EAAMC,GAAQ,GACjC/I,EAAW7P,EAASF,EAAM+Y,IAC1BM,EAAetJ,IAAa/zB,EAC5Bs9B,EAAyB,OAAbvJ,EACZwJ,EAAiBxJ,GAAaA,EAC9ByJ,EAAc5I,GAASb,GAE3B,GAAIkJ,EACF,IAAIQ,EAASb,GAAcW,OAE3BE,EADSL,EACAG,IAAmBX,GAAcS,GACjCH,EACAK,GAAkBF,IAAiBT,IAAeU,GAClDH,EACAI,GAAkBF,IAAiBC,IAAcV,IAAeY,IAChEF,IAAaE,IAGbZ,EAAc7I,GAAY9hB,EAAU8hB,EAAW9hB,GAEtDwrB,EACFZ,EAAME,EAAM,EAEZD,EAAOC,CAEX,CACA,OAAOjR,GAAUgR,EA1jIC1hB,WA2jIpB,CAWA,SAASsiB,GAAe1Z,EAAOE,GAM7B,IALA,IAAInhB,GAAS,EACTtB,EAASuiB,EAAMviB,OACfgjB,EAAW,EACXC,EAAS,KAEJ3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdgxB,EAAW7P,EAAWA,EAASjS,GAASA,EAE5C,IAAKlP,IAAUutB,GAAGyD,EAAU+C,GAAO,CACjC,IAAIA,EAAO/C,EACXrP,EAAOD,KAAwB,IAAVxS,EAAc,EAAIA,CACzC,CACF,CACA,OAAOyS,CACT,CAUA,SAASiZ,GAAa1rB,GACpB,MAAoB,iBAATA,EACFA,EAEL2iB,GAAS3iB,GACJkJ,GAEDlJ,CACV,CAUA,SAAS2rB,GAAa3rB,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI9Q,GAAQ8Q,GAEV,OAAO8S,GAAS9S,EAAO2rB,IAAgB,GAEzC,GAAIhJ,GAAS3iB,GACX,OAAOsb,GAAiBA,GAAe7rB,KAAKuQ,GAAS,GAEvD,IAAIyS,EAAUzS,EAAQ,GACtB,MAAkB,KAAVyS,GAAkB,EAAIzS,IAAU,IAAa,KAAOyS,CAC9D,CAWA,SAASmZ,GAAS7Z,EAAOE,EAAUY,GACjC,IAAI/hB,GAAS,EACT4wB,EAAWhP,GACXljB,EAASuiB,EAAMviB,OACfmyB,GAAW,EACXlP,EAAS,GACToS,EAAOpS,EAEX,GAAII,EACF8O,GAAW,EACXD,EAAW9O,QAER,GAAIpjB,GAjtIU,IAitIkB,CACnC,IAAIyQ,EAAMgS,EAAW,KAAO4Z,GAAU9Z,GACtC,GAAI9R,EACF,OAAO8V,GAAW9V,GAEpB0hB,GAAW,EACXD,EAAW9M,GACXiQ,EAAO,IAAI5H,EACb,MAEE4H,EAAO5S,EAAW,GAAKQ,EAEzBoP,EACA,OAAS/wB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdgxB,EAAW7P,EAAWA,EAASjS,GAASA,EAG5C,GADAA,EAAS6S,GAAwB,IAAV7S,EAAeA,EAAQ,EAC1C2hB,GAAYG,GAAaA,EAAU,CAErC,IADA,IAAIgK,EAAYjH,EAAKr1B,OACds8B,KACL,GAAIjH,EAAKiH,KAAehK,EACtB,SAASD,EAGT5P,GACF4S,EAAK5wB,KAAK6tB,GAEZrP,EAAOxe,KAAK+L,EACd,MACU0hB,EAASmD,EAAM/C,EAAUjP,KAC7BgS,IAASpS,GACXoS,EAAK5wB,KAAK6tB,GAEZrP,EAAOxe,KAAK+L,GAEhB,CACA,OAAOyS,CACT,CAUA,SAASmX,GAAU3V,EAAQsP,GAGzB,OAAiB,OADjBtP,EAASjhB,GAAOihB,EADhBsP,EAAOC,GAASD,EAAMtP,aAEUA,EAAOwP,GAAMpqB,GAAKkqB,IACpD,CAYA,SAASwI,GAAW9X,EAAQsP,EAAMyI,EAAS1M,GACzC,OAAOiK,GAAQtV,EAAQsP,EAAMyI,EAAQ1I,GAAQrP,EAAQsP,IAAQjE,EAC/D,CAaA,SAAS2M,GAAUla,EAAOO,EAAW4Z,EAAQvY,GAI3C,IAHA,IAAInkB,EAASuiB,EAAMviB,OACfsB,EAAQ6iB,EAAYnkB,GAAU,GAE1BmkB,EAAY7iB,MAAYA,EAAQtB,IACtC8iB,EAAUP,EAAMjhB,GAAQA,EAAOihB,KAEjC,OAAOma,EACH1B,GAAUzY,EAAQ4B,EAAY,EAAI7iB,EAAS6iB,EAAY7iB,EAAQ,EAAItB,GACnEg7B,GAAUzY,EAAQ4B,EAAY7iB,EAAQ,EAAI,EAAK6iB,EAAYnkB,EAASsB,EAC1E,CAYA,SAASq7B,GAAiBnsB,EAAOG,GAC/B,IAAIsS,EAASzS,EAIb,OAHIyS,aAAkBgJ,KACpBhJ,EAASA,EAAOzS,SAEXgT,GAAY7S,GAAS,SAASsS,EAAQ2Z,GAC3C,OAAOA,EAAOxa,KAAKrhB,MAAM67B,EAAOva,QAASkB,GAAU,CAACN,GAAS2Z,EAAOl6B,MACtE,GAAGugB,EACL,CAYA,SAAS4Z,GAAQ9H,EAAQtS,EAAUY,GACjC,IAAIrjB,EAAS+0B,EAAO/0B,OACpB,GAAIA,EAAS,EACX,OAAOA,EAASo8B,GAASrH,EAAO,IAAM,GAKxC,IAHA,IAAIzzB,GAAS,EACT2hB,EAASxjB,EAAMO,KAEVsB,EAAQtB,GAIf,IAHA,IAAIuiB,EAAQwS,EAAOzzB,GACf2zB,GAAY,IAEPA,EAAWj1B,GACdi1B,GAAY3zB,IACd2hB,EAAO3hB,GAAS2wB,GAAehP,EAAO3hB,IAAUihB,EAAOwS,EAAOE,GAAWxS,EAAUY,IAIzF,OAAO+Y,GAAS/I,GAAYpQ,EAAQ,GAAIR,EAAUY,EACpD,CAWA,SAASyZ,GAAcryB,EAAOjG,EAAQu4B,GAMpC,IALA,IAAIz7B,GAAS,EACTtB,EAASyK,EAAMzK,OACfg9B,EAAax4B,EAAOxE,OACpBijB,EAAS,CAAC,IAEL3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQlP,EAAQ07B,EAAax4B,EAAOlD,GAAS/C,EACjDw+B,EAAW9Z,EAAQxY,EAAMnJ,GAAQkP,EACnC,CACA,OAAOyS,CACT,CASA,SAASga,GAAoBzsB,GAC3B,OAAOsoB,GAAkBtoB,GAASA,EAAQ,EAC5C,CASA,SAAS0sB,GAAa1sB,GACpB,MAAuB,mBAATA,EAAsBA,EAAQmnB,EAC9C,CAUA,SAAS3D,GAASxjB,EAAOiU,GACvB,OAAI/kB,GAAQ8Q,GACHA,EAEF6nB,GAAM7nB,EAAOiU,GAAU,CAACjU,GAAS2sB,GAAavV,GAASpX,GAChE,CAWA,IAAI4sB,GAAW9C,GAWf,SAAS+C,GAAU9a,EAAOxZ,EAAOC,GAC/B,IAAIhJ,EAASuiB,EAAMviB,OAEnB,OADAgJ,EAAMA,IAAQzK,EAAYyB,EAASgJ,GAC1BD,GAASC,GAAOhJ,EAAUuiB,EAAQyY,GAAUzY,EAAOxZ,EAAOC,EACrE,CAQA,IAAI6M,GAAeuT,IAAmB,SAASlX,GAC7C,OAAO0O,GAAK/K,aAAa3D,EAC3B,EAUA,SAASoe,GAAYY,EAAQnB,GAC3B,GAAIA,EACF,OAAOmB,EAAO/sB,QAEhB,IAAInE,EAASkxB,EAAOlxB,OAChBijB,EAASuF,GAAcA,GAAYxoB,GAAU,IAAIkxB,EAAO5uB,YAAYtC,GAGxE,OADAkxB,EAAOoM,KAAKra,GACLA,CACT,CASA,SAAS+N,GAAiBuM,GACxB,IAAIta,EAAS,IAAIsa,EAAYj7B,YAAYi7B,EAAYnM,YAErD,OADA,IAAI7I,GAAWtF,GAAQxS,IAAI,IAAI8X,GAAWgV,IACnCta,CACT,CA+CA,SAASqO,GAAgBkM,EAAYzN,GACnC,IAAImB,EAASnB,EAASiB,GAAiBwM,EAAWtM,QAAUsM,EAAWtM,OACvE,OAAO,IAAIsM,EAAWl7B,YAAY4uB,EAAQsM,EAAWrM,WAAYqM,EAAWx9B,OAC9E,CAUA,SAAS25B,GAAiBnpB,EAAOmkB,GAC/B,GAAInkB,IAAUmkB,EAAO,CACnB,IAAI8I,EAAejtB,IAAUjS,EACzBk9B,EAAsB,OAAVjrB,EACZktB,EAAiBltB,GAAUA,EAC3BkrB,EAAcvI,GAAS3iB,GAEvBorB,EAAejH,IAAUp2B,EACzBs9B,EAAsB,OAAVlH,EACZmH,EAAiBnH,GAAUA,EAC3BoH,EAAc5I,GAASwB,GAE3B,IAAMkH,IAAcE,IAAgBL,GAAelrB,EAAQmkB,GACtD+G,GAAeE,GAAgBE,IAAmBD,IAAcE,GAChEN,GAAaG,GAAgBE,IAC5B2B,GAAgB3B,IACjB4B,EACH,OAAO,EAET,IAAMjC,IAAcC,IAAgBK,GAAevrB,EAAQmkB,GACtDoH,GAAe0B,GAAgBC,IAAmBjC,IAAcC,GAChEG,GAAa4B,GAAgBC,IAC5B9B,GAAgB8B,IACjB5B,EACH,OAAQ,CAEZ,CACA,OAAO,CACT,CAsDA,SAAS6B,GAAYj7B,EAAMk7B,EAAUC,EAASC,GAU5C,IATA,IAAIC,GAAa,EACbC,EAAat7B,EAAK1C,OAClBi+B,EAAgBJ,EAAQ79B,OACxBk+B,GAAa,EACbC,EAAaP,EAAS59B,OACtBo+B,EAAcjU,GAAU6T,EAAaC,EAAe,GACpDhb,EAASxjB,EAAM0+B,EAAaC,GAC5BC,GAAeP,IAEVI,EAAYC,GACnBlb,EAAOib,GAAaN,EAASM,GAE/B,OAASH,EAAYE,IACfI,GAAeN,EAAYC,KAC7B/a,EAAO4a,EAAQE,IAAcr7B,EAAKq7B,IAGtC,KAAOK,KACLnb,EAAOib,KAAex7B,EAAKq7B,KAE7B,OAAO9a,CACT,CAaA,SAASqb,GAAiB57B,EAAMk7B,EAAUC,EAASC,GAWjD,IAVA,IAAIC,GAAa,EACbC,EAAat7B,EAAK1C,OAClBu+B,GAAgB,EAChBN,EAAgBJ,EAAQ79B,OACxBw+B,GAAc,EACdC,EAAcb,EAAS59B,OACvBo+B,EAAcjU,GAAU6T,EAAaC,EAAe,GACpDhb,EAASxjB,EAAM2+B,EAAcK,GAC7BJ,GAAeP,IAEVC,EAAYK,GACnBnb,EAAO8a,GAAar7B,EAAKq7B,GAG3B,IADA,IAAI31B,EAAS21B,IACJS,EAAaC,GACpBxb,EAAO7a,EAASo2B,GAAcZ,EAASY,GAEzC,OAASD,EAAeN,IAClBI,GAAeN,EAAYC,KAC7B/a,EAAO7a,EAASy1B,EAAQU,IAAiB77B,EAAKq7B,MAGlD,OAAO9a,CACT,CAUA,SAASwL,GAAUltB,EAAQghB,GACzB,IAAIjhB,GAAS,EACTtB,EAASuB,EAAOvB,OAGpB,IADAuiB,IAAUA,EAAQ9iB,EAAMO,MACfsB,EAAQtB,GACfuiB,EAAMjhB,GAASC,EAAOD,GAExB,OAAOihB,CACT,CAYA,SAAS8M,GAAW9tB,EAAQkJ,EAAOga,EAAQqL,GACzC,IAAI4O,GAASja,EACbA,IAAWA,EAAS,CAAC,GAKrB,IAHA,IAAInjB,GAAS,EACTtB,EAASyK,EAAMzK,SAEVsB,EAAQtB,GAAQ,CACvB,IAAIqE,EAAMoG,EAAMnJ,GAEZs3B,EAAW9I,EACXA,EAAWrL,EAAOpgB,GAAM9C,EAAO8C,GAAMA,EAAKogB,EAAQljB,GAClDhD,EAEAq6B,IAAar6B,IACfq6B,EAAWr3B,EAAO8C,IAEhBq6B,EACF5P,GAAgBrK,EAAQpgB,EAAKu0B,GAE7B7J,GAAYtK,EAAQpgB,EAAKu0B,EAE7B,CACA,OAAOnU,CACT,CAkCA,SAASka,GAAiBnc,EAAQoc,GAChC,OAAO,SAAS7a,EAAYtB,GAC1B,IAAIL,EAAO1iB,GAAQqkB,GAAczB,GAAkB4M,GAC/CxM,EAAckc,EAAcA,IAAgB,CAAC,EAEjD,OAAOxc,EAAK2B,EAAYvB,EAAQ8W,GAAY7W,EAAU,GAAIC,EAC5D,CACF,CASA,SAASmc,GAAeC,GACtB,OAAOxE,IAAS,SAAS7V,EAAQsa,GAC/B,IAAIz9B,GAAS,EACTtB,EAAS++B,EAAQ/+B,OACjB8vB,EAAa9vB,EAAS,EAAI++B,EAAQ/+B,EAAS,GAAKzB,EAChDygC,EAAQh/B,EAAS,EAAI++B,EAAQ,GAAKxgC,EAWtC,IATAuxB,EAAcgP,EAAS9+B,OAAS,GAA0B,mBAAd8vB,GACvC9vB,IAAU8vB,GACXvxB,EAEAygC,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDlP,EAAa9vB,EAAS,EAAIzB,EAAYuxB,EACtC9vB,EAAS,GAEXykB,EAASvjB,GAAOujB,KACPnjB,EAAQtB,GAAQ,CACvB,IAAIuB,EAASw9B,EAAQz9B,GACjBC,GACFu9B,EAASra,EAAQljB,EAAQD,EAAOwuB,EAEpC,CACA,OAAOrL,CACT,GACF,CAUA,SAASoO,GAAe7O,EAAUG,GAChC,OAAO,SAASJ,EAAYtB,GAC1B,GAAkB,MAAdsB,EACF,OAAOA,EAET,IAAKmU,GAAYnU,GACf,OAAOC,EAASD,EAAYtB,GAM9B,IAJA,IAAIziB,EAAS+jB,EAAW/jB,OACpBsB,EAAQ6iB,EAAYnkB,GAAU,EAC9Bk/B,EAAWh+B,GAAO6iB,IAEdI,EAAY7iB,MAAYA,EAAQtB,KACa,IAA/CyiB,EAASyc,EAAS59B,GAAQA,EAAO49B,KAIvC,OAAOnb,CACT,CACF,CASA,SAAS2P,GAAcvP,GACrB,OAAO,SAASM,EAAQhC,EAAU0R,GAMhC,IALA,IAAI7yB,GAAS,EACT49B,EAAWh+B,GAAOujB,GAClBha,EAAQ0pB,EAAS1P,GACjBzkB,EAASyK,EAAMzK,OAEZA,KAAU,CACf,IAAIqE,EAAMoG,EAAM0Z,EAAYnkB,IAAWsB,GACvC,IAA+C,IAA3CmhB,EAASyc,EAAS76B,GAAMA,EAAK66B,GAC/B,KAEJ,CACA,OAAOza,CACT,CACF,CA8BA,SAAS0a,GAAgBC,GACvB,OAAO,SAASpa,GAGd,IAAIQ,EAAaO,GAFjBf,EAAS4C,GAAS5C,IAGd4B,GAAc5B,GACdzmB,EAEAunB,EAAMN,EACNA,EAAW,GACXR,EAAOgC,OAAO,GAEdqY,EAAW7Z,EACX6X,GAAU7X,EAAY,GAAGpU,KAAK,IAC9B4T,EAAO7gB,MAAM,GAEjB,OAAO2hB,EAAIsZ,KAAgBC,CAC7B,CACF,CASA,SAASC,GAAiBj5B,GACxB,OAAO,SAAS2e,GACd,OAAOxB,GAAY+b,GAAMC,GAAOxa,GAAQrkB,QAAQ+e,GAAQ,KAAMrZ,EAAU,GAC1E,CACF,CAUA,SAASo5B,GAAW1O,GAClB,OAAO,WAIL,IAAIruB,EAAOzB,UACX,OAAQyB,EAAK1C,QACX,KAAK,EAAG,OAAO,IAAI+wB,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAKruB,EAAK,IAC7B,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,IACtC,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC/C,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACxD,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjE,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC1E,KAAK,EAAG,OAAO,IAAIquB,EAAKruB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAErF,IAAIg9B,EAActT,GAAW2E,EAAK3uB,WAC9B6gB,EAAS8N,EAAKhwB,MAAM2+B,EAAah9B,GAIrC,OAAO4pB,GAASrJ,GAAUA,EAASyc,CACrC,CACF,CA8CA,SAASC,GAAWC,GAClB,OAAO,SAAS7b,EAAYjB,EAAWoB,GACrC,IAAIgb,EAAWh+B,GAAO6iB,GACtB,IAAKmU,GAAYnU,GAAa,CAC5B,IAAItB,EAAW6W,GAAYxW,EAAW,GACtCiB,EAAaliB,GAAKkiB,GAClBjB,EAAY,SAASze,GAAO,OAAOoe,EAASyc,EAAS76B,GAAMA,EAAK66B,EAAW,CAC7E,CACA,IAAI59B,EAAQs+B,EAAc7b,EAAYjB,EAAWoB,GACjD,OAAO5iB,GAAS,EAAI49B,EAASzc,EAAWsB,EAAWziB,GAASA,GAAS/C,CACvE,CACF,CASA,SAASshC,GAAW1b,GAClB,OAAO2b,IAAS,SAASC,GACvB,IAAI//B,EAAS+/B,EAAM//B,OACfsB,EAAQtB,EACRggC,EAAS9T,GAAc9pB,UAAU69B,KAKrC,IAHI9b,GACF4b,EAAMnV,UAEDtpB,KAAS,CACd,IAAI8gB,EAAO2d,EAAMz+B,GACjB,GAAmB,mBAAR8gB,EACT,MAAM,IAAIhhB,GAAU+X,GAEtB,GAAI6mB,IAAWE,GAAgC,WAArBC,GAAY/d,GACpC,IAAI8d,EAAU,IAAIhU,GAAc,IAAI,EAExC,CAEA,IADA5qB,EAAQ4+B,EAAU5+B,EAAQtB,IACjBsB,EAAQtB,GAAQ,CAGvB,IAAIogC,EAAWD,GAFf/d,EAAO2d,EAAMz+B,IAGTiW,EAAmB,WAAZ6oB,EAAwBC,GAAQje,GAAQ7jB,EAMjD2hC,EAJE3oB,GAAQ+oB,GAAW/oB,EAAK,KACX,KAAXA,EAAK,KACJA,EAAK,GAAGvX,QAAqB,GAAXuX,EAAK,GAElB2oB,EAAQC,GAAY5oB,EAAK,KAAKxW,MAAMm/B,EAAS3oB,EAAK,IAElC,GAAf6K,EAAKpiB,QAAesgC,GAAWle,GACtC8d,EAAQE,KACRF,EAAQD,KAAK7d,EAErB,CACA,OAAO,WACL,IAAI1f,EAAOzB,UACPuP,EAAQ9N,EAAK,GAEjB,GAAIw9B,GAA0B,GAAfx9B,EAAK1C,QAAeN,GAAQ8Q,GACzC,OAAO0vB,EAAQK,MAAM/vB,GAAOA,QAK9B,IAHA,IAAIlP,EAAQ,EACR2hB,EAASjjB,EAAS+/B,EAAMz+B,GAAOP,MAAMC,KAAM0B,GAAQ8N,IAE9ClP,EAAQtB,GACfijB,EAAS8c,EAAMz+B,GAAOrB,KAAKe,KAAMiiB,GAEnC,OAAOA,CACT,CACF,GACF,CAqBA,SAASud,GAAape,EAAMyN,EAASxN,EAASub,EAAUC,EAAS4C,EAAeC,EAAcC,EAAQC,EAAKC,GACzG,IAAIC,EAAQjR,EAAUtW,EAClBwnB,EA5iKa,EA4iKJlR,EACTmR,EA5iKiB,EA4iKLnR,EACZiO,EAAsB,GAAVjO,EACZoR,EAtiKa,IAsiKJpR,EACTkB,EAAOiQ,EAAYziC,EAAYkhC,GAAWrd,GA6C9C,OA3CA,SAAS8d,IAKP,IAJA,IAAIlgC,EAASiB,UAAUjB,OACnB0C,EAAOjD,EAAMO,GACbsB,EAAQtB,EAELsB,KACLoB,EAAKpB,GAASL,UAAUK,GAE1B,GAAIw8B,EACF,IAAIxX,EAAc4a,GAAUhB,GACxBiB,EAvhIZ,SAAsB5e,EAAO+D,GAI3B,IAHA,IAAItmB,EAASuiB,EAAMviB,OACfijB,EAAS,EAENjjB,KACDuiB,EAAMviB,KAAYsmB,KAClBrD,EAGN,OAAOA,CACT,CA6gI2Bme,CAAa1+B,EAAM4jB,GASxC,GAPIsX,IACFl7B,EAAOi7B,GAAYj7B,EAAMk7B,EAAUC,EAASC,IAE1C2C,IACF/9B,EAAO47B,GAAiB57B,EAAM+9B,EAAeC,EAAc5C,IAE7D99B,GAAUmhC,EACNrD,GAAa99B,EAAS6gC,EAAO,CAC/B,IAAIQ,EAAahb,GAAe3jB,EAAM4jB,GACtC,OAAOgb,GACLlf,EAAMyN,EAAS2Q,GAAcN,EAAQ5Z,YAAajE,EAClD3f,EAAM2+B,EAAYV,EAAQC,EAAKC,EAAQ7gC,EAE3C,CACA,IAAI0/B,EAAcqB,EAAS1e,EAAUrhB,KACjC9B,EAAK8hC,EAAYtB,EAAYtd,GAAQA,EAczC,OAZApiB,EAAS0C,EAAK1C,OACV2gC,EACFj+B,EAg4CN,SAAiB6f,EAAO2X,GAKtB,IAJA,IAAIqH,EAAYhf,EAAMviB,OAClBA,EAASqqB,GAAU6P,EAAQl6B,OAAQuhC,GACnCC,EAAW/S,GAAUlM,GAElBviB,KAAU,CACf,IAAIsB,EAAQ44B,EAAQl6B,GACpBuiB,EAAMviB,GAAUouB,GAAQ9sB,EAAOigC,GAAaC,EAASlgC,GAAS/C,CAChE,CACA,OAAOgkB,CACT,CA14Cakf,CAAQ/+B,EAAMi+B,GACZM,GAAUjhC,EAAS,GAC5B0C,EAAKkoB,UAEHkW,GAASF,EAAM5gC,IACjB0C,EAAK1C,OAAS4gC,GAEZ5/B,MAAQA,OAAS4f,IAAQ5f,gBAAgBk/B,IAC3ChhC,EAAK6xB,GAAQ0O,GAAWvgC,IAEnBA,EAAG6B,MAAM2+B,EAAah9B,EAC/B,CAEF,CAUA,SAASg/B,GAAelf,EAAQmf,GAC9B,OAAO,SAASld,EAAQhC,GACtB,OAh/DJ,SAAsBgC,EAAQjC,EAAQC,EAAUC,GAI9C,OAHAoQ,GAAWrO,GAAQ,SAASjU,EAAOnM,EAAKogB,GACtCjC,EAAOE,EAAaD,EAASjS,GAAQnM,EAAKogB,EAC5C,IACO/B,CACT,CA2+DWkf,CAAand,EAAQjC,EAAQmf,EAAWlf,GAAW,CAAC,EAC7D,CACF,CAUA,SAASof,GAAoBC,EAAUC,GACrC,OAAO,SAASvxB,EAAOmkB,GACrB,IAAI1R,EACJ,GAAIzS,IAAUjS,GAAao2B,IAAUp2B,EACnC,OAAOwjC,EAKT,GAHIvxB,IAAUjS,IACZ0kB,EAASzS,GAEPmkB,IAAUp2B,EAAW,CACvB,GAAI0kB,IAAW1kB,EACb,OAAOo2B,EAEW,iBAATnkB,GAAqC,iBAATmkB,GACrCnkB,EAAQ2rB,GAAa3rB,GACrBmkB,EAAQwH,GAAaxH,KAErBnkB,EAAQ0rB,GAAa1rB,GACrBmkB,EAAQuH,GAAavH,IAEvB1R,EAAS6e,EAAStxB,EAAOmkB,EAC3B,CACA,OAAO1R,CACT,CACF,CASA,SAAS+e,GAAWC,GAClB,OAAOnC,IAAS,SAAS1G,GAEvB,OADAA,EAAY9V,GAAS8V,EAAWlU,GAAUoU,OACnCgB,IAAS,SAAS53B,GACvB,IAAI2f,EAAUrhB,KACd,OAAOihC,EAAU7I,GAAW,SAAS3W,GACnC,OAAO1hB,GAAM0hB,EAAUJ,EAAS3f,EAClC,GACF,GACF,GACF,CAWA,SAASw/B,GAAcliC,EAAQmiC,GAG7B,IAAIC,GAFJD,EAAQA,IAAU5jC,EAAY,IAAM49B,GAAagG,IAEzBniC,OACxB,GAAIoiC,EAAc,EAChB,OAAOA,EAAc/H,GAAW8H,EAAOniC,GAAUmiC,EAEnD,IAAIlf,EAASoX,GAAW8H,EAAO5Y,GAAWvpB,EAASymB,GAAW0b,KAC9D,OAAOpc,GAAWoc,GACd9E,GAAUzW,GAAc3D,GAAS,EAAGjjB,GAAQoR,KAAK,IACjD6R,EAAO9e,MAAM,EAAGnE,EACtB,CA4CA,SAASqiC,GAAYle,GACnB,OAAO,SAASpb,EAAOC,EAAKs5B,GAa1B,OAZIA,GAAuB,iBAARA,GAAoBrD,GAAel2B,EAAOC,EAAKs5B,KAChEt5B,EAAMs5B,EAAO/jC,GAGfwK,EAAQw5B,GAASx5B,GACbC,IAAQzK,GACVyK,EAAMD,EACNA,EAAQ,GAERC,EAAMu5B,GAASv5B,GA57CrB,SAAmBD,EAAOC,EAAKs5B,EAAMne,GAKnC,IAJA,IAAI7iB,GAAS,EACTtB,EAASmqB,GAAUZ,IAAYvgB,EAAMD,IAAUu5B,GAAQ,IAAK,GAC5Drf,EAASxjB,EAAMO,GAEZA,KACLijB,EAAOkB,EAAYnkB,IAAWsB,GAASyH,EACvCA,GAASu5B,EAEX,OAAOrf,CACT,CAq7CWuf,CAAUz5B,EAAOC,EADxBs5B,EAAOA,IAAS/jC,EAAawK,EAAQC,EAAM,GAAK,EAAKu5B,GAASD,GAC3Bne,EACrC,CACF,CASA,SAASse,GAA0BX,GACjC,OAAO,SAAStxB,EAAOmkB,GAKrB,MAJsB,iBAATnkB,GAAqC,iBAATmkB,IACvCnkB,EAAQkyB,GAASlyB,GACjBmkB,EAAQ+N,GAAS/N,IAEZmN,EAAStxB,EAAOmkB,EACzB,CACF,CAmBA,SAAS2M,GAAclf,EAAMyN,EAAS8S,EAAUrc,EAAajE,EAASub,EAAUC,EAAS8C,EAAQC,EAAKC,GACpG,IAAI+B,EArxKc,EAqxKJ/S,EAMdA,GAAY+S,EAAUtpB,EAxxKI,GAJF,GA6xKxBuW,KAAa+S,EAzxKa,GAyxKuBtpB,MAG/CuW,IAAW,GAEb,IAAIgT,EAAU,CACZzgB,EAAMyN,EAASxN,EAVCugB,EAAUhF,EAAWr/B,EAFtBqkC,EAAU/E,EAAUt/B,EAGdqkC,EAAUrkC,EAAYq/B,EAFvBgF,EAAUrkC,EAAYs/B,EAYzB8C,EAAQC,EAAKC,GAG5B5d,EAAS0f,EAAS5hC,MAAMxC,EAAWskC,GAKvC,OAJIvC,GAAWle,IACb0gB,GAAQ7f,EAAQ4f,GAElB5f,EAAOqD,YAAcA,EACdyc,GAAgB9f,EAAQb,EAAMyN,EACvC,CASA,SAASmT,GAAY5D,GACnB,IAAIhd,EAAOvjB,GAAKugC,GAChB,OAAO,SAAS3P,EAAQwT,GAGtB,GAFAxT,EAASiT,GAASjT,IAClBwT,EAAyB,MAAbA,EAAoB,EAAI5Y,GAAU6Y,GAAUD,GAAY,OACnDlZ,GAAe0F,GAAS,CAGvC,IAAI0T,GAAQvb,GAAS6H,GAAU,KAAK1rB,MAAM,KAI1C,SADAo/B,GAAQvb,GAFIxF,EAAK+gB,EAAK,GAAK,MAAQA,EAAK,GAAKF,KAEnB,KAAKl/B,MAAM,MACvB,GAAK,MAAQo/B,EAAK,GAAKF,GACvC,CACA,OAAO7gB,EAAKqN,EACd,CACF,CASA,IAAI4M,GAAcrR,IAAQ,EAAIzE,GAAW,IAAIyE,GAAI,CAAC,EAAE,KAAK,IAAOxR,EAAmB,SAAShV,GAC1F,OAAO,IAAIwmB,GAAIxmB,EACjB,EAF4E4+B,GAW5E,SAASC,GAAclP,GACrB,OAAO,SAAS1P,GACd,IAAI0L,EAAMC,GAAO3L,GACjB,OAAI0L,GAAO/V,EACF4L,GAAWvB,GAEhB0L,GAAO1V,EACF+L,GAAW/B,GAn6I1B,SAAqBA,EAAQha,GAC3B,OAAO6Y,GAAS7Y,GAAO,SAASpG,GAC9B,MAAO,CAACA,EAAKogB,EAAOpgB,GACtB,GACF,CAi6Iai/B,CAAY7e,EAAQ0P,EAAS1P,GACtC,CACF,CA2BA,SAAS8e,GAAWnhB,EAAMyN,EAASxN,EAASub,EAAUC,EAAS8C,EAAQC,EAAKC,GAC1E,IAAIG,EAl4KiB,EAk4KLnR,EAChB,IAAKmR,GAA4B,mBAAR5e,EACvB,MAAM,IAAIhhB,GAAU+X,GAEtB,IAAInZ,EAAS49B,EAAWA,EAAS59B,OAAS,EAS1C,GARKA,IACH6vB,IAAW,GACX+N,EAAWC,EAAUt/B,GAEvBqiC,EAAMA,IAAQriC,EAAYqiC,EAAMzW,GAAU+Y,GAAUtC,GAAM,GAC1DC,EAAQA,IAAUtiC,EAAYsiC,EAAQqC,GAAUrC,GAChD7gC,GAAU69B,EAAUA,EAAQ79B,OAAS,EAx4KX,GA04KtB6vB,EAAmC,CACrC,IAAI4Q,EAAgB7C,EAChB8C,EAAe7C,EAEnBD,EAAWC,EAAUt/B,CACvB,CACA,IAAIgZ,EAAOypB,EAAYziC,EAAY8hC,GAAQje,GAEvCygB,EAAU,CACZzgB,EAAMyN,EAASxN,EAASub,EAAUC,EAAS4C,EAAeC,EAC1DC,EAAQC,EAAKC,GAkBf,GAfItpB,GA26BN,SAAmBA,EAAMhW,GACvB,IAAIsuB,EAAUtY,EAAK,GACfisB,EAAajiC,EAAO,GACpBkiC,EAAa5T,EAAU2T,EACvBrR,EAAWsR,EAAa,IAExBC,EACAF,GAAcjqB,GA50MA,GA40MmBsW,GACjC2T,GAAcjqB,GAx0MA,KAw0MmBsW,GAAgCtY,EAAK,GAAGvX,QAAUuB,EAAO,IAC5E,KAAdiiC,GAAqDjiC,EAAO,GAAGvB,QAAUuB,EAAO,IA90MlE,GA80M0EsuB,EAG5F,IAAMsC,IAAYuR,EAChB,OAAOnsB,EAr1MQ,EAw1MbisB,IACFjsB,EAAK,GAAKhW,EAAO,GAEjBkiC,GA31Me,EA21MD5T,EAA2B,EAz1MnB,GA41MxB,IAAIrf,EAAQjP,EAAO,GACnB,GAAIiP,EAAO,CACT,IAAIotB,EAAWrmB,EAAK,GACpBA,EAAK,GAAKqmB,EAAWD,GAAYC,EAAUptB,EAAOjP,EAAO,IAAMiP,EAC/D+G,EAAK,GAAKqmB,EAAWvX,GAAe9O,EAAK,GAAI8B,GAAe9X,EAAO,EACrE,EAEAiP,EAAQjP,EAAO,MAEbq8B,EAAWrmB,EAAK,GAChBA,EAAK,GAAKqmB,EAAWU,GAAiBV,EAAUptB,EAAOjP,EAAO,IAAMiP,EACpE+G,EAAK,GAAKqmB,EAAWvX,GAAe9O,EAAK,GAAI8B,GAAe9X,EAAO,KAGrEiP,EAAQjP,EAAO,MAEbgW,EAAK,GAAK/G,GAGRgzB,EAAajqB,IACfhC,EAAK,GAAgB,MAAXA,EAAK,GAAahW,EAAO,GAAK8oB,GAAU9S,EAAK,GAAIhW,EAAO,KAGrD,MAAXgW,EAAK,KACPA,EAAK,GAAKhW,EAAO,IAGnBgW,EAAK,GAAKhW,EAAO,GACjBgW,EAAK,GAAKksB,CAGZ,CA/9BIE,CAAUd,EAAStrB,GAErB6K,EAAOygB,EAAQ,GACfhT,EAAUgT,EAAQ,GAClBxgB,EAAUwgB,EAAQ,GAClBjF,EAAWiF,EAAQ,GACnBhF,EAAUgF,EAAQ,KAClBhC,EAAQgC,EAAQ,GAAKA,EAAQ,KAAOtkC,EAC/ByiC,EAAY,EAAI5e,EAAKpiB,OACtBmqB,GAAU0Y,EAAQ,GAAK7iC,EAAQ,KAEX,GAAV6vB,IACZA,IAAW,IAERA,GA56KY,GA46KDA,EAGd5M,EA56KgB,GA26KP4M,GA16Ka,IA06KiBA,EApgB3C,SAAqBzN,EAAMyN,EAASgR,GAClC,IAAI9P,EAAO0O,GAAWrd,GAwBtB,OAtBA,SAAS8d,IAMP,IALA,IAAIlgC,EAASiB,UAAUjB,OACnB0C,EAAOjD,EAAMO,GACbsB,EAAQtB,EACRsmB,EAAc4a,GAAUhB,GAErB5+B,KACLoB,EAAKpB,GAASL,UAAUK,GAE1B,IAAIu8B,EAAW79B,EAAS,GAAK0C,EAAK,KAAO4jB,GAAe5jB,EAAK1C,EAAS,KAAOsmB,EACzE,GACAD,GAAe3jB,EAAM4jB,GAGzB,OADAtmB,GAAU69B,EAAQ79B,QACL6gC,EACJS,GACLlf,EAAMyN,EAAS2Q,GAAcN,EAAQ5Z,YAAa/nB,EAClDmE,EAAMm7B,EAASt/B,EAAWA,EAAWsiC,EAAQ7gC,GAG1Ce,GADGC,MAAQA,OAAS4f,IAAQ5f,gBAAgBk/B,EAAWnP,EAAO3O,EACpDphB,KAAM0B,EACzB,CAEF,CA2eakhC,CAAYxhB,EAAMyN,EAASgR,GAC1BhR,GAAWvW,GAAgC,IAAXuW,GAAqDgO,EAAQ79B,OAG9FwgC,GAAaz/B,MAAMxC,EAAWskC,GA9O3C,SAAuBzgB,EAAMyN,EAASxN,EAASub,GAC7C,IAAImD,EAtsKa,EAssKJlR,EACTkB,EAAO0O,GAAWrd,GAkBtB,OAhBA,SAAS8d,IAQP,IAPA,IAAInC,GAAa,EACbC,EAAa/8B,UAAUjB,OACvBk+B,GAAa,EACbC,EAAaP,EAAS59B,OACtB0C,EAAOjD,EAAM0+B,EAAaH,GAC1B9+B,EAAM8B,MAAQA,OAAS4f,IAAQ5f,gBAAgBk/B,EAAWnP,EAAO3O,IAE5D8b,EAAYC,GACnBz7B,EAAKw7B,GAAaN,EAASM,GAE7B,KAAOF,KACLt7B,EAAKw7B,KAAej9B,YAAY88B,GAElC,OAAOh9B,GAAM7B,EAAI6hC,EAAS1e,EAAUrhB,KAAM0B,EAC5C,CAEF,CAuNamhC,CAAczhB,EAAMyN,EAASxN,EAASub,QAJ/C,IAAI3a,EAhmBR,SAAoBb,EAAMyN,EAASxN,GACjC,IAAI0e,EA90Ja,EA80JJlR,EACTkB,EAAO0O,GAAWrd,GAMtB,OAJA,SAAS8d,IAEP,OADUl/B,MAAQA,OAAS4f,IAAQ5f,gBAAgBk/B,EAAWnP,EAAO3O,GAC3DrhB,MAAMggC,EAAS1e,EAAUrhB,KAAMC,UAC3C,CAEF,CAulBiB6iC,CAAW1hB,EAAMyN,EAASxN,GASzC,OAAO0gB,IADMxrB,EAAOqjB,GAAckI,IACJ7f,EAAQ4f,GAAUzgB,EAAMyN,EACxD,CAcA,SAASkU,GAAuB/U,EAAUuI,EAAUlzB,EAAKogB,GACvD,OAAIuK,IAAazwB,GACZswB,GAAGG,EAAUvH,GAAYpjB,MAAUnE,GAAeD,KAAKwkB,EAAQpgB,GAC3DkzB,EAEFvI,CACT,CAgBA,SAASgV,GAAoBhV,EAAUuI,EAAUlzB,EAAKogB,EAAQljB,EAAQb,GAOpE,OANI4rB,GAAS0C,IAAa1C,GAASiL,KAEjC72B,EAAM+P,IAAI8mB,EAAUvI,GACpBwJ,GAAUxJ,EAAUuI,EAAUh5B,EAAWylC,GAAqBtjC,GAC9DA,EAAc,OAAE62B,IAEXvI,CACT,CAWA,SAASiV,GAAgBzzB,GACvB,OAAOuoB,GAAcvoB,GAASjS,EAAYiS,CAC5C,CAeA,SAASylB,GAAY1T,EAAOoS,EAAO9E,EAASC,EAAY2F,EAAW/0B,GACjE,IAAIy1B,EApgLmB,EAogLPtG,EACZ0R,EAAYhf,EAAMviB,OAClBg1B,EAAYL,EAAM30B,OAEtB,GAAIuhC,GAAavM,KAAemB,GAAanB,EAAYuM,GACvD,OAAO,EAGT,IAAI2C,EAAaxjC,EAAMgS,IAAI6P,GACvBqU,EAAal2B,EAAMgS,IAAIiiB,GAC3B,GAAIuP,GAActN,EAChB,OAAOsN,GAAcvP,GAASiC,GAAcrU,EAE9C,IAAIjhB,GAAS,EACT2hB,GAAS,EACToS,EAlhLqB,EAkhLbxF,EAAoC,IAAIpC,GAAWlvB,EAM/D,IAJAmC,EAAM+P,IAAI8R,EAAOoS,GACjBj0B,EAAM+P,IAAIkkB,EAAOpS,KAGRjhB,EAAQigC,GAAW,CAC1B,IAAI4C,EAAW5hB,EAAMjhB,GACjBw1B,EAAWnC,EAAMrzB,GAErB,GAAIwuB,EACF,IAAIiH,EAAWZ,EACXrG,EAAWgH,EAAUqN,EAAU7iC,EAAOqzB,EAAOpS,EAAO7hB,GACpDovB,EAAWqU,EAAUrN,EAAUx1B,EAAOihB,EAAOoS,EAAOj0B,GAE1D,GAAIq2B,IAAax4B,EAAW,CAC1B,GAAIw4B,EACF,SAEF9T,GAAS,EACT,KACF,CAEA,GAAIoS,GACF,IAAK1R,GAAUgR,GAAO,SAASmC,EAAU7B,GACnC,IAAK7P,GAASiQ,EAAMJ,KACfkP,IAAarN,GAAYrB,EAAU0O,EAAUrN,EAAUjH,EAASC,EAAYpvB,IAC/E,OAAO20B,EAAK5wB,KAAKwwB,EAErB,IAAI,CACNhS,GAAS,EACT,KACF,OACK,GACDkhB,IAAarN,IACXrB,EAAU0O,EAAUrN,EAAUjH,EAASC,EAAYpvB,GACpD,CACLuiB,GAAS,EACT,KACF,CACF,CAGA,OAFAviB,EAAc,OAAE6hB,GAChB7hB,EAAc,OAAEi0B,GACT1R,CACT,CAyKA,SAAS6c,GAAS1d,GAChB,OAAOmY,GAAYC,GAASpY,EAAM7jB,EAAW6lC,IAAUhiB,EAAO,GAChE,CASA,SAASyP,GAAWpN,GAClB,OAAOyP,GAAezP,EAAQ5iB,GAAM+uB,GACtC,CAUA,SAASgB,GAAanN,GACpB,OAAOyP,GAAezP,EAAQiM,GAAQF,GACxC,CASA,IAAI6P,GAAWlV,GAAiB,SAAS/I,GACvC,OAAO+I,GAAQzY,IAAI0P,EACrB,EAFyBghB,GAWzB,SAASjD,GAAY/d,GAKnB,IAJA,IAAIa,EAAUb,EAAK/hB,KAAO,GACtBkiB,EAAQ6I,GAAUnI,GAClBjjB,EAASE,GAAeD,KAAKmrB,GAAWnI,GAAUV,EAAMviB,OAAS,EAE9DA,KAAU,CACf,IAAIuX,EAAOgL,EAAMviB,GACbqkC,EAAY9sB,EAAK6K,KACrB,GAAiB,MAAbiiB,GAAqBA,GAAajiB,EACpC,OAAO7K,EAAKlX,IAEhB,CACA,OAAO4iB,CACT,CASA,SAASie,GAAU9e,GAEjB,OADaliB,GAAeD,KAAK8rB,GAAQ,eAAiBA,GAAS3J,GACrDkE,WAChB,CAaA,SAASgT,KACP,IAAIrW,EAAS8I,GAAOtJ,UAAYA,GAEhC,OADAQ,EAASA,IAAWR,GAAWiV,GAAezU,EACvChiB,UAAUjB,OAASijB,EAAOhiB,UAAU,GAAIA,UAAU,IAAMgiB,CACjE,CAUA,SAASyP,GAAWzM,EAAK5hB,GACvB,IAgYiBmM,EACbtN,EAjYAqU,EAAO0O,EAAIyH,SACf,OAiYgB,WADZxqB,SADasN,EA/XAnM,KAiYmB,UAARnB,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAVsN,EACU,OAAVA,GAlYD+G,EAAmB,iBAAPlT,EAAkB,SAAW,QACzCkT,EAAK0O,GACX,CASA,SAASkS,GAAa1T,GAIpB,IAHA,IAAIxB,EAASphB,GAAK4iB,GACdzkB,EAASijB,EAAOjjB,OAEbA,KAAU,CACf,IAAIqE,EAAM4e,EAAOjjB,GACbwQ,EAAQiU,EAAOpgB,GAEnB4e,EAAOjjB,GAAU,CAACqE,EAAKmM,EAAO8nB,GAAmB9nB,GACnD,CACA,OAAOyS,CACT,CAUA,SAASkG,GAAU1E,EAAQpgB,GACzB,IAAImM,EAlxJR,SAAkBiU,EAAQpgB,GACxB,OAAiB,MAAVogB,EAAiBlmB,EAAYkmB,EAAOpgB,EAC7C,CAgxJgBigC,CAAS7f,EAAQpgB,GAC7B,OAAOozB,GAAajnB,GAASA,EAAQjS,CACvC,CAoCA,IAAIqyB,GAAcjH,GAA+B,SAASlF,GACxD,OAAc,MAAVA,EACK,IAETA,EAASvjB,GAAOujB,GACT1B,GAAY4G,GAAiBlF,IAAS,SAASqM,GACpD,OAAOlI,GAAqB3oB,KAAKwkB,EAAQqM,EAC3C,IACF,EARqCyT,GAiBjC/T,GAAgB7G,GAA+B,SAASlF,GAE1D,IADA,IAAIxB,EAAS,GACNwB,GACLlB,GAAUN,EAAQ2N,GAAWnM,IAC7BA,EAASgE,GAAahE,GAExB,OAAOxB,CACT,EAPuCshB,GAgBnCnU,GAASiE,GA2Eb,SAASmQ,GAAQ/f,EAAQsP,EAAM0Q,GAO7B,IAJA,IAAInjC,GAAS,EACTtB,GAHJ+zB,EAAOC,GAASD,EAAMtP,IAGJzkB,OACdijB,GAAS,IAEJ3hB,EAAQtB,GAAQ,CACvB,IAAIqE,EAAM4vB,GAAMF,EAAKzyB,IACrB,KAAM2hB,EAAmB,MAAVwB,GAAkBggB,EAAQhgB,EAAQpgB,IAC/C,MAEFogB,EAASA,EAAOpgB,EAClB,CACA,OAAI4e,KAAY3hB,GAAStB,EAChBijB,KAETjjB,EAAmB,MAAVykB,EAAiB,EAAIA,EAAOzkB,SAClB0kC,GAAS1kC,IAAWouB,GAAQ/pB,EAAKrE,KACjDN,GAAQ+kB,IAAWuJ,GAAYvJ,GACpC,CA4BA,SAAS8L,GAAgB9L,GACvB,MAAqC,mBAAtBA,EAAOniB,aAA8By1B,GAAYtT,GAE5D,CAAC,EADD2H,GAAW3D,GAAahE,GAE9B,CA4EA,SAAS+O,GAAchjB,GACrB,OAAO9Q,GAAQ8Q,IAAUwd,GAAYxd,OAChCqY,IAAoBrY,GAASA,EAAMqY,IAC1C,CAUA,SAASuF,GAAQ5d,EAAOxQ,GACtB,IAAIkD,SAAcsN,EAGlB,SAFAxQ,EAAmB,MAAVA,EAAiByZ,EAAmBzZ,KAGlC,UAARkD,GACU,UAARA,GAAoBoa,GAAS1X,KAAK4K,KAChCA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQxQ,CACjD,CAYA,SAASi/B,GAAezuB,EAAOlP,EAAOmjB,GACpC,IAAK6H,GAAS7H,GACZ,OAAO,EAET,IAAIvhB,SAAc5B,EAClB,SAAY,UAAR4B,EACKg1B,GAAYzT,IAAW2J,GAAQ9sB,EAAOmjB,EAAOzkB,QACrC,UAARkD,GAAoB5B,KAASmjB,IAE7BoK,GAAGpK,EAAOnjB,GAAQkP,EAG7B,CAUA,SAAS6nB,GAAM7nB,EAAOiU,GACpB,GAAI/kB,GAAQ8Q,GACV,OAAO,EAET,IAAItN,SAAcsN,EAClB,QAAY,UAARtN,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAATsN,IAAiB2iB,GAAS3iB,KAGvB4L,EAAcxW,KAAK4K,KAAW2L,EAAavW,KAAK4K,IAC1C,MAAViU,GAAkBjU,KAAStP,GAAOujB,EACvC,CAwBA,SAAS6b,GAAWle,GAClB,IAAIge,EAAWD,GAAY/d,GACvBuS,EAAQ5I,GAAOqU,GAEnB,GAAoB,mBAATzL,KAAyByL,KAAYnU,GAAY7pB,WAC1D,OAAO,EAET,GAAIggB,IAASuS,EACX,OAAO,EAET,IAAIpd,EAAO8oB,GAAQ1L,GACnB,QAASpd,GAAQ6K,IAAS7K,EAAK,EACjC,EA9SKsT,IAAYuF,GAAO,IAAIvF,GAAS,IAAI8Z,YAAY,MAAQ7pB,GACxDgQ,IAAOsF,GAAO,IAAItF,KAAQ1Q,GAC1B2Q,IAAWqF,GAAOrF,GAAQ6Z,YAAcrqB,GACxCyQ,IAAOoF,GAAO,IAAIpF,KAAQvQ,GAC1BwQ,IAAWmF,GAAO,IAAInF,KAAYrQ,KACrCwV,GAAS,SAAS5f,GAChB,IAAIyS,EAASoR,GAAW7jB,GACpBugB,EAAO9N,GAAU3I,EAAY9J,EAAMlO,YAAc/D,EACjDsmC,EAAa9T,EAAOzF,GAASyF,GAAQ,GAEzC,GAAI8T,EACF,OAAQA,GACN,KAAKxZ,GAAoB,OAAOvQ,EAChC,KAAKyQ,GAAe,OAAOnR,EAC3B,KAAKoR,GAAmB,OAAOjR,EAC/B,KAAKkR,GAAe,OAAOhR,EAC3B,KAAKiR,GAAmB,OAAO9Q,EAGnC,OAAOqI,CACT,GA8SF,IAAI6hB,GAAapd,GAAamM,GAAakR,GAS3C,SAAShN,GAAYvnB,GACnB,IAAIugB,EAAOvgB,GAASA,EAAMlO,YAG1B,OAAOkO,KAFqB,mBAARugB,GAAsBA,EAAK3uB,WAAcqlB,GAG/D,CAUA,SAAS6Q,GAAmB9nB,GAC1B,OAAOA,GAAUA,IAAU8b,GAAS9b,EACtC,CAWA,SAAS4nB,GAAwB/zB,EAAKkzB,GACpC,OAAO,SAAS9S,GACd,OAAc,MAAVA,GAGGA,EAAOpgB,KAASkzB,IACpBA,IAAah5B,GAAc8F,KAAOnD,GAAOujB,GAC9C,CACF,CAoIA,SAAS+V,GAASpY,EAAMrZ,EAAOqd,GAE7B,OADArd,EAAQohB,GAAUphB,IAAUxK,EAAa6jB,EAAKpiB,OAAS,EAAK+I,EAAO,GAC5D,WAML,IALA,IAAIrG,EAAOzB,UACPK,GAAS,EACTtB,EAASmqB,GAAUznB,EAAK1C,OAAS+I,EAAO,GACxCwZ,EAAQ9iB,EAAMO,KAETsB,EAAQtB,GACfuiB,EAAMjhB,GAASoB,EAAKqG,EAAQzH,GAE9BA,GAAS,EAET,IADA,IAAI0jC,EAAYvlC,EAAMsJ,EAAQ,KACrBzH,EAAQyH,GACfi8B,EAAU1jC,GAASoB,EAAKpB,GAG1B,OADA0jC,EAAUj8B,GAASqd,EAAU7D,GACtBxhB,GAAMqhB,EAAMphB,KAAMgkC,EAC3B,CACF,CAUA,SAASxhC,GAAOihB,EAAQsP,GACtB,OAAOA,EAAK/zB,OAAS,EAAIykB,EAASqP,GAAQrP,EAAQuW,GAAUjH,EAAM,GAAI,GACxE,CAgCA,SAAS4E,GAAQlU,EAAQpgB,GACvB,IAAY,gBAARA,GAAgD,mBAAhBogB,EAAOpgB,KAIhC,aAAPA,EAIJ,OAAOogB,EAAOpgB,EAChB,CAgBA,IAAIy+B,GAAUmC,GAASrK,IAUnBv7B,GAAaiqB,IAAiB,SAASlH,EAAM4P,GAC/C,OAAOpR,GAAKvhB,WAAW+iB,EAAM4P,EAC/B,EAUIuI,GAAc0K,GAASpK,IAY3B,SAASkI,GAAgB7C,EAASgF,EAAWrV,GAC3C,IAAItuB,EAAU2jC,EAAY,GAC1B,OAAO3K,GAAY2F,EA1brB,SAA2B3+B,EAAQ4jC,GACjC,IAAInlC,EAASmlC,EAAQnlC,OACrB,IAAKA,EACH,OAAOuB,EAET,IAAImlB,EAAY1mB,EAAS,EAGzB,OAFAmlC,EAAQze,IAAc1mB,EAAS,EAAI,KAAO,IAAMmlC,EAAQze,GACxDye,EAAUA,EAAQ/zB,KAAKpR,EAAS,EAAI,KAAO,KACpCuB,EAAOZ,QAAQ+b,GAAe,uBAAyByoB,EAAU,SAC1E,CAib8BC,CAAkB7jC,EAqHhD,SAA2B4jC,EAAStV,GAOlC,OANAlN,GAAU/I,GAAW,SAASupB,GAC5B,IAAI3yB,EAAQ,KAAO2yB,EAAK,GACnBtT,EAAUsT,EAAK,KAAQjgB,GAAciiB,EAAS30B,IACjD20B,EAAQ1gC,KAAK+L,EAEjB,IACO20B,EAAQ7gC,MACjB,CA7HwD+gC,CAtjBxD,SAAwB9jC,GACtB,IAAIslB,EAAQtlB,EAAOslB,MAAMlK,IACzB,OAAOkK,EAAQA,EAAM,GAAG9iB,MAAM6Y,IAAkB,EAClD,CAmjB0E0oB,CAAe/jC,GAASsuB,IAClG,CAWA,SAASoV,GAAS7iB,GAChB,IAAI5O,EAAQ,EACR+xB,EAAa,EAEjB,OAAO,WACL,IAAIC,EAAQjb,KACRkb,EApiNK,IAoiNmBD,EAAQD,GAGpC,GADAA,EAAaC,EACTC,EAAY,GACd,KAAMjyB,GAziNE,IA0iNN,OAAOvS,UAAU,QAGnBuS,EAAQ,EAEV,OAAO4O,EAAKrhB,MAAMxC,EAAW0C,UAC/B,CACF,CAUA,SAASutB,GAAYjM,EAAO2D,GAC1B,IAAI5kB,GAAS,EACTtB,EAASuiB,EAAMviB,OACf0mB,EAAY1mB,EAAS,EAGzB,IADAkmB,EAAOA,IAAS3nB,EAAYyB,EAASkmB,IAC5B5kB,EAAQ4kB,GAAM,CACrB,IAAIwf,EAAOpX,GAAWhtB,EAAOolB,GACzBlW,EAAQ+R,EAAMmjB,GAElBnjB,EAAMmjB,GAAQnjB,EAAMjhB,GACpBihB,EAAMjhB,GAASkP,CACjB,CAEA,OADA+R,EAAMviB,OAASkmB,EACR3D,CACT,CASA,IAtTMU,GAOAoC,GA+SF8X,IAtTEla,GAAS0iB,IAsTkB,SAAS3gB,GACxC,IAAI/B,EAAS,GAOb,OAN6B,KAAzB+B,EAAO4gB,WAAW,IACpB3iB,EAAOxe,KAAK,IAEdugB,EAAOrkB,QAAQ0b,IAAY,SAASwK,EAAO4I,EAAQoW,EAAOC,GACxD7iB,EAAOxe,KAAKohC,EAAQC,EAAUnlC,QAAQoc,GAAc,MAAS0S,GAAU5I,EACzE,IACO5D,CACT,IA/T6B,SAAS5e,GAIlC,OAh0MiB,MA6zMbghB,GAAMa,MACRb,GAAMgI,QAEDhpB,CACT,IAEIghB,GAAQpC,GAAOoC,MACZpC,IAgUT,SAASgR,GAAMzjB,GACb,GAAoB,iBAATA,GAAqB2iB,GAAS3iB,GACvC,OAAOA,EAET,IAAIyS,EAAUzS,EAAQ,GACtB,MAAkB,KAAVyS,GAAkB,EAAIzS,IAAU,IAAa,KAAOyS,CAC9D,CASA,SAASqI,GAASlJ,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOuF,GAAa1nB,KAAKmiB,EAC3B,CAAE,MAAO5hB,GAAI,CACb,IACE,OAAQ4hB,EAAO,EACjB,CAAE,MAAO5hB,GAAI,CACf,CACA,MAAO,EACT,CA2BA,SAAS2rB,GAAa+T,GACpB,GAAIA,aAAmBjU,GACrB,OAAOiU,EAAQ6F,QAEjB,IAAI9iB,EAAS,IAAIiJ,GAAcgU,EAAQzT,YAAayT,EAAQvT,WAI5D,OAHA1J,EAAOyJ,YAAc+B,GAAUyR,EAAQxT,aACvCzJ,EAAO2J,UAAasT,EAAQtT,UAC5B3J,EAAO4J,WAAaqT,EAAQrT,WACrB5J,CACT,CAqIA,IAAI+iB,GAAa1L,IAAS,SAAS/X,EAAO/d,GACxC,OAAOs0B,GAAkBvW,GACrB0P,GAAe1P,EAAO8Q,GAAY7uB,EAAQ,EAAGs0B,IAAmB,IAChE,EACN,IA4BImN,GAAe3L,IAAS,SAAS/X,EAAO/d,GAC1C,IAAIie,EAAW5Y,GAAKrF,GAIpB,OAHIs0B,GAAkBrW,KACpBA,EAAWlkB,GAENu6B,GAAkBvW,GACrB0P,GAAe1P,EAAO8Q,GAAY7uB,EAAQ,EAAGs0B,IAAmB,GAAOQ,GAAY7W,EAAU,IAC7F,EACN,IAyBIyjB,GAAiB5L,IAAS,SAAS/X,EAAO/d,GAC5C,IAAI6e,EAAaxZ,GAAKrF,GAItB,OAHIs0B,GAAkBzV,KACpBA,EAAa9kB,GAERu6B,GAAkBvW,GACrB0P,GAAe1P,EAAO8Q,GAAY7uB,EAAQ,EAAGs0B,IAAmB,GAAOv6B,EAAW8kB,GAClF,EACN,IAqOA,SAAS8iB,GAAU5jB,EAAOO,EAAWoB,GACnC,IAAIlkB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIsB,EAAqB,MAAb4iB,EAAoB,EAAIgf,GAAUhf,GAI9C,OAHI5iB,EAAQ,IACVA,EAAQ6oB,GAAUnqB,EAASsB,EAAO,IAE7B2iB,GAAc1B,EAAO+W,GAAYxW,EAAW,GAAIxhB,EACzD,CAqCA,SAAS8kC,GAAc7jB,EAAOO,EAAWoB,GACvC,IAAIlkB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIsB,EAAQtB,EAAS,EAOrB,OANIkkB,IAAc3lB,IAChB+C,EAAQ4hC,GAAUhf,GAClB5iB,EAAQ4iB,EAAY,EAChBiG,GAAUnqB,EAASsB,EAAO,GAC1B+oB,GAAU/oB,EAAOtB,EAAS,IAEzBikB,GAAc1B,EAAO+W,GAAYxW,EAAW,GAAIxhB,GAAO,EAChE,CAgBA,SAAS8iC,GAAQ7hB,GAEf,OADsB,MAATA,GAAoBA,EAAMviB,OACvBqzB,GAAY9Q,EAAO,GAAK,EAC1C,CA+FA,SAAS8jB,GAAK9jB,GACZ,OAAQA,GAASA,EAAMviB,OAAUuiB,EAAM,GAAKhkB,CAC9C,CAyEA,IAAI+nC,GAAehM,IAAS,SAASvF,GACnC,IAAIwR,EAASjjB,GAASyR,EAAQkI,IAC9B,OAAQsJ,EAAOvmC,QAAUumC,EAAO,KAAOxR,EAAO,GAC1CD,GAAiByR,GACjB,EACN,IAyBIC,GAAiBlM,IAAS,SAASvF,GACrC,IAAItS,EAAW5Y,GAAKkrB,GAChBwR,EAASjjB,GAASyR,EAAQkI,IAO9B,OALIxa,IAAa5Y,GAAK08B,GACpB9jB,EAAWlkB,EAEXgoC,EAAO9T,MAED8T,EAAOvmC,QAAUumC,EAAO,KAAOxR,EAAO,GAC1CD,GAAiByR,EAAQjN,GAAY7W,EAAU,IAC/C,EACN,IAuBIgkB,GAAmBnM,IAAS,SAASvF,GACvC,IAAI1R,EAAaxZ,GAAKkrB,GAClBwR,EAASjjB,GAASyR,EAAQkI,IAM9B,OAJA5Z,EAAkC,mBAAdA,EAA2BA,EAAa9kB,IAE1DgoC,EAAO9T,MAED8T,EAAOvmC,QAAUumC,EAAO,KAAOxR,EAAO,GAC1CD,GAAiByR,EAAQhoC,EAAW8kB,GACpC,EACN,IAmCA,SAASxZ,GAAK0Y,GACZ,IAAIviB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAOA,EAASuiB,EAAMviB,EAAS,GAAKzB,CACtC,CAsFA,IAAImoC,GAAOpM,GAASqM,IAsBpB,SAASA,GAAQpkB,EAAO/d,GACtB,OAAQ+d,GAASA,EAAMviB,QAAUwE,GAAUA,EAAOxE,OAC9Cg6B,GAAYzX,EAAO/d,GACnB+d,CACN,CAoFA,IAAIqkB,GAAS9G,IAAS,SAASvd,EAAO2X,GACpC,IAAIl6B,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnCijB,EAASqM,GAAO/M,EAAO2X,GAM3B,OAJAD,GAAW1X,EAAOe,GAAS4W,GAAS,SAAS54B,GAC3C,OAAO8sB,GAAQ9sB,EAAOtB,IAAWsB,EAAQA,CAC3C,IAAGgD,KAAKq1B,KAED1W,CACT,IA0EA,SAAS2H,GAAQrI,GACf,OAAgB,MAATA,EAAgBA,EAAQoI,GAAc1qB,KAAKsiB,EACpD,CAiaA,IAAIskB,GAAQvM,IAAS,SAASvF,GAC5B,OAAOqH,GAAS/I,GAAY0B,EAAQ,EAAG+D,IAAmB,GAC5D,IAyBIgO,GAAUxM,IAAS,SAASvF,GAC9B,IAAItS,EAAW5Y,GAAKkrB,GAIpB,OAHI+D,GAAkBrW,KACpBA,EAAWlkB,GAEN69B,GAAS/I,GAAY0B,EAAQ,EAAG+D,IAAmB,GAAOQ,GAAY7W,EAAU,GACzF,IAuBIskB,GAAYzM,IAAS,SAASvF,GAChC,IAAI1R,EAAaxZ,GAAKkrB,GAEtB,OADA1R,EAAkC,mBAAdA,EAA2BA,EAAa9kB,EACrD69B,GAAS/I,GAAY0B,EAAQ,EAAG+D,IAAmB,GAAOv6B,EAAW8kB,EAC9E,IA+FA,SAAS2jB,GAAMzkB,GACb,IAAMA,IAASA,EAAMviB,OACnB,MAAO,GAET,IAAIA,EAAS,EAOb,OANAuiB,EAAQQ,GAAYR,GAAO,SAAS0kB,GAClC,GAAInO,GAAkBmO,GAEpB,OADAjnC,EAASmqB,GAAU8c,EAAMjnC,OAAQA,IAC1B,CAEX,IACO6kB,GAAU7kB,GAAQ,SAASsB,GAChC,OAAOgiB,GAASf,EAAOsB,GAAaviB,GACtC,GACF,CAuBA,SAAS4lC,GAAU3kB,EAAOE,GACxB,IAAMF,IAASA,EAAMviB,OACnB,MAAO,GAET,IAAIijB,EAAS+jB,GAAMzkB,GACnB,OAAgB,MAAZE,EACKQ,EAEFK,GAASL,GAAQ,SAASgkB,GAC/B,OAAOlmC,GAAM0hB,EAAUlkB,EAAW0oC,EACpC,GACF,CAsBA,IAAIE,GAAU7M,IAAS,SAAS/X,EAAO/d,GACrC,OAAOs0B,GAAkBvW,GACrB0P,GAAe1P,EAAO/d,GACtB,EACN,IAoBI4iC,GAAM9M,IAAS,SAASvF,GAC1B,OAAO8H,GAAQ9Z,GAAYgS,EAAQ+D,IACrC,IAyBIuO,GAAQ/M,IAAS,SAASvF,GAC5B,IAAItS,EAAW5Y,GAAKkrB,GAIpB,OAHI+D,GAAkBrW,KACpBA,EAAWlkB,GAENs+B,GAAQ9Z,GAAYgS,EAAQ+D,IAAoBQ,GAAY7W,EAAU,GAC/E,IAuBI6kB,GAAUhN,IAAS,SAASvF,GAC9B,IAAI1R,EAAaxZ,GAAKkrB,GAEtB,OADA1R,EAAkC,mBAAdA,EAA2BA,EAAa9kB,EACrDs+B,GAAQ9Z,GAAYgS,EAAQ+D,IAAoBv6B,EAAW8kB,EACpE,IAkBIkkB,GAAMjN,GAAS0M,IA6DfQ,GAAUlN,IAAS,SAASvF,GAC9B,IAAI/0B,EAAS+0B,EAAO/0B,OAChByiB,EAAWziB,EAAS,EAAI+0B,EAAO/0B,EAAS,GAAKzB,EAGjD,OADAkkB,EAA8B,mBAAZA,GAA0BsS,EAAOtC,MAAOhQ,GAAYlkB,EAC/D2oC,GAAUnS,EAAQtS,EAC3B,IAiCA,SAASglB,GAAMj3B,GACb,IAAIyS,EAAS8I,GAAOvb,GAEpB,OADAyS,EAAO0J,WAAY,EACZ1J,CACT,CAqDA,SAASgd,GAAKzvB,EAAOk3B,GACnB,OAAOA,EAAYl3B,EACrB,CAkBA,IAAIm3B,GAAY7H,IAAS,SAASvQ,GAChC,IAAIvvB,EAASuvB,EAAMvvB,OACf+I,EAAQ/I,EAASuvB,EAAM,GAAK,EAC5B/e,EAAQxP,KAAKyrB,YACbib,EAAc,SAASjjB,GAAU,OAAO6K,GAAO7K,EAAQ8K,EAAQ,EAEnE,QAAIvvB,EAAS,GAAKgB,KAAK0rB,YAAY1sB,SAC7BwQ,aAAiByb,IAAiBmC,GAAQrlB,KAGhDyH,EAAQA,EAAMrM,MAAM4E,GAAQA,GAAS/I,EAAS,EAAI,KAC5C0sB,YAAYjoB,KAAK,CACrB,KAAQw7B,GACR,KAAQ,CAACyH,GACT,QAAWnpC,IAEN,IAAI2tB,GAAc1b,EAAOxP,KAAK2rB,WAAWsT,MAAK,SAAS1d,GAI5D,OAHIviB,IAAWuiB,EAAMviB,QACnBuiB,EAAM9d,KAAKlG,GAENgkB,CACT,KAbSvhB,KAAKi/B,KAAKyH,EAcrB,IAiPIE,GAAUjJ,IAAiB,SAAS1b,EAAQzS,EAAOnM,GACjDnE,GAAeD,KAAKgjB,EAAQ5e,KAC5B4e,EAAO5e,GAETyqB,GAAgB7L,EAAQ5e,EAAK,EAEjC,IAqIIT,GAAO+7B,GAAWwG,IAqBlB0B,GAAWlI,GAAWyG,IA2G1B,SAASrmC,GAAQgkB,EAAYtB,GAE3B,OADW/iB,GAAQqkB,GAAcpB,GAAYwM,IACjCpL,EAAYuV,GAAY7W,EAAU,GAChD,CAsBA,SAASqlB,GAAa/jB,EAAYtB,GAEhC,OADW/iB,GAAQqkB,GAAcnB,GAAiBmQ,IACtChP,EAAYuV,GAAY7W,EAAU,GAChD,CAyBA,IAAIslB,GAAUpJ,IAAiB,SAAS1b,EAAQzS,EAAOnM,GACjDnE,GAAeD,KAAKgjB,EAAQ5e,GAC9B4e,EAAO5e,GAAKI,KAAK+L,GAEjBse,GAAgB7L,EAAQ5e,EAAK,CAACmM,GAElC,IAoEIw3B,GAAY1N,IAAS,SAASvW,EAAYgQ,EAAMrxB,GAClD,IAAIpB,GAAS,EACT+uB,EAAwB,mBAAR0D,EAChB9Q,EAASiV,GAAYnU,GAActkB,EAAMskB,EAAW/jB,QAAU,GAKlE,OAHAmvB,GAASpL,GAAY,SAASvT,GAC5ByS,IAAS3hB,GAAS+uB,EAAStvB,GAAMgzB,EAAMvjB,EAAO9N,GAAQ4yB,GAAW9kB,EAAOujB,EAAMrxB,EAChF,IACOugB,CACT,IA8BIglB,GAAQtJ,IAAiB,SAAS1b,EAAQzS,EAAOnM,GACnDyqB,GAAgB7L,EAAQ5e,EAAKmM,EAC/B,IA4CA,SAASyV,GAAIlC,EAAYtB,GAEvB,OADW/iB,GAAQqkB,GAAcT,GAAW2U,IAChClU,EAAYuV,GAAY7W,EAAU,GAChD,CAiFA,IAAIylB,GAAYvJ,IAAiB,SAAS1b,EAAQzS,EAAOnM,GACvD4e,EAAO5e,EAAM,EAAI,GAAGI,KAAK+L,EAC3B,IAAG,WAAa,MAAO,CAAC,GAAI,GAAK,IAmS7B23B,GAAS7N,IAAS,SAASvW,EAAYqV,GACzC,GAAkB,MAAdrV,EACF,MAAO,GAET,IAAI/jB,EAASo5B,EAAUp5B,OAMvB,OALIA,EAAS,GAAKi/B,GAAelb,EAAYqV,EAAU,GAAIA,EAAU,IACnEA,EAAY,GACHp5B,EAAS,GAAKi/B,GAAe7F,EAAU,GAAIA,EAAU,GAAIA,EAAU,MAC5EA,EAAY,CAACA,EAAU,KAElBD,GAAYpV,EAAYsP,GAAY+F,EAAW,GAAI,GAC5D,IAoBIr6B,GAAMsqB,IAAU,WAClB,OAAOzI,GAAK5hB,KAAKD,KACnB,EAyDA,SAAS6hC,GAAIxe,EAAM0C,EAAGka,GAGpB,OAFAla,EAAIka,EAAQzgC,EAAYumB,EACxBA,EAAK1C,GAAa,MAAL0C,EAAa1C,EAAKpiB,OAAS8kB,EACjCye,GAAWnhB,EAAM7I,EAAehb,EAAWA,EAAWA,EAAWA,EAAWumB,EACrF,CAmBA,SAASsjB,GAAOtjB,EAAG1C,GACjB,IAAIa,EACJ,GAAmB,mBAARb,EACT,MAAM,IAAIhhB,GAAU+X,GAGtB,OADA2L,EAAIoe,GAAUpe,GACP,WAOL,QANMA,EAAI,IACR7B,EAASb,EAAKrhB,MAAMC,KAAMC,YAExB6jB,GAAK,IACP1C,EAAO7jB,GAEF0kB,CACT,CACF,CAqCA,IAAIolB,GAAO/N,IAAS,SAASlY,EAAMC,EAASub,GAC1C,IAAI/N,EAv4Ta,EAw4TjB,GAAI+N,EAAS59B,OAAQ,CACnB,IAAI69B,EAAUxX,GAAeuX,EAAUsD,GAAUmH,KACjDxY,GAAWvW,CACb,CACA,OAAOiqB,GAAWnhB,EAAMyN,EAASxN,EAASub,EAAUC,EACtD,IA+CIyK,GAAUhO,IAAS,SAAS7V,EAAQpgB,EAAKu5B,GAC3C,IAAI/N,EAAU0Y,EACd,GAAI3K,EAAS59B,OAAQ,CACnB,IAAI69B,EAAUxX,GAAeuX,EAAUsD,GAAUoH,KACjDzY,GAAWvW,CACb,CACA,OAAOiqB,GAAWl/B,EAAKwrB,EAASpL,EAAQmZ,EAAUC,EACpD,IAqJA,SAAS2K,GAASpmB,EAAM4P,EAAMzrB,GAC5B,IAAIkiC,EACAC,EACAC,EACA1lB,EACA2lB,EACAC,EACAC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACT3J,GAAW,EAEf,GAAmB,mBAARjd,EACT,MAAM,IAAIhhB,GAAU+X,GAUtB,SAAS8vB,EAAWxzB,GAClB,IAAI/S,EAAO+lC,EACPpmB,EAAUqmB,EAKd,OAHAD,EAAWC,EAAWnqC,EACtBuqC,EAAiBrzB,EACjBwN,EAASb,EAAKrhB,MAAMshB,EAAS3f,EAE/B,CAqBA,SAASwmC,EAAazzB,GACpB,IAAI0zB,EAAoB1zB,EAAOozB,EAM/B,OAAQA,IAAiBtqC,GAAc4qC,GAAqBnX,GACzDmX,EAAoB,GAAOH,GANJvzB,EAAOqzB,GAM8BH,CACjE,CAEA,SAASS,IACP,IAAI3zB,EAAO1W,KACX,GAAImqC,EAAazzB,GACf,OAAO4zB,EAAa5zB,GAGtBmzB,EAAUvpC,GAAW+pC,EA3BvB,SAAuB3zB,GACrB,IAEI6zB,EAActX,GAFMvc,EAAOozB,GAI/B,OAAOG,EACH3e,GAAUif,EAAaX,GAJDlzB,EAAOqzB,IAK7BQ,CACN,CAmBqCC,CAAc9zB,GACnD,CAEA,SAAS4zB,EAAa5zB,GAKpB,OAJAmzB,EAAUrqC,EAIN8gC,GAAYoJ,EACPQ,EAAWxzB,IAEpBgzB,EAAWC,EAAWnqC,EACf0kB,EACT,CAcA,SAASumB,IACP,IAAI/zB,EAAO1W,KACP0qC,EAAaP,EAAazzB,GAM9B,GAJAgzB,EAAWxnC,UACXynC,EAAW1nC,KACX6nC,EAAepzB,EAEXg0B,EAAY,CACd,GAAIb,IAAYrqC,EACd,OAzEN,SAAqBkX,GAMnB,OAJAqzB,EAAiBrzB,EAEjBmzB,EAAUvpC,GAAW+pC,EAAcpX,GAE5B+W,EAAUE,EAAWxzB,GAAQwN,CACtC,CAkEaymB,CAAYb,GAErB,GAAIG,EAIF,OAFAnzB,GAAa+yB,GACbA,EAAUvpC,GAAW+pC,EAAcpX,GAC5BiX,EAAWJ,EAEtB,CAIA,OAHID,IAAYrqC,IACdqqC,EAAUvpC,GAAW+pC,EAAcpX,IAE9B/O,CACT,CAGA,OA3GA+O,EAAO0Q,GAAS1Q,IAAS,EACrB1F,GAAS/lB,KACXwiC,IAAYxiC,EAAQwiC,QAEpBJ,GADAK,EAAS,YAAaziC,GACH4jB,GAAUuY,GAASn8B,EAAQoiC,UAAY,EAAG3W,GAAQ2W,EACrEtJ,EAAW,aAAc94B,IAAYA,EAAQ84B,SAAWA,GAoG1DmK,EAAUG,OApCV,WACMf,IAAYrqC,GACdsX,GAAa+yB,GAEfE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,EAAUrqC,CACjD,EA+BAirC,EAAUI,MA7BV,WACE,OAAOhB,IAAYrqC,EAAY0kB,EAASomB,EAAatqC,KACvD,EA4BOyqC,CACT,CAoBA,IAAIK,GAAQvP,IAAS,SAASlY,EAAM1f,GAClC,OAAOqvB,GAAU3P,EAAM,EAAG1f,EAC5B,IAqBIonC,GAAQxP,IAAS,SAASlY,EAAM4P,EAAMtvB,GACxC,OAAOqvB,GAAU3P,EAAMsgB,GAAS1Q,IAAS,EAAGtvB,EAC9C,IAoEA,SAASijC,GAAQvjB,EAAM2nB,GACrB,GAAmB,mBAAR3nB,GAAmC,MAAZ2nB,GAAuC,mBAAZA,EAC3D,MAAM,IAAI3oC,GAAU+X,GAEtB,IAAI6wB,EAAW,WACb,IAAItnC,EAAOzB,UACPoD,EAAM0lC,EAAWA,EAAShpC,MAAMC,KAAM0B,GAAQA,EAAK,GACnD2iB,EAAQ2kB,EAAS3kB,MAErB,GAAIA,EAAMC,IAAIjhB,GACZ,OAAOghB,EAAM3S,IAAIrO,GAEnB,IAAI4e,EAASb,EAAKrhB,MAAMC,KAAM0B,GAE9B,OADAsnC,EAAS3kB,MAAQA,EAAM5U,IAAIpM,EAAK4e,IAAWoC,EACpCpC,CACT,EAEA,OADA+mB,EAAS3kB,MAAQ,IAAKsgB,GAAQsE,OAASzc,IAChCwc,CACT,CAyBA,SAASE,GAAOpnB,GACd,GAAwB,mBAAbA,EACT,MAAM,IAAI1hB,GAAU+X,GAEtB,OAAO,WACL,IAAIzW,EAAOzB,UACX,OAAQyB,EAAK1C,QACX,KAAK,EAAG,OAAQ8iB,EAAU7iB,KAAKe,MAC/B,KAAK,EAAG,OAAQ8hB,EAAU7iB,KAAKe,KAAM0B,EAAK,IAC1C,KAAK,EAAG,OAAQogB,EAAU7iB,KAAKe,KAAM0B,EAAK,GAAIA,EAAK,IACnD,KAAK,EAAG,OAAQogB,EAAU7iB,KAAKe,KAAM0B,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE9D,OAAQogB,EAAU/hB,MAAMC,KAAM0B,EAChC,CACF,CApCAijC,GAAQsE,MAAQzc,GA2FhB,IAAI2c,GAAW/M,IAAS,SAAShb,EAAMgoB,GAKrC,IAAIC,GAJJD,EAAmC,GAArBA,EAAWpqC,QAAeN,GAAQ0qC,EAAW,IACvD9mB,GAAS8mB,EAAW,GAAIllB,GAAUoU,OAClChW,GAAS+P,GAAY+W,EAAY,GAAIllB,GAAUoU,QAEtBt5B,OAC7B,OAAOs6B,IAAS,SAAS53B,GAIvB,IAHA,IAAIpB,GAAS,EACTtB,EAASqqB,GAAU3nB,EAAK1C,OAAQqqC,KAE3B/oC,EAAQtB,GACf0C,EAAKpB,GAAS8oC,EAAW9oC,GAAOrB,KAAKe,KAAM0B,EAAKpB,IAElD,OAAOP,GAAMqhB,EAAMphB,KAAM0B,EAC3B,GACF,IAmCI4nC,GAAUhQ,IAAS,SAASlY,EAAMwb,GACpC,IAAIC,EAAUxX,GAAeuX,EAAUsD,GAAUoJ,KACjD,OAAO/G,GAAWnhB,EAAM9I,EAAmB/a,EAAWq/B,EAAUC,EAClE,IAkCI0M,GAAejQ,IAAS,SAASlY,EAAMwb,GACzC,IAAIC,EAAUxX,GAAeuX,EAAUsD,GAAUqJ,KACjD,OAAOhH,GAAWnhB,EAvgVQ,GAugVuB7jB,EAAWq/B,EAAUC,EACxE,IAwBI2M,GAAQ1K,IAAS,SAAS1d,EAAM8X,GAClC,OAAOqJ,GAAWnhB,EA/hVA,IA+hVuB7jB,EAAWA,EAAWA,EAAW27B,EAC5E,IAgaA,SAASrL,GAAGre,EAAOmkB,GACjB,OAAOnkB,IAAUmkB,GAAUnkB,GAAUA,GAASmkB,GAAUA,CAC1D,CAyBA,IAAI8V,GAAKhI,GAA0B/N,IAyB/BgW,GAAMjI,IAA0B,SAASjyB,EAAOmkB,GAClD,OAAOnkB,GAASmkB,CAClB,IAoBI3G,GAAcuH,GAAgB,WAAa,OAAOt0B,SAAW,CAA/B,IAAsCs0B,GAAkB,SAAS/kB,GACjG,OAAOwb,GAAaxb,IAAUtQ,GAAeD,KAAKuQ,EAAO,YACtDoY,GAAqB3oB,KAAKuQ,EAAO,SACtC,EAyBI9Q,GAAUD,EAAMC,QAmBhB+hB,GAAgBD,GAAoB0D,GAAU1D,IA75PlD,SAA2BhR,GACzB,OAAOwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUqK,CACrD,EAs7PA,SAASqd,GAAY1nB,GACnB,OAAgB,MAATA,GAAiBk0B,GAASl0B,EAAMxQ,UAAY6zB,GAAWrjB,EAChE,CA2BA,SAASsoB,GAAkBtoB,GACzB,OAAOwb,GAAaxb,IAAU0nB,GAAY1nB,EAC5C,CAyCA,IAAIsZ,GAAWD,IAAkBkb,GAmB7BpjB,GAASD,GAAawD,GAAUxD,IAxgQpC,SAAoBlR,GAClB,OAAOwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUwJ,CACrD,EA8qQA,SAAS2wB,GAAQn6B,GACf,IAAKwb,GAAaxb,GAChB,OAAO,EAET,IAAI2f,EAAMkE,GAAW7jB,GACrB,OAAO2f,GAAOlW,GA9yWF,yBA8yWckW,GACC,iBAAjB3f,EAAMlQ,SAA4C,iBAAdkQ,EAAMnQ,OAAqB04B,GAAcvoB,EACzF,CAiDA,SAASqjB,GAAWrjB,GAClB,IAAK8b,GAAS9b,GACZ,OAAO,EAIT,IAAI2f,EAAMkE,GAAW7jB,GACrB,OAAO2f,GAAOjW,GAAWiW,GAAOhW,GA32WrB,0BA22W+BgW,GA/1W/B,kBA+1WkDA,CAC/D,CA4BA,SAASya,GAAUp6B,GACjB,MAAuB,iBAATA,GAAqBA,GAAS0yB,GAAU1yB,EACxD,CA4BA,SAASk0B,GAASl0B,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAASiJ,CAC7C,CA2BA,SAAS6S,GAAS9b,GAChB,IAAItN,SAAcsN,EAClB,OAAgB,MAATA,IAA0B,UAARtN,GAA4B,YAARA,EAC/C,CA0BA,SAAS8oB,GAAaxb,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,CAmBA,IAAIqR,GAAQD,GAAYsD,GAAUtD,IA5xQlC,SAAmBpR,GACjB,OAAOwb,GAAaxb,IAAU4f,GAAO5f,IAAU4J,CACjD,EA4+QA,SAASywB,GAASr6B,GAChB,MAAuB,iBAATA,GACXwb,GAAaxb,IAAU6jB,GAAW7jB,IAAU6J,CACjD,CA8BA,SAAS0e,GAAcvoB,GACrB,IAAKwb,GAAaxb,IAAU6jB,GAAW7jB,IAAU8J,EAC/C,OAAO,EAET,IAAI+R,EAAQ5D,GAAajY,GACzB,GAAc,OAAV6b,EACF,OAAO,EAET,IAAI0E,EAAO7wB,GAAeD,KAAKosB,EAAO,gBAAkBA,EAAM/pB,YAC9D,MAAsB,mBAARyuB,GAAsBA,aAAgBA,GAClDpJ,GAAa1nB,KAAK8wB,IAAS7I,EAC/B,CAmBA,IAAInG,GAAWD,GAAeoD,GAAUpD,IA59QxC,SAAsBtR,GACpB,OAAOwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUgK,CACrD,EA4gRIyH,GAAQD,GAAYkD,GAAUlD,IAngRlC,SAAmBxR,GACjB,OAAOwb,GAAaxb,IAAU4f,GAAO5f,IAAUiK,CACjD,EAohRA,SAASqwB,GAASt6B,GAChB,MAAuB,iBAATA,IACV9Q,GAAQ8Q,IAAUwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUkK,CACpE,CAmBA,SAASyY,GAAS3iB,GAChB,MAAuB,iBAATA,GACXwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUmK,CACjD,CAmBA,IAAIwH,GAAeD,GAAmBgD,GAAUhD,IAvjRhD,SAA0B1R,GACxB,OAAOwb,GAAaxb,IAClBk0B,GAASl0B,EAAMxQ,WAAakgB,GAAemU,GAAW7jB,GAC1D,EA4oRIu6B,GAAKtI,GAA0BzK,IAyB/BgT,GAAMvI,IAA0B,SAASjyB,EAAOmkB,GAClD,OAAOnkB,GAASmkB,CAClB,IAyBA,SAASzwB,GAAQsM,GACf,IAAKA,EACH,MAAO,GAET,GAAI0nB,GAAY1nB,GACd,OAAOs6B,GAASt6B,GAASoW,GAAcpW,GAASie,GAAUje,GAE5D,GAAIuY,IAAevY,EAAMuY,IACvB,OAv8VN,SAAyBlpB,GAIvB,IAHA,IAAI0X,EACA0L,EAAS,KAEJ1L,EAAO1X,EAASorC,QAAQC,MAC/BjoB,EAAOxe,KAAK8S,EAAK/G,OAEnB,OAAOyS,CACT,CA+7VakoB,CAAgB36B,EAAMuY,OAE/B,IAAIoH,EAAMC,GAAO5f,GAGjB,OAFW2f,GAAO/V,EAAS4L,GAAcmK,GAAO1V,EAAS8L,GAAa/hB,IAE1DgM,EACd,CAyBA,SAAS+xB,GAAS/xB,GAChB,OAAKA,GAGLA,EAAQkyB,GAASlyB,MACHgJ,GAAYhJ,KAAU,IAxkYtB,uBAykYAA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,CAQjC,CA4BA,SAAS0yB,GAAU1yB,GACjB,IAAIyS,EAASsf,GAAS/xB,GAClB46B,EAAYnoB,EAAS,EAEzB,OAAOA,GAAWA,EAAUmoB,EAAYnoB,EAASmoB,EAAYnoB,EAAU,CACzE,CA6BA,SAASooB,GAAS76B,GAChB,OAAOA,EAAQke,GAAUwU,GAAU1yB,GAAQ,EAAGmJ,GAAoB,CACpE,CAyBA,SAAS+oB,GAASlyB,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI2iB,GAAS3iB,GACX,OAAOkJ,EAET,GAAI4S,GAAS9b,GAAQ,CACnB,IAAImkB,EAAgC,mBAAjBnkB,EAAMqb,QAAwBrb,EAAMqb,UAAYrb,EACnEA,EAAQ8b,GAASqI,GAAUA,EAAQ,GAAMA,CAC3C,CACA,GAAoB,iBAATnkB,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQuU,GAASvU,GACjB,IAAI86B,EAAWnuB,GAAWvX,KAAK4K,GAC/B,OAAQ86B,GAAYjuB,GAAUzX,KAAK4K,GAC/B+P,GAAa/P,EAAMrM,MAAM,GAAImnC,EAAW,EAAI,GAC3CpuB,GAAWtX,KAAK4K,GAASkJ,GAAOlJ,CACvC,CA0BA,SAASwoB,GAAcxoB,GACrB,OAAO6e,GAAW7e,EAAOkgB,GAAOlgB,GAClC,CAqDA,SAASoX,GAASpX,GAChB,OAAgB,MAATA,EAAgB,GAAK2rB,GAAa3rB,EAC3C,CAoCA,IAAIhS,GAASqgC,IAAe,SAASpa,EAAQljB,GAC3C,GAAIw2B,GAAYx2B,IAAW22B,GAAY32B,GACrC8tB,GAAW9tB,EAAQM,GAAKN,GAASkjB,QAGnC,IAAK,IAAIpgB,KAAO9C,EACVrB,GAAeD,KAAKsB,EAAQ8C,IAC9B0qB,GAAYtK,EAAQpgB,EAAK9C,EAAO8C,GAGtC,IAiCIknC,GAAW1M,IAAe,SAASpa,EAAQljB,GAC7C8tB,GAAW9tB,EAAQmvB,GAAOnvB,GAASkjB,EACrC,IA+BI+mB,GAAe3M,IAAe,SAASpa,EAAQljB,EAAQk3B,EAAU3I,GACnET,GAAW9tB,EAAQmvB,GAAOnvB,GAASkjB,EAAQqL,EAC7C,IA8BI2b,GAAa5M,IAAe,SAASpa,EAAQljB,EAAQk3B,EAAU3I,GACjET,GAAW9tB,EAAQM,GAAKN,GAASkjB,EAAQqL,EAC3C,IAmBI4b,GAAK5L,GAASxQ,IA8Ddrd,GAAWqoB,IAAS,SAAS7V,EAAQsa,GACvCta,EAASvjB,GAAOujB,GAEhB,IAAInjB,GAAS,EACTtB,EAAS++B,EAAQ/+B,OACjBg/B,EAAQh/B,EAAS,EAAI++B,EAAQ,GAAKxgC,EAMtC,IAJIygC,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDh/B,EAAS,KAGFsB,EAAQtB,GAMf,IALA,IAAIuB,EAASw9B,EAAQz9B,GACjBmJ,EAAQimB,GAAOnvB,GACfoqC,GAAc,EACdC,EAAcnhC,EAAMzK,SAEf2rC,EAAaC,GAAa,CACjC,IAAIvnC,EAAMoG,EAAMkhC,GACZn7B,EAAQiU,EAAOpgB,IAEfmM,IAAUjS,GACTswB,GAAGre,EAAOiX,GAAYpjB,MAAUnE,GAAeD,KAAKwkB,EAAQpgB,MAC/DogB,EAAOpgB,GAAO9C,EAAO8C,GAEzB,CAGF,OAAOogB,CACT,IAqBIonB,GAAevR,IAAS,SAAS53B,GAEnC,OADAA,EAAK+B,KAAKlG,EAAWylC,IACdjjC,GAAM+qC,GAAWvtC,EAAWmE,EACrC,IA+RA,SAASgQ,GAAI+R,EAAQsP,EAAMgO,GACzB,IAAI9e,EAAmB,MAAVwB,EAAiBlmB,EAAYu1B,GAAQrP,EAAQsP,GAC1D,OAAO9Q,IAAW1kB,EAAYwjC,EAAe9e,CAC/C,CA2DA,SAASsV,GAAM9T,EAAQsP,GACrB,OAAiB,MAAVtP,GAAkB+f,GAAQ/f,EAAQsP,EAAMc,GACjD,CAoBA,IAAIkX,GAASrK,IAAe,SAASze,EAAQzS,EAAOnM,GACrC,MAATmM,GACyB,mBAAlBA,EAAMoX,WACfpX,EAAQyX,GAAqBhoB,KAAKuQ,IAGpCyS,EAAOzS,GAASnM,CAClB,GAAGy2B,GAASnD,KA4BRqU,GAAWtK,IAAe,SAASze,EAAQzS,EAAOnM,GACvC,MAATmM,GACyB,mBAAlBA,EAAMoX,WACfpX,EAAQyX,GAAqBhoB,KAAKuQ,IAGhCtQ,GAAeD,KAAKgjB,EAAQzS,GAC9ByS,EAAOzS,GAAO/L,KAAKJ,GAEnB4e,EAAOzS,GAAS,CAACnM,EAErB,GAAGi1B,IAoBC2S,GAAS3R,GAAShF,IA8BtB,SAASzzB,GAAK4iB,GACZ,OAAOyT,GAAYzT,GAAUmJ,GAAcnJ,GAAUqT,GAASrT,EAChE,CAyBA,SAASiM,GAAOjM,GACd,OAAOyT,GAAYzT,GAAUmJ,GAAcnJ,GAAQ,GAloTrD,SAAoBA,GAClB,IAAK6H,GAAS7H,GACZ,OA09FJ,SAAsBA,GACpB,IAAIxB,EAAS,GACb,GAAc,MAAVwB,EACF,IAAK,IAAIpgB,KAAOnD,GAAOujB,GACrBxB,EAAOxe,KAAKJ,GAGhB,OAAO4e,CACT,CAl+FWipB,CAAaznB,GAEtB,IAAI0nB,EAAUpU,GAAYtT,GACtBxB,EAAS,GAEb,IAAK,IAAI5e,KAAOogB,GACD,eAAPpgB,IAAyB8nC,GAAYjsC,GAAeD,KAAKwkB,EAAQpgB,KACrE4e,EAAOxe,KAAKJ,GAGhB,OAAO4e,CACT,CAqnT6DmpB,CAAW3nB,EACxE,CAsGA,IAAI7iB,GAAQi9B,IAAe,SAASpa,EAAQljB,EAAQk3B,GAClDD,GAAU/T,EAAQljB,EAAQk3B,EAC5B,IAiCIqT,GAAYjN,IAAe,SAASpa,EAAQljB,EAAQk3B,EAAU3I,GAChE0I,GAAU/T,EAAQljB,EAAQk3B,EAAU3I,EACtC,IAsBIuc,GAAOvM,IAAS,SAASrb,EAAQ8K,GACnC,IAAItM,EAAS,CAAC,EACd,GAAc,MAAVwB,EACF,OAAOxB,EAET,IAAI8M,GAAS,EACbR,EAAQjM,GAASiM,GAAO,SAASwE,GAG/B,OAFAA,EAAOC,GAASD,EAAMtP,GACtBsL,IAAWA,EAASgE,EAAK/zB,OAAS,GAC3B+zB,CACT,IACA1E,GAAW5K,EAAQmN,GAAanN,GAASxB,GACrC8M,IACF9M,EAAS2M,GAAU3M,EAAQqpB,EAAwDrI,KAGrF,IADA,IAAIjkC,EAASuvB,EAAMvvB,OACZA,KACLo6B,GAAUnX,EAAQsM,EAAMvvB,IAE1B,OAAOijB,CACT,IA2CIoE,GAAOyY,IAAS,SAASrb,EAAQ8K,GACnC,OAAiB,MAAV9K,EAAiB,CAAC,EAnmT3B,SAAkBA,EAAQ8K,GACxB,OAAOuK,GAAWrV,EAAQ8K,GAAO,SAAS/e,EAAOujB,GAC/C,OAAOwE,GAAM9T,EAAQsP,EACvB,GACF,CA+lT+BwY,CAAS9nB,EAAQ8K,EAChD,IAoBA,SAASid,GAAO/nB,EAAQ3B,GACtB,GAAc,MAAV2B,EACF,MAAO,CAAC,EAEV,IAAIha,EAAQ6Y,GAASsO,GAAanN,IAAS,SAAS1f,GAClD,MAAO,CAACA,EACV,IAEA,OADA+d,EAAYwW,GAAYxW,GACjBgX,GAAWrV,EAAQha,GAAO,SAAS+F,EAAOujB,GAC/C,OAAOjR,EAAUtS,EAAOujB,EAAK,GAC/B,GACF,CA0IA,IAAI0Y,GAAUpJ,GAAcxhC,IA0BxB6qC,GAAYrJ,GAAc3S,IA4K9B,SAASlsB,GAAOigB,GACd,OAAiB,MAAVA,EAAiB,GAAKU,GAAWV,EAAQ5iB,GAAK4iB,GACvD,CAiNA,IAAIkoB,GAAYrN,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GAEtD,OADAsrC,EAAOA,EAAKlgC,cACLuW,GAAU3hB,EAAQurC,GAAWD,GAAQA,EAC9C,IAiBA,SAASC,GAAW7nB,GAClB,OAAO8nB,GAAWllB,GAAS5C,GAAQtY,cACrC,CAoBA,SAAS8yB,GAAOxa,GAEd,OADAA,EAAS4C,GAAS5C,KACDA,EAAOrkB,QAAQ4c,GAASoI,IAAchlB,QAAQgf,GAAa,GAC9E,CAqHA,IAAIotB,GAAYzN,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GACtD,OAAO2hB,GAAU3hB,EAAQ,IAAM,IAAMsrC,EAAKlgC,aAC5C,IAsBIsgC,GAAY1N,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GACtD,OAAO2hB,GAAU3hB,EAAQ,IAAM,IAAMsrC,EAAKlgC,aAC5C,IAmBIugC,GAAa9N,GAAgB,eA0N7B+N,GAAY5N,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GACtD,OAAO2hB,GAAU3hB,EAAQ,IAAM,IAAMsrC,EAAKlgC,aAC5C,IA+DIygC,GAAY7N,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GACtD,OAAO2hB,GAAU3hB,EAAQ,IAAM,IAAMwrC,GAAWF,EAClD,IAqiBIQ,GAAY9N,IAAiB,SAASrc,EAAQ2pB,EAAMtrC,GACtD,OAAO2hB,GAAU3hB,EAAQ,IAAM,IAAMsrC,EAAK3nC,aAC5C,IAmBI6nC,GAAa3N,GAAgB,eAqBjC,SAASI,GAAMva,EAAQqoB,EAASrO,GAI9B,OAHAha,EAAS4C,GAAS5C,IAClBqoB,EAAUrO,EAAQzgC,EAAY8uC,KAEd9uC,EArybpB,SAAwBymB,GACtB,OAAOjF,GAAiBna,KAAKof,EAC/B,CAoybasoB,CAAetoB,GA1jb5B,SAAsBA,GACpB,OAAOA,EAAO6B,MAAMhH,KAAkB,EACxC,CAwjbsC0tB,CAAavoB,GAzrcnD,SAAoBA,GAClB,OAAOA,EAAO6B,MAAMhK,KAAgB,EACtC,CAurc6D2wB,CAAWxoB,GAE7DA,EAAO6B,MAAMwmB,IAAY,EAClC,CA0BA,IAAII,GAAUnT,IAAS,SAASlY,EAAM1f,GACpC,IACE,OAAO3B,GAAMqhB,EAAM7jB,EAAWmE,EAChC,CAAE,MAAOlC,GACP,OAAOmqC,GAAQnqC,GAAKA,EAAI,IAAIC,GAAMD,EACpC,CACF,IA4BIktC,GAAU5N,IAAS,SAASrb,EAAQkpB,GAKtC,OAJAhrB,GAAUgrB,GAAa,SAAStpC,GAC9BA,EAAM4vB,GAAM5vB,GACZyqB,GAAgBrK,EAAQpgB,EAAKgkC,GAAK5jB,EAAOpgB,GAAMogB,GACjD,IACOA,CACT,IAoGA,SAASqW,GAAStqB,GAChB,OAAO,WACL,OAAOA,CACT,CACF,CAgDA,IAAIo9B,GAAO/N,KAuBPgO,GAAYhO,IAAW,GAkB3B,SAASlI,GAASnnB,GAChB,OAAOA,CACT,CA4CA,SAASiS,GAASL,GAChB,OAAOsV,GAA4B,mBAARtV,EAAqBA,EAAOwN,GAAUxN,EAjte/C,GAktepB,CAsGA,IAAIhiB,GAASk6B,IAAS,SAASvG,EAAMrxB,GACnC,OAAO,SAAS+hB,GACd,OAAO6Q,GAAW7Q,EAAQsP,EAAMrxB,EAClC,CACF,IAyBIorC,GAAWxT,IAAS,SAAS7V,EAAQ/hB,GACvC,OAAO,SAASqxB,GACd,OAAOuB,GAAW7Q,EAAQsP,EAAMrxB,EAClC,CACF,IAsCA,SAASqrC,GAAMtpB,EAAQljB,EAAQgF,GAC7B,IAAIkE,EAAQ5I,GAAKN,GACbosC,EAAc/Z,GAAcryB,EAAQkJ,GAEzB,MAAXlE,GACE+lB,GAAS/qB,KAAYosC,EAAY3tC,SAAWyK,EAAMzK,UACtDuG,EAAUhF,EACVA,EAASkjB,EACTA,EAASzjB,KACT2sC,EAAc/Z,GAAcryB,EAAQM,GAAKN,KAE3C,IAAIkmC,IAAUnb,GAAS/lB,IAAY,UAAWA,IAAcA,EAAQkhC,OAChEpX,EAASwD,GAAWpP,GAqBxB,OAnBA9B,GAAUgrB,GAAa,SAASvO,GAC9B,IAAIhd,EAAO7gB,EAAO69B,GAClB3a,EAAO2a,GAAchd,EACjBiO,IACF5L,EAAOriB,UAAUg9B,GAAc,WAC7B,IAAI5S,EAAWxrB,KAAK2rB,UACpB,GAAI8a,GAASjb,EAAU,CACrB,IAAIvJ,EAASwB,EAAOzjB,KAAKyrB,aAKzB,OAJcxJ,EAAOyJ,YAAc+B,GAAUztB,KAAK0rB,cAE1CjoB,KAAK,CAAE,KAAQ2d,EAAM,KAAQnhB,UAAW,QAAWwjB,IAC3DxB,EAAO0J,UAAYH,EACZvJ,CACT,CACA,OAAOb,EAAKrhB,MAAM0jB,EAAQlB,GAAU,CAACviB,KAAKwP,SAAUvP,WACtD,EAEJ,IAEOwjB,CACT,CAkCA,SAAS2e,KAET,CA+CA,IAAI4K,GAAOhM,GAAW1e,IA8BlB2qB,GAAYjM,GAAWnf,IAiCvBqrB,GAAWlM,GAAWre,IAwB1B,SAAS9e,GAASkvB,GAChB,OAAOsE,GAAMtE,GAAQlQ,GAAaoQ,GAAMF,IAh3X1C,SAA0BA,GACxB,OAAO,SAAStP,GACd,OAAOqP,GAAQrP,EAAQsP,EACzB,CACF,CA42XmDoa,CAAiBpa,EACpE,CAsEA,IAAIqa,GAAQ/L,KAsCRgM,GAAahM,IAAY,GAoB7B,SAASkC,KACP,MAAO,EACT,CAeA,SAASQ,KACP,OAAO,CACT,CA8JA,IA2oBMxjC,GA3oBF0S,GAAM4tB,IAAoB,SAASyM,EAAQC,GAC7C,OAAOD,EAASC,CAClB,GAAG,GAuBC/kB,GAAOwZ,GAAY,QAiBnBwL,GAAS3M,IAAoB,SAAS4M,EAAUC,GAClD,OAAOD,EAAWC,CACpB,GAAG,GAuBChlB,GAAQsZ,GAAY,SAwKpB2L,GAAW9M,IAAoB,SAAS+M,EAAYC,GACtD,OAAOD,EAAaC,CACtB,GAAG,GAuBCjwC,GAAQokC,GAAY,SAiBpB8L,GAAWjN,IAAoB,SAASkN,EAASC,GACnD,OAAOD,EAAUC,CACnB,GAAG,GAgmBH,OA1iBAjjB,GAAOkjB,MAp6MP,SAAenqB,EAAG1C,GAChB,GAAmB,mBAARA,EACT,MAAM,IAAIhhB,GAAU+X,GAGtB,OADA2L,EAAIoe,GAAUpe,GACP,WACL,KAAMA,EAAI,EACR,OAAO1C,EAAKrhB,MAAMC,KAAMC,UAE5B,CACF,EA25MA8qB,GAAO6U,IAAMA,GACb7U,GAAOvtB,OAASA,GAChButB,GAAOwf,SAAWA,GAClBxf,GAAOyf,aAAeA,GACtBzf,GAAO0f,WAAaA,GACpB1f,GAAO2f,GAAKA,GACZ3f,GAAOqc,OAASA,GAChBrc,GAAOsc,KAAOA,GACdtc,GAAO2hB,QAAUA,GACjB3hB,GAAOuc,QAAUA,GACjBvc,GAAOmjB,UAl8KP,WACE,IAAKjuC,UAAUjB,OACb,MAAO,GAET,IAAIwQ,EAAQvP,UAAU,GACtB,OAAOvB,GAAQ8Q,GAASA,EAAQ,CAACA,EACnC,EA67KAub,GAAO0b,MAAQA,GACf1b,GAAOojB,MApgTP,SAAe5sB,EAAO2D,EAAM8Y,GAExB9Y,GADG8Y,EAAQC,GAAe1c,EAAO2D,EAAM8Y,GAAS9Y,IAAS3nB,GAClD,EAEA4rB,GAAU+Y,GAAUhd,GAAO,GAEpC,IAAIlmB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,IAAKA,GAAUkmB,EAAO,EACpB,MAAO,GAMT,IAJA,IAAI5kB,EAAQ,EACR0hB,EAAW,EACXC,EAASxjB,EAAM8pB,GAAWvpB,EAASkmB,IAEhC5kB,EAAQtB,GACbijB,EAAOD,KAAcgY,GAAUzY,EAAOjhB,EAAQA,GAAS4kB,GAEzD,OAAOjD,CACT,EAm/SA8I,GAAOqjB,QAl+SP,SAAiB7sB,GAMf,IALA,IAAIjhB,GAAS,EACTtB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACnCgjB,EAAW,EACXC,EAAS,KAEJ3hB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdkP,IACFyS,EAAOD,KAAcxS,EAEzB,CACA,OAAOyS,CACT,EAs9SA8I,GAAOpe,OA97SP,WACE,IAAI3N,EAASiB,UAAUjB,OACvB,IAAKA,EACH,MAAO,GAMT,IAJA,IAAI0C,EAAOjD,EAAMO,EAAS,GACtBuiB,EAAQthB,UAAU,GAClBK,EAAQtB,EAELsB,KACLoB,EAAKpB,EAAQ,GAAKL,UAAUK,GAE9B,OAAOiiB,GAAU7jB,GAAQ6iB,GAASkM,GAAUlM,GAAS,CAACA,GAAQ8Q,GAAY3wB,EAAM,GAClF,EAk7SAqpB,GAAOsjB,KA3tCP,SAAc1c,GACZ,IAAI3yB,EAAkB,MAAT2yB,EAAgB,EAAIA,EAAM3yB,OACnC2hC,EAAarI,KASjB,OAPA3G,EAAS3yB,EAAcsjB,GAASqP,GAAO,SAASwQ,GAC9C,GAAsB,mBAAXA,EAAK,GACd,MAAM,IAAI/hC,GAAU+X,GAEtB,MAAO,CAACwoB,EAAWwB,EAAK,IAAKA,EAAK,GACpC,IALkB,GAOX7I,IAAS,SAAS53B,GAEvB,IADA,IAAIpB,GAAS,IACJA,EAAQtB,GAAQ,CACvB,IAAImjC,EAAOxQ,EAAMrxB,GACjB,GAAIP,GAAMoiC,EAAK,GAAIniC,KAAM0B,GACvB,OAAO3B,GAAMoiC,EAAK,GAAIniC,KAAM0B,EAEhC,CACF,GACF,EAwsCAqpB,GAAOujB,SA9qCP,SAAkB/tC,GAChB,OAz5YF,SAAsBA,GACpB,IAAIkJ,EAAQ5I,GAAKN,GACjB,OAAO,SAASkjB,GACd,OAAOqN,GAAerN,EAAQljB,EAAQkJ,EACxC,CACF,CAo5YS8kC,CAAa3f,GAAUruB,EA/ieZ,GAgjepB,EA6qCAwqB,GAAO+O,SAAWA,GAClB/O,GAAO6b,QAAUA,GACjB7b,GAAO1pB,OAtuHP,SAAgBD,EAAWH,GACzB,IAAIghB,EAASmJ,GAAWhqB,GACxB,OAAqB,MAAdH,EAAqBghB,EAASmM,GAAWnM,EAAQhhB,EAC1D,EAouHA8pB,GAAOyjB,MAzuMP,SAASA,EAAMptB,EAAMye,EAAO7B,GAE1B,IAAI/b,EAASsgB,GAAWnhB,EA7+TN,EA6+T6B7jB,EAAWA,EAAWA,EAAWA,EAAWA,EAD3FsiC,EAAQ7B,EAAQzgC,EAAYsiC,GAG5B,OADA5d,EAAOqD,YAAckpB,EAAMlpB,YACpBrD,CACT,EAquMA8I,GAAO0jB,WA7rMP,SAASA,EAAWrtB,EAAMye,EAAO7B,GAE/B,IAAI/b,EAASsgB,GAAWnhB,EAzhUA,GAyhU6B7jB,EAAWA,EAAWA,EAAWA,EAAWA,EADjGsiC,EAAQ7B,EAAQzgC,EAAYsiC,GAG5B,OADA5d,EAAOqD,YAAcmpB,EAAWnpB,YACzBrD,CACT,EAyrMA8I,GAAOyc,SAAWA,GAClBzc,GAAO9Z,SAAWA,GAClB8Z,GAAO8f,aAAeA,GACtB9f,GAAO8d,MAAQA,GACf9d,GAAO+d,MAAQA,GACf/d,GAAOia,WAAaA,GACpBja,GAAOka,aAAeA,GACtBla,GAAOma,eAAiBA,GACxBna,GAAO2jB,KAt0SP,SAAcntB,EAAOuC,EAAGka,GACtB,IAAIh/B,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAKA,EAIEg7B,GAAUzY,GADjBuC,EAAKka,GAASla,IAAMvmB,EAAa,EAAI2kC,GAAUpe,IACnB,EAAI,EAAIA,EAAG9kB,GAH9B,EAIX,EAg0SA+rB,GAAO4jB,UArySP,SAAmBptB,EAAOuC,EAAGka,GAC3B,IAAIh/B,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAKA,EAKEg7B,GAAUzY,EAAO,GADxBuC,EAAI9kB,GADJ8kB,EAAKka,GAASla,IAAMvmB,EAAa,EAAI2kC,GAAUpe,KAEhB,EAAI,EAAIA,GAJ9B,EAKX,EA8xSAiH,GAAO6jB,eAzvSP,SAAwBrtB,EAAOO,GAC7B,OAAQP,GAASA,EAAMviB,OACnBy8B,GAAUla,EAAO+W,GAAYxW,EAAW,IAAI,GAAM,GAClD,EACN,EAsvSAiJ,GAAO8jB,UAjtSP,SAAmBttB,EAAOO,GACxB,OAAQP,GAASA,EAAMviB,OACnBy8B,GAAUla,EAAO+W,GAAYxW,EAAW,IAAI,GAC5C,EACN,EA8sSAiJ,GAAO+jB,KA/qSP,SAAcvtB,EAAO/R,EAAOzH,EAAOC,GACjC,IAAIhJ,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAKA,GAGD+I,GAAyB,iBAATA,GAAqBk2B,GAAe1c,EAAO/R,EAAOzH,KACpEA,EAAQ,EACRC,EAAMhJ,GAzvIV,SAAkBuiB,EAAO/R,EAAOzH,EAAOC,GACrC,IAAIhJ,EAASuiB,EAAMviB,OAWnB,KATA+I,EAAQm6B,GAAUn6B,IACN,IACVA,GAASA,EAAQ/I,EAAS,EAAKA,EAAS+I,IAE1CC,EAAOA,IAAQzK,GAAayK,EAAMhJ,EAAUA,EAASkjC,GAAUl6B,IACrD,IACRA,GAAOhJ,GAETgJ,EAAMD,EAAQC,EAAM,EAAIqiC,GAASriC,GAC1BD,EAAQC,GACbuZ,EAAMxZ,KAAWyH,EAEnB,OAAO+R,CACT,CA2uISwtB,CAASxtB,EAAO/R,EAAOzH,EAAOC,IAN5B,EAOX,EAsqSA+iB,GAAO3d,OA3vOP,SAAgB2V,EAAYjB,GAE1B,OADWpjB,GAAQqkB,GAAchB,GAAcqQ,IACnCrP,EAAYuV,GAAYxW,EAAW,GACjD,EAyvOAiJ,GAAOikB,QAvqOP,SAAiBjsB,EAAYtB,GAC3B,OAAO4Q,GAAYpN,GAAIlC,EAAYtB,GAAW,EAChD,EAsqOAsJ,GAAOkkB,YAhpOP,SAAqBlsB,EAAYtB,GAC/B,OAAO4Q,GAAYpN,GAAIlC,EAAYtB,GAAWjJ,EAChD,EA+oOAuS,GAAOmkB,aAxnOP,SAAsBnsB,EAAYtB,EAAU6Q,GAE1C,OADAA,EAAQA,IAAU/0B,EAAY,EAAI2kC,GAAU5P,GACrCD,GAAYpN,GAAIlC,EAAYtB,GAAW6Q,EAChD,EAsnOAvH,GAAOqY,QAAUA,GACjBrY,GAAOokB,YAviSP,SAAqB5tB,GAEnB,OADsB,MAATA,GAAoBA,EAAMviB,OACvBqzB,GAAY9Q,EAAO/I,GAAY,EACjD,EAqiSAuS,GAAOqkB,aA/gSP,SAAsB7tB,EAAO+Q,GAE3B,OADsB,MAAT/Q,GAAoBA,EAAMviB,OAKhCqzB,GAAY9Q,EADnB+Q,EAAQA,IAAU/0B,EAAY,EAAI2kC,GAAU5P,IAFnC,EAIX,EAygSAvH,GAAOskB,KAz9LP,SAAcjuB,GACZ,OAAOmhB,GAAWnhB,EA5wUD,IA6wUnB,EAw9LA2J,GAAO6hB,KAAOA,GACd7hB,GAAO8hB,UAAYA,GACnB9hB,GAAOukB,UA3/RP,SAAmB3d,GAKjB,IAJA,IAAIrxB,GAAS,EACTtB,EAAkB,MAAT2yB,EAAgB,EAAIA,EAAM3yB,OACnCijB,EAAS,CAAC,IAEL3hB,EAAQtB,GAAQ,CACvB,IAAImjC,EAAOxQ,EAAMrxB,GACjB2hB,EAAOkgB,EAAK,IAAMA,EAAK,EACzB,CACA,OAAOlgB,CACT,EAk/RA8I,GAAOwkB,UA38GP,SAAmB9rB,GACjB,OAAiB,MAAVA,EAAiB,GAAKmP,GAAcnP,EAAQ5iB,GAAK4iB,GAC1D,EA08GAsH,GAAOykB,YAj7GP,SAAqB/rB,GACnB,OAAiB,MAAVA,EAAiB,GAAKmP,GAAcnP,EAAQiM,GAAOjM,GAC5D,EAg7GAsH,GAAOgc,QAAUA,GACjBhc,GAAO0kB,QA56RP,SAAiBluB,GAEf,OADsB,MAATA,GAAoBA,EAAMviB,OACvBg7B,GAAUzY,EAAO,GAAI,GAAK,EAC5C,EA06RAwJ,GAAOua,aAAeA,GACtBva,GAAOya,eAAiBA,GACxBza,GAAO0a,iBAAmBA,GAC1B1a,GAAOggB,OAASA,GAChBhgB,GAAOigB,SAAWA,GAClBjgB,GAAOic,UAAYA,GACnBjc,GAAOtJ,SAAWA,GAClBsJ,GAAOkc,MAAQA,GACflc,GAAOlqB,KAAOA,GACdkqB,GAAO2E,OAASA,GAChB3E,GAAO9F,IAAMA,GACb8F,GAAO2kB,QA1rGP,SAAiBjsB,EAAQhC,GACvB,IAAIQ,EAAS,CAAC,EAMd,OALAR,EAAW6W,GAAY7W,EAAU,GAEjCqQ,GAAWrO,GAAQ,SAASjU,EAAOnM,EAAKogB,GACtCqK,GAAgB7L,EAAQR,EAASjS,EAAOnM,EAAKogB,GAASjU,EACxD,IACOyS,CACT,EAmrGA8I,GAAO4kB,UArpGP,SAAmBlsB,EAAQhC,GACzB,IAAIQ,EAAS,CAAC,EAMd,OALAR,EAAW6W,GAAY7W,EAAU,GAEjCqQ,GAAWrO,GAAQ,SAASjU,EAAOnM,EAAKogB,GACtCqK,GAAgB7L,EAAQ5e,EAAKoe,EAASjS,EAAOnM,EAAKogB,GACpD,IACOxB,CACT,EA8oGA8I,GAAO6kB,QAphCP,SAAiBrvC,GACf,OAAOs2B,GAAYjI,GAAUruB,EAxveX,GAyvepB,EAmhCAwqB,GAAO8kB,gBAh/BP,SAAyB9c,EAAMwD,GAC7B,OAAOK,GAAoB7D,EAAMnE,GAAU2H,EA7xezB,GA8xepB,EA++BAxL,GAAO4Z,QAAUA,GACjB5Z,GAAOnqB,MAAQA,GACfmqB,GAAO+f,UAAYA,GACnB/f,GAAO3rB,OAASA,GAChB2rB,GAAO+hB,SAAWA,GAClB/hB,GAAOgiB,MAAQA,GACfhiB,GAAOme,OAASA,GAChBne,GAAO+kB,OAzzBP,SAAgBhsB,GAEd,OADAA,EAAIoe,GAAUpe,GACPwV,IAAS,SAAS53B,GACvB,OAAOw2B,GAAQx2B,EAAMoiB,EACvB,GACF,EAqzBAiH,GAAOsgB,KAAOA,GACdtgB,GAAOglB,OAnhGP,SAAgBtsB,EAAQ3B,GACtB,OAAO0pB,GAAO/nB,EAAQylB,GAAO5Q,GAAYxW,IAC3C,EAkhGAiJ,GAAOilB,KA73LP,SAAc5uB,GACZ,OAAOgmB,GAAO,EAAGhmB,EACnB,EA43LA2J,GAAOklB,QAr4NP,SAAiBltB,EAAYqV,EAAWC,EAAQ2F,GAC9C,OAAkB,MAAdjb,EACK,IAEJrkB,GAAQ05B,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAGnC15B,GADL25B,EAAS2F,EAAQzgC,EAAY86B,KAE3BA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BF,GAAYpV,EAAYqV,EAAWC,GAC5C,EA03NAtN,GAAOiiB,KAAOA,GACdjiB,GAAOoe,SAAWA,GAClBpe,GAAOkiB,UAAYA,GACnBliB,GAAOmiB,SAAWA,GAClBniB,GAAOue,QAAUA,GACjBve,GAAOwe,aAAeA,GACtBxe,GAAOmc,UAAYA,GACnBnc,GAAO1E,KAAOA,GACd0E,GAAOygB,OAASA,GAChBzgB,GAAOlnB,SAAWA,GAClBknB,GAAOmlB,WA/rBP,SAAoBzsB,GAClB,OAAO,SAASsP,GACd,OAAiB,MAAVtP,EAAiBlmB,EAAYu1B,GAAQrP,EAAQsP,EACtD,CACF,EA4rBAhI,GAAO2a,KAAOA,GACd3a,GAAO4a,QAAUA,GACjB5a,GAAOolB,UApsRP,SAAmB5uB,EAAO/d,EAAQie,GAChC,OAAQF,GAASA,EAAMviB,QAAUwE,GAAUA,EAAOxE,OAC9Cg6B,GAAYzX,EAAO/d,EAAQ80B,GAAY7W,EAAU,IACjDF,CACN,EAisRAwJ,GAAOqlB,YAxqRP,SAAqB7uB,EAAO/d,EAAQ6e,GAClC,OAAQd,GAASA,EAAMviB,QAAUwE,GAAUA,EAAOxE,OAC9Cg6B,GAAYzX,EAAO/d,EAAQjG,EAAW8kB,GACtCd,CACN,EAqqRAwJ,GAAO6a,OAASA,GAChB7a,GAAOqiB,MAAQA,GACfriB,GAAOsiB,WAAaA,GACpBtiB,GAAOye,MAAQA,GACfze,GAAOslB,OAxvNP,SAAgBttB,EAAYjB,GAE1B,OADWpjB,GAAQqkB,GAAchB,GAAcqQ,IACnCrP,EAAYmmB,GAAO5Q,GAAYxW,EAAW,IACxD,EAsvNAiJ,GAAO5U,OAzmRP,SAAgBoL,EAAOO,GACrB,IAAIG,EAAS,GACb,IAAMV,IAASA,EAAMviB,OACnB,OAAOijB,EAET,IAAI3hB,GAAS,EACT44B,EAAU,GACVl6B,EAASuiB,EAAMviB,OAGnB,IADA8iB,EAAYwW,GAAYxW,EAAW,KAC1BxhB,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAQ+R,EAAMjhB,GACdwhB,EAAUtS,EAAOlP,EAAOihB,KAC1BU,EAAOxe,KAAK+L,GACZ0pB,EAAQz1B,KAAKnD,GAEjB,CAEA,OADA24B,GAAW1X,EAAO2X,GACXjX,CACT,EAulRA8I,GAAOulB,KAluLP,SAAclvB,EAAMrZ,GAClB,GAAmB,mBAARqZ,EACT,MAAM,IAAIhhB,GAAU+X,GAGtB,OAAOmhB,GAASlY,EADhBrZ,EAAQA,IAAUxK,EAAYwK,EAAQm6B,GAAUn6B,GAElD,EA6tLAgjB,GAAOnB,QAAUA,GACjBmB,GAAOwlB,WAhtNP,SAAoBxtB,EAAYe,EAAGka,GAOjC,OALEla,GADGka,EAAQC,GAAelb,EAAYe,EAAGka,GAASla,IAAMvmB,GACpD,EAEA2kC,GAAUpe,IAELplB,GAAQqkB,GAAcwK,GAAkBmM,IACvC3W,EAAYe,EAC1B,EAysNAiH,GAAOtb,IAv6FP,SAAagU,EAAQsP,EAAMvjB,GACzB,OAAiB,MAAViU,EAAiBA,EAASsV,GAAQtV,EAAQsP,EAAMvjB,EACzD,EAs6FAub,GAAOylB,QA54FP,SAAiB/sB,EAAQsP,EAAMvjB,EAAOsf,GAEpC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAavxB,EAC3C,MAAVkmB,EAAiBA,EAASsV,GAAQtV,EAAQsP,EAAMvjB,EAAOsf,EAChE,EA04FA/D,GAAO0lB,QA1rNP,SAAiB1tB,GAEf,OADWrkB,GAAQqkB,GAAc4K,GAAeoM,IACpChX,EACd,EAwrNAgI,GAAO5nB,MAhjRP,SAAeoe,EAAOxZ,EAAOC,GAC3B,IAAIhJ,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAKA,GAGDgJ,GAAqB,iBAAPA,GAAmBi2B,GAAe1c,EAAOxZ,EAAOC,IAChED,EAAQ,EACRC,EAAMhJ,IAGN+I,EAAiB,MAATA,EAAgB,EAAIm6B,GAAUn6B,GACtCC,EAAMA,IAAQzK,EAAYyB,EAASkjC,GAAUl6B,IAExCgyB,GAAUzY,EAAOxZ,EAAOC,IAVtB,EAWX,EAmiRA+iB,GAAOoc,OAASA,GAChBpc,GAAO2lB,WAx3QP,SAAoBnvB,GAClB,OAAQA,GAASA,EAAMviB,OACnBi8B,GAAe1Z,GACf,EACN,EAq3QAwJ,GAAO4lB,aAn2QP,SAAsBpvB,EAAOE,GAC3B,OAAQF,GAASA,EAAMviB,OACnBi8B,GAAe1Z,EAAO+W,GAAY7W,EAAU,IAC5C,EACN,EAg2QAsJ,GAAOhoB,MA5hEP,SAAeihB,EAAQ4sB,EAAWC,GAKhC,OAJIA,GAAyB,iBAATA,GAAqB5S,GAAeja,EAAQ4sB,EAAWC,KACzED,EAAYC,EAAQtzC,IAEtBszC,EAAQA,IAAUtzC,EAAYob,EAAmBk4B,IAAU,IAI3D7sB,EAAS4C,GAAS5C,MAEQ,iBAAb4sB,GACO,MAAbA,IAAsB7vB,GAAS6vB,OAEpCA,EAAYzV,GAAayV,KACP7rB,GAAWf,GACpBqY,GAAUzW,GAAc5B,GAAS,EAAG6sB,GAGxC7sB,EAAOjhB,MAAM6tC,EAAWC,GAZtB,EAaX,EA0gEA9lB,GAAO+lB,OAnsLP,SAAgB1vB,EAAMrZ,GACpB,GAAmB,mBAARqZ,EACT,MAAM,IAAIhhB,GAAU+X,GAGtB,OADApQ,EAAiB,MAATA,EAAgB,EAAIohB,GAAU+Y,GAAUn6B,GAAQ,GACjDuxB,IAAS,SAAS53B,GACvB,IAAI6f,EAAQ7f,EAAKqG,GACbi8B,EAAY3H,GAAU36B,EAAM,EAAGqG,GAKnC,OAHIwZ,GACFgB,GAAUyhB,EAAWziB,GAEhBxhB,GAAMqhB,EAAMphB,KAAMgkC,EAC3B,GACF,EAsrLAjZ,GAAOgmB,KAl1QP,SAAcxvB,GACZ,IAAIviB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAOA,EAASg7B,GAAUzY,EAAO,EAAGviB,GAAU,EAChD,EAg1QA+rB,GAAOimB,KArzQP,SAAczvB,EAAOuC,EAAGka,GACtB,OAAMzc,GAASA,EAAMviB,OAIdg7B,GAAUzY,EAAO,GADxBuC,EAAKka,GAASla,IAAMvmB,EAAa,EAAI2kC,GAAUpe,IAChB,EAAI,EAAIA,GAH9B,EAIX,EAgzQAiH,GAAOkmB,UArxQP,SAAmB1vB,EAAOuC,EAAGka,GAC3B,IAAIh/B,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,OAAKA,EAKEg7B,GAAUzY,GADjBuC,EAAI9kB,GADJ8kB,EAAKka,GAASla,IAAMvmB,EAAa,EAAI2kC,GAAUpe,KAEnB,EAAI,EAAIA,EAAG9kB,GAJ9B,EAKX,EA8wQA+rB,GAAOmmB,eAzuQP,SAAwB3vB,EAAOO,GAC7B,OAAQP,GAASA,EAAMviB,OACnBy8B,GAAUla,EAAO+W,GAAYxW,EAAW,IAAI,GAAO,GACnD,EACN,EAsuQAiJ,GAAOomB,UAjsQP,SAAmB5vB,EAAOO,GACxB,OAAQP,GAASA,EAAMviB,OACnBy8B,GAAUla,EAAO+W,GAAYxW,EAAW,IACxC,EACN,EA8rQAiJ,GAAOqmB,IApuPP,SAAa5hC,EAAOk3B,GAElB,OADAA,EAAYl3B,GACLA,CACT,EAkuPAub,GAAOsmB,SA9oLP,SAAkBjwB,EAAM4P,EAAMzrB,GAC5B,IAAIwiC,GAAU,EACV1J,GAAW,EAEf,GAAmB,mBAARjd,EACT,MAAM,IAAIhhB,GAAU+X,GAMtB,OAJImT,GAAS/lB,KACXwiC,EAAU,YAAaxiC,IAAYA,EAAQwiC,QAAUA,EACrD1J,EAAW,aAAc94B,IAAYA,EAAQ84B,SAAWA,GAEnDmJ,GAASpmB,EAAM4P,EAAM,CAC1B,QAAW+W,EACX,QAAW/W,EACX,SAAYqN,GAEhB,EA+nLAtT,GAAOkU,KAAOA,GACdlU,GAAO7nB,QAAUA,GACjB6nB,GAAO0gB,QAAUA,GACjB1gB,GAAO2gB,UAAYA,GACnB3gB,GAAOumB,OArfP,SAAgB9hC,GACd,OAAI9Q,GAAQ8Q,GACH8S,GAAS9S,EAAOyjB,IAElBd,GAAS3iB,GAAS,CAACA,GAASie,GAAU0O,GAAavV,GAASpX,IACrE,EAifAub,GAAOiN,cAAgBA,GACvBjN,GAAO3F,UA10FP,SAAmB3B,EAAQhC,EAAUC,GACnC,IAAIoL,EAAQpuB,GAAQ+kB,GAChB8tB,EAAYzkB,GAAShE,GAASrF,IAAWtC,GAAasC,GAG1D,GADAhC,EAAW6W,GAAY7W,EAAU,GACd,MAAfC,EAAqB,CACvB,IAAIqO,EAAOtM,GAAUA,EAAOniB,YAE1BogB,EADE6vB,EACYzkB,EAAQ,IAAIiD,EAAO,GAE1BzE,GAAS7H,IACFoP,GAAW9C,GAAQ3E,GAAW3D,GAAahE,IAG3C,CAAC,CAEnB,CAIA,OAHC8tB,EAAY5vB,GAAYmQ,IAAYrO,GAAQ,SAASjU,EAAOlP,EAAOmjB,GAClE,OAAOhC,EAASC,EAAalS,EAAOlP,EAAOmjB,EAC7C,IACO/B,CACT,EAszFAqJ,GAAOymB,MArnLP,SAAepwB,GACb,OAAOwe,GAAIxe,EAAM,EACnB,EAonLA2J,GAAO8a,MAAQA,GACf9a,GAAO+a,QAAUA,GACjB/a,GAAOgb,UAAYA,GACnBhb,GAAO0mB,KAzmQP,SAAclwB,GACZ,OAAQA,GAASA,EAAMviB,OAAUo8B,GAAS7Z,GAAS,EACrD,EAwmQAwJ,GAAO2mB,OA/kQP,SAAgBnwB,EAAOE,GACrB,OAAQF,GAASA,EAAMviB,OAAUo8B,GAAS7Z,EAAO+W,GAAY7W,EAAU,IAAM,EAC/E,EA8kQAsJ,GAAO4mB,SAxjQP,SAAkBpwB,EAAOc,GAEvB,OADAA,EAAkC,mBAAdA,EAA2BA,EAAa9kB,EACpDgkB,GAASA,EAAMviB,OAAUo8B,GAAS7Z,EAAOhkB,EAAW8kB,GAAc,EAC5E,EAsjQA0I,GAAO6mB,MAhyFP,SAAenuB,EAAQsP,GACrB,OAAiB,MAAVtP,GAAwB2V,GAAU3V,EAAQsP,EACnD,EA+xFAhI,GAAOib,MAAQA,GACfjb,GAAOmb,UAAYA,GACnBnb,GAAOnb,OApwFP,SAAgB6T,EAAQsP,EAAMyI,GAC5B,OAAiB,MAAV/X,EAAiBA,EAAS8X,GAAW9X,EAAQsP,EAAMmJ,GAAaV,GACzE,EAmwFAzQ,GAAO8mB,WAzuFP,SAAoBpuB,EAAQsP,EAAMyI,EAAS1M,GAEzC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAavxB,EAC3C,MAAVkmB,EAAiBA,EAAS8X,GAAW9X,EAAQsP,EAAMmJ,GAAaV,GAAU1M,EACnF,EAuuFA/D,GAAOvnB,OAASA,GAChBunB,GAAO+mB,SAhrFP,SAAkBruB,GAChB,OAAiB,MAAVA,EAAiB,GAAKU,GAAWV,EAAQiM,GAAOjM,GACzD,EA+qFAsH,GAAOob,QAAUA,GACjBpb,GAAOwT,MAAQA,GACfxT,GAAOgnB,KA3mLP,SAAcviC,EAAO0vB,GACnB,OAAOoK,GAAQpN,GAAagD,GAAU1vB,EACxC,EA0mLAub,GAAOqb,IAAMA,GACbrb,GAAOsb,MAAQA,GACftb,GAAOub,QAAUA,GACjBvb,GAAOwb,IAAMA,GACbxb,GAAOinB,UAj3PP,SAAmBvoC,EAAOjG,GACxB,OAAOs4B,GAAcryB,GAAS,GAAIjG,GAAU,GAAIuqB,GAClD,EAg3PAhD,GAAOknB,cA/1PP,SAAuBxoC,EAAOjG,GAC5B,OAAOs4B,GAAcryB,GAAS,GAAIjG,GAAU,GAAIu1B,GAClD,EA81PAhO,GAAOyb,QAAUA,GAGjBzb,GAAOqB,QAAUqf,GACjB1gB,GAAOmnB,UAAYxG,GACnB3gB,GAAOtqB,OAAS8pC,GAChBxf,GAAOonB,WAAa3H,GAGpBuC,GAAMhiB,GAAQA,IAKdA,GAAO9X,IAAMA,GACb8X,GAAO0hB,QAAUA,GACjB1hB,GAAO4gB,UAAYA,GACnB5gB,GAAO8gB,WAAaA,GACpB9gB,GAAOvC,KAAOA,GACduC,GAAOqnB,MAprFP,SAAe3jB,EAAQC,EAAOC,GAa5B,OAZIA,IAAUpxB,IACZoxB,EAAQD,EACRA,EAAQnxB,GAENoxB,IAAUpxB,IAEZoxB,GADAA,EAAQ+S,GAAS/S,KACCA,EAAQA,EAAQ,GAEhCD,IAAUnxB,IAEZmxB,GADAA,EAAQgT,GAAShT,KACCA,EAAQA,EAAQ,GAE7BhB,GAAUgU,GAASjT,GAASC,EAAOC,EAC5C,EAuqFA5D,GAAOga,MA7jLP,SAAev1B,GACb,OAAOof,GAAUpf,EArzVI,EAszVvB,EA4jLAub,GAAOsnB,UApgLP,SAAmB7iC,GACjB,OAAOof,GAAUpf,EAAO87B,EAC1B,EAmgLAvgB,GAAOunB,cAr+KP,SAAuB9iC,EAAOsf,GAE5B,OAAOF,GAAUpf,EAAO87B,EADxBxc,EAAkC,mBAAdA,EAA2BA,EAAavxB,EAE9D,EAm+KAwtB,GAAOwnB,UA7hLP,SAAmB/iC,EAAOsf,GAExB,OAAOF,GAAUpf,EAz1VI,EAw1VrBsf,EAAkC,mBAAdA,EAA2BA,EAAavxB,EAE9D,EA2hLAwtB,GAAOynB,WA18KP,SAAoB/uB,EAAQljB,GAC1B,OAAiB,MAAVA,GAAkBuwB,GAAerN,EAAQljB,EAAQM,GAAKN,GAC/D,EAy8KAwqB,GAAOyT,OAASA,GAChBzT,GAAO0nB,UA1xCP,SAAmBjjC,EAAOuxB,GACxB,OAAiB,MAATvxB,GAAiBA,GAAUA,EAASuxB,EAAevxB,CAC7D,EAyxCAub,GAAOyiB,OAASA,GAChBziB,GAAO2nB,SAz9EP,SAAkB1uB,EAAQ7jB,EAAQwyC,GAChC3uB,EAAS4C,GAAS5C,GAClB7jB,EAASg7B,GAAah7B,GAEtB,IAAInB,EAASglB,EAAOhlB,OAKhBgJ,EAJJ2qC,EAAWA,IAAap1C,EACpByB,EACA0uB,GAAUwU,GAAUyQ,GAAW,EAAG3zC,GAItC,OADA2zC,GAAYxyC,EAAOnB,SACA,GAAKglB,EAAO7gB,MAAMwvC,EAAU3qC,IAAQ7H,CACzD,EA88EA4qB,GAAO8C,GAAKA,GACZ9C,GAAO6nB,OAj7EP,SAAgB5uB,GAEd,OADAA,EAAS4C,GAAS5C,KACAjJ,EAAmBnW,KAAKof,GACtCA,EAAOrkB,QAAQib,EAAiBgK,IAChCZ,CACN,EA66EA+G,GAAO8nB,aA55EP,SAAsB7uB,GAEpB,OADAA,EAAS4C,GAAS5C,KACAzI,GAAgB3W,KAAKof,GACnCA,EAAOrkB,QAAQ2b,GAAc,QAC7B0I,CACN,EAw5EA+G,GAAO+nB,MA57OP,SAAe/vB,EAAYjB,EAAWkc,GACpC,IAAI5c,EAAO1iB,GAAQqkB,GAAclB,GAAaoQ,GAI9C,OAHI+L,GAASC,GAAelb,EAAYjB,EAAWkc,KACjDlc,EAAYvkB,GAEP6jB,EAAK2B,EAAYuV,GAAYxW,EAAW,GACjD,EAu7OAiJ,GAAOnoB,KAAOA,GACdmoB,GAAOoa,UAAYA,GACnBpa,GAAOgoB,QArxHP,SAAiBtvB,EAAQ3B,GACvB,OAAOgB,GAAYW,EAAQ6U,GAAYxW,EAAW,GAAIgQ,GACxD,EAoxHA/G,GAAO8b,SAAWA,GAClB9b,GAAOqa,cAAgBA,GACvBra,GAAOioB,YAjvHP,SAAqBvvB,EAAQ3B,GAC3B,OAAOgB,GAAYW,EAAQ6U,GAAYxW,EAAW,GAAIkQ,GACxD,EAgvHAjH,GAAOrC,MAAQA,GACfqC,GAAOhsB,QAAUA,GACjBgsB,GAAO+b,aAAeA,GACtB/b,GAAOkoB,MArtHP,SAAexvB,EAAQhC,GACrB,OAAiB,MAAVgC,EACHA,EACAgP,GAAQhP,EAAQ6U,GAAY7W,EAAU,GAAIiO,GAChD,EAktHA3E,GAAOmoB,WAtrHP,SAAoBzvB,EAAQhC,GAC1B,OAAiB,MAAVgC,EACHA,EACAkP,GAAalP,EAAQ6U,GAAY7W,EAAU,GAAIiO,GACrD,EAmrHA3E,GAAOooB,OArpHP,SAAgB1vB,EAAQhC,GACtB,OAAOgC,GAAUqO,GAAWrO,EAAQ6U,GAAY7W,EAAU,GAC5D,EAopHAsJ,GAAOqoB,YAxnHP,SAAqB3vB,EAAQhC,GAC3B,OAAOgC,GAAUuO,GAAgBvO,EAAQ6U,GAAY7W,EAAU,GACjE,EAunHAsJ,GAAOrZ,IAAMA,GACbqZ,GAAO0e,GAAKA,GACZ1e,GAAO2e,IAAMA,GACb3e,GAAOzG,IAzgHP,SAAab,EAAQsP,GACnB,OAAiB,MAAVtP,GAAkB+f,GAAQ/f,EAAQsP,EAAMa,GACjD,EAwgHA7I,GAAOwM,MAAQA,GACfxM,GAAOsa,KAAOA,GACdta,GAAO4L,SAAWA,GAClB5L,GAAOmG,SA5pOP,SAAkBnO,EAAYvT,EAAO0T,EAAW8a,GAC9Cjb,EAAamU,GAAYnU,GAAcA,EAAavf,GAAOuf,GAC3DG,EAAaA,IAAc8a,EAASkE,GAAUhf,GAAa,EAE3D,IAAIlkB,EAAS+jB,EAAW/jB,OAIxB,OAHIkkB,EAAY,IACdA,EAAYiG,GAAUnqB,EAASkkB,EAAW,IAErC4mB,GAAS/mB,GACXG,GAAalkB,GAAU+jB,EAAWlgB,QAAQ2M,EAAO0T,IAAc,IAC7DlkB,GAAUmjB,GAAYY,EAAYvT,EAAO0T,IAAc,CAChE,EAkpOA6H,GAAOloB,QA9lSP,SAAiB0e,EAAO/R,EAAO0T,GAC7B,IAAIlkB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIsB,EAAqB,MAAb4iB,EAAoB,EAAIgf,GAAUhf,GAI9C,OAHI5iB,EAAQ,IACVA,EAAQ6oB,GAAUnqB,EAASsB,EAAO,IAE7B6hB,GAAYZ,EAAO/R,EAAOlP,EACnC,EAqlSAyqB,GAAOsoB,QAlqFP,SAAiB5kB,EAAQ1mB,EAAOC,GAS9B,OARAD,EAAQw5B,GAASx5B,GACbC,IAAQzK,GACVyK,EAAMD,EACNA,EAAQ,GAERC,EAAMu5B,GAASv5B,GArsVnB,SAAqBymB,EAAQ1mB,EAAOC,GAClC,OAAOymB,GAAUpF,GAAUthB,EAAOC,IAAQymB,EAAStF,GAAUphB,EAAOC,EACtE,CAssVSsrC,CADP7kB,EAASiT,GAASjT,GACS1mB,EAAOC,EACpC,EAypFA+iB,GAAOkgB,OAASA,GAChBlgB,GAAOiC,YAAcA,GACrBjC,GAAOrsB,QAAUA,GACjBqsB,GAAOtK,cAAgBA,GACvBsK,GAAOmM,YAAcA,GACrBnM,GAAO+M,kBAAoBA,GAC3B/M,GAAOwoB,UAtwKP,SAAmB/jC,GACjB,OAAiB,IAAVA,IAA4B,IAAVA,GACtBwb,GAAaxb,IAAU6jB,GAAW7jB,IAAUuJ,CACjD,EAowKAgS,GAAOjC,SAAWA,GAClBiC,GAAOpK,OAASA,GAChBoK,GAAOyoB,UA7sKP,SAAmBhkC,GACjB,OAAOwb,GAAaxb,IAA6B,IAAnBA,EAAMwQ,WAAmB+X,GAAcvoB,EACvE,EA4sKAub,GAAO0oB,QAzqKP,SAAiBjkC,GACf,GAAa,MAATA,EACF,OAAO,EAET,GAAI0nB,GAAY1nB,KACX9Q,GAAQ8Q,IAA0B,iBAATA,GAA4C,mBAAhBA,EAAM1D,QAC1Dgd,GAAStZ,IAAU2R,GAAa3R,IAAUwd,GAAYxd,IAC1D,OAAQA,EAAMxQ,OAEhB,IAAImwB,EAAMC,GAAO5f,GACjB,GAAI2f,GAAO/V,GAAU+V,GAAO1V,EAC1B,OAAQjK,EAAM0V,KAEhB,GAAI6R,GAAYvnB,GACd,OAAQsnB,GAAStnB,GAAOxQ,OAE1B,IAAK,IAAIqE,KAAOmM,EACd,GAAItQ,GAAeD,KAAKuQ,EAAOnM,GAC7B,OAAO,EAGX,OAAO,CACT,EAopKA0nB,GAAO2oB,QAtnKP,SAAiBlkC,EAAOmkB,GACtB,OAAOa,GAAYhlB,EAAOmkB,EAC5B,EAqnKA5I,GAAO4oB,YAnlKP,SAAqBnkC,EAAOmkB,EAAO7E,GAEjC,IAAI7M,GADJ6M,EAAkC,mBAAdA,EAA2BA,EAAavxB,GAClCuxB,EAAWtf,EAAOmkB,GAASp2B,EACrD,OAAO0kB,IAAW1kB,EAAYi3B,GAAYhlB,EAAOmkB,EAAOp2B,EAAWuxB,KAAgB7M,CACrF,EAglKA8I,GAAO4e,QAAUA,GACjB5e,GAAO/B,SA1hKP,SAAkBxZ,GAChB,MAAuB,iBAATA,GAAqBuZ,GAAevZ,EACpD,EAyhKAub,GAAO8H,WAAaA,GACpB9H,GAAO6e,UAAYA,GACnB7e,GAAO2Y,SAAWA,GAClB3Y,GAAOlK,MAAQA,GACfkK,GAAO6oB,QA11JP,SAAiBnwB,EAAQljB,GACvB,OAAOkjB,IAAWljB,GAAU61B,GAAY3S,EAAQljB,EAAQ42B,GAAa52B,GACvE,EAy1JAwqB,GAAO8oB,YAvzJP,SAAqBpwB,EAAQljB,EAAQuuB,GAEnC,OADAA,EAAkC,mBAAdA,EAA2BA,EAAavxB,EACrD64B,GAAY3S,EAAQljB,EAAQ42B,GAAa52B,GAASuuB,EAC3D,EAqzJA/D,GAAO+oB,MAvxJP,SAAetkC,GAIb,OAAOq6B,GAASr6B,IAAUA,IAAUA,CACtC,EAmxJAub,GAAOgpB,SAvvJP,SAAkBvkC,GAChB,GAAIs0B,GAAWt0B,GACb,MAAM,IAAI/P,GAtsXM,mEAwsXlB,OAAOg3B,GAAajnB,EACtB,EAmvJAub,GAAOipB,MAxsJP,SAAexkC,GACb,OAAgB,MAATA,CACT,EAusJAub,GAAOkpB,OAjuJP,SAAgBzkC,GACd,OAAiB,OAAVA,CACT,EAguJAub,GAAO8e,SAAWA,GAClB9e,GAAOO,SAAWA,GAClBP,GAAOC,aAAeA,GACtBD,GAAOgN,cAAgBA,GACvBhN,GAAOhK,SAAWA,GAClBgK,GAAOmpB,cArlJP,SAAuB1kC,GACrB,OAAOo6B,GAAUp6B,IAAUA,IAAS,kBAAqBA,GAASiJ,CACpE,EAolJAsS,GAAO9J,MAAQA,GACf8J,GAAO+e,SAAWA,GAClB/e,GAAOoH,SAAWA,GAClBpH,GAAO5J,aAAeA,GACtB4J,GAAOopB,YAn/IP,SAAqB3kC,GACnB,OAAOA,IAAUjS,CACnB,EAk/IAwtB,GAAOqpB,UA/9IP,SAAmB5kC,GACjB,OAAOwb,GAAaxb,IAAU4f,GAAO5f,IAAUoK,CACjD,EA89IAmR,GAAOspB,UA38IP,SAAmB7kC,GACjB,OAAOwb,GAAaxb,IAn6XP,oBAm6XiB6jB,GAAW7jB,EAC3C,EA08IAub,GAAO3a,KAz/RP,SAAcmR,EAAOqvB,GACnB,OAAgB,MAATrvB,EAAgB,GAAK0H,GAAWhqB,KAAKsiB,EAAOqvB,EACrD,EAw/RA7lB,GAAOghB,UAAYA,GACnBhhB,GAAOliB,KAAOA,GACdkiB,GAAOupB,YAh9RP,SAAqB/yB,EAAO/R,EAAO0T,GACjC,IAAIlkB,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIsB,EAAQtB,EAKZ,OAJIkkB,IAAc3lB,IAEhB+C,GADAA,EAAQ4hC,GAAUhf,IACF,EAAIiG,GAAUnqB,EAASsB,EAAO,GAAK+oB,GAAU/oB,EAAOtB,EAAS,IAExEwQ,GAAUA,EArvMrB,SAA2B+R,EAAO/R,EAAO0T,GAEvC,IADA,IAAI5iB,EAAQ4iB,EAAY,EACjB5iB,KACL,GAAIihB,EAAMjhB,KAAWkP,EACnB,OAAOlP,EAGX,OAAOA,CACT,CA8uMQi0C,CAAkBhzB,EAAO/R,EAAOlP,GAChC2iB,GAAc1B,EAAO8B,GAAW/iB,GAAO,EAC7C,EAo8RAyqB,GAAOihB,UAAYA,GACnBjhB,GAAOkhB,WAAaA,GACpBlhB,GAAOgf,GAAKA,GACZhf,GAAOif,IAAMA,GACbjf,GAAO3B,IAhfP,SAAa7H,GACX,OAAQA,GAASA,EAAMviB,OACnBkzB,GAAa3Q,EAAOoV,GAAUjD,IAC9Bn2B,CACN,EA6eAwtB,GAAOypB,MApdP,SAAejzB,EAAOE,GACpB,OAAQF,GAASA,EAAMviB,OACnBkzB,GAAa3Q,EAAO+W,GAAY7W,EAAU,GAAIiS,IAC9Cn2B,CACN,EAidAwtB,GAAO0pB,KAjcP,SAAclzB,GACZ,OAAOgC,GAAShC,EAAOoV,GACzB,EAgcA5L,GAAO2pB,OAvaP,SAAgBnzB,EAAOE,GACrB,OAAO8B,GAAShC,EAAO+W,GAAY7W,EAAU,GAC/C,EAsaAsJ,GAAOzB,IAlZP,SAAa/H,GACX,OAAQA,GAASA,EAAMviB,OACnBkzB,GAAa3Q,EAAOoV,GAAUK,IAC9Bz5B,CACN,EA+YAwtB,GAAO4pB,MAtXP,SAAepzB,EAAOE,GACpB,OAAQF,GAASA,EAAMviB,OACnBkzB,GAAa3Q,EAAO+W,GAAY7W,EAAU,GAAIuV,IAC9Cz5B,CACN,EAmXAwtB,GAAOwY,UAAYA,GACnBxY,GAAOgZ,UAAYA,GACnBhZ,GAAO6pB,WAztBP,WACE,MAAO,CAAC,CACV,EAwtBA7pB,GAAO8pB,WAzsBP,WACE,MAAO,EACT,EAwsBA9pB,GAAO+pB,SAzrBP,WACE,OAAO,CACT,EAwrBA/pB,GAAO4iB,SAAWA,GAClB5iB,GAAOgqB,IA77RP,SAAaxzB,EAAOuC,GAClB,OAAQvC,GAASA,EAAMviB,OAAUk5B,GAAQ3W,EAAO2gB,GAAUpe,IAAMvmB,CAClE,EA47RAwtB,GAAOiqB,WAliCP,WAIE,OAHIp1B,GAAKsG,IAAMlmB,OACb4f,GAAKsG,EAAIiB,IAEJnnB,IACT,EA8hCA+qB,GAAOqX,KAAOA,GACdrX,GAAOhtB,IAAMA,GACbgtB,GAAOkqB,IAj5EP,SAAajxB,EAAQhlB,EAAQmiC,GAC3Bnd,EAAS4C,GAAS5C,GAGlB,IAAIkxB,GAFJl2C,EAASkjC,GAAUljC,IAEMymB,GAAWzB,GAAU,EAC9C,IAAKhlB,GAAUk2C,GAAal2C,EAC1B,OAAOglB,EAET,IAAIsW,GAAOt7B,EAASk2C,GAAa,EACjC,OACEhU,GAAczY,GAAY6R,GAAM6G,GAChCnd,EACAkd,GAAc3Y,GAAW+R,GAAM6G,EAEnC,EAo4EApW,GAAOoqB,OA32EP,SAAgBnxB,EAAQhlB,EAAQmiC,GAC9Bnd,EAAS4C,GAAS5C,GAGlB,IAAIkxB,GAFJl2C,EAASkjC,GAAUljC,IAEMymB,GAAWzB,GAAU,EAC9C,OAAQhlB,GAAUk2C,EAAYl2C,EACzBglB,EAASkd,GAAcliC,EAASk2C,EAAW/T,GAC5Cnd,CACN,EAo2EA+G,GAAOqqB,SA30EP,SAAkBpxB,EAAQhlB,EAAQmiC,GAChCnd,EAAS4C,GAAS5C,GAGlB,IAAIkxB,GAFJl2C,EAASkjC,GAAUljC,IAEMymB,GAAWzB,GAAU,EAC9C,OAAQhlB,GAAUk2C,EAAYl2C,EACzBkiC,GAAcliC,EAASk2C,EAAW/T,GAASnd,EAC5CA,CACN,EAo0EA+G,GAAOvL,SA1yEP,SAAkBwE,EAAQqxB,EAAOrX,GAM/B,OALIA,GAAkB,MAATqX,EACXA,EAAQ,EACCA,IACTA,GAASA,GAEJ7rB,GAAe5C,GAAS5C,GAAQrkB,QAAQ6b,GAAa,IAAK65B,GAAS,EAC5E,EAoyEAtqB,GAAOrB,OA1rFP,SAAgBgF,EAAOC,EAAO2mB,GA2B5B,GA1BIA,GAA+B,kBAAZA,GAAyBrX,GAAevP,EAAOC,EAAO2mB,KAC3E3mB,EAAQ2mB,EAAW/3C,GAEjB+3C,IAAa/3C,IACK,kBAAToxB,GACT2mB,EAAW3mB,EACXA,EAAQpxB,GAEe,kBAATmxB,IACd4mB,EAAW5mB,EACXA,EAAQnxB,IAGRmxB,IAAUnxB,GAAaoxB,IAAUpxB,GACnCmxB,EAAQ,EACRC,EAAQ,IAGRD,EAAQ6S,GAAS7S,GACbC,IAAUpxB,GACZoxB,EAAQD,EACRA,EAAQ,GAERC,EAAQ4S,GAAS5S,IAGjBD,EAAQC,EAAO,CACjB,IAAI4mB,EAAO7mB,EACXA,EAAQC,EACRA,EAAQ4mB,CACV,CACA,GAAID,GAAY5mB,EAAQ,GAAKC,EAAQ,EAAG,CACtC,IAAI+V,EAAOjb,KACX,OAAOJ,GAAUqF,EAASgW,GAAQ/V,EAAQD,EAAQrP,GAAe,QAAUqlB,EAAO,IAAI1lC,OAAS,KAAO2vB,EACxG,CACA,OAAOrB,GAAWoB,EAAOC,EAC3B,EAspFA5D,GAAOyqB,OA5+NP,SAAgBzyB,EAAYtB,EAAUC,GACpC,IAAIN,EAAO1iB,GAAQqkB,GAAcP,GAAcmB,GAC3ClB,EAAYxiB,UAAUjB,OAAS,EAEnC,OAAOoiB,EAAK2B,EAAYuV,GAAY7W,EAAU,GAAIC,EAAae,EAAW0L,GAC5E,EAw+NApD,GAAO0qB,YAh9NP,SAAqB1yB,EAAYtB,EAAUC,GACzC,IAAIN,EAAO1iB,GAAQqkB,GAAcL,GAAmBiB,GAChDlB,EAAYxiB,UAAUjB,OAAS,EAEnC,OAAOoiB,EAAK2B,EAAYuV,GAAY7W,EAAU,GAAIC,EAAae,EAAWsP,GAC5E,EA48NAhH,GAAO2qB,OA/wEP,SAAgB1xB,EAAQF,EAAGka,GAMzB,OAJEla,GADGka,EAAQC,GAAeja,EAAQF,EAAGka,GAASla,IAAMvmB,GAChD,EAEA2kC,GAAUpe,GAETuV,GAAWzS,GAAS5C,GAASF,EACtC,EAywEAiH,GAAOprB,QApvEP,WACE,IAAI+B,EAAOzB,UACP+jB,EAAS4C,GAASllB,EAAK,IAE3B,OAAOA,EAAK1C,OAAS,EAAIglB,EAASA,EAAOrkB,QAAQ+B,EAAK,GAAIA,EAAK,GACjE,EAgvEAqpB,GAAO9I,OAtoGP,SAAgBwB,EAAQsP,EAAMgO,GAG5B,IAAIzgC,GAAS,EACTtB,GAHJ+zB,EAAOC,GAASD,EAAMtP,IAGJzkB,OAOlB,IAJKA,IACHA,EAAS,EACTykB,EAASlmB,KAEF+C,EAAQtB,GAAQ,CACvB,IAAIwQ,EAAkB,MAAViU,EAAiBlmB,EAAYkmB,EAAOwP,GAAMF,EAAKzyB,KACvDkP,IAAUjS,IACZ+C,EAAQtB,EACRwQ,EAAQuxB,GAEVtd,EAASoP,GAAWrjB,GAASA,EAAMvQ,KAAKwkB,GAAUjU,CACpD,CACA,OAAOiU,CACT,EAmnGAsH,GAAOntB,MAAQA,GACfmtB,GAAO5E,aAAeA,EACtB4E,GAAO4qB,OA15NP,SAAgB5yB,GAEd,OADWrkB,GAAQqkB,GAAcsK,GAAcoM,IACnC1W,EACd,EAw5NAgI,GAAO7F,KA/0NP,SAAcnC,GACZ,GAAkB,MAAdA,EACF,OAAO,EAET,GAAImU,GAAYnU,GACd,OAAO+mB,GAAS/mB,GAAc0C,GAAW1C,GAAcA,EAAW/jB,OAEpE,IAAImwB,EAAMC,GAAOrM,GACjB,OAAIoM,GAAO/V,GAAU+V,GAAO1V,EACnBsJ,EAAWmC,KAEb4R,GAAS/T,GAAY/jB,MAC9B,EAo0NA+rB,GAAOmhB,UAAYA,GACnBnhB,GAAO6qB,KA/xNP,SAAc7yB,EAAYjB,EAAWkc,GACnC,IAAI5c,EAAO1iB,GAAQqkB,GAAcJ,GAAYsX,GAI7C,OAHI+D,GAASC,GAAelb,EAAYjB,EAAWkc,KACjDlc,EAAYvkB,GAEP6jB,EAAK2B,EAAYuV,GAAYxW,EAAW,GACjD,EA0xNAiJ,GAAO8qB,YAhsRP,SAAqBt0B,EAAO/R,GAC1B,OAAO0qB,GAAgB3Y,EAAO/R,EAChC,EA+rRAub,GAAO+qB,cApqRP,SAAuBv0B,EAAO/R,EAAOiS,GACnC,OAAO8Y,GAAkBhZ,EAAO/R,EAAO8oB,GAAY7W,EAAU,GAC/D,EAmqRAsJ,GAAOgrB,cAjpRP,SAAuBx0B,EAAO/R,GAC5B,IAAIxQ,EAAkB,MAATuiB,EAAgB,EAAIA,EAAMviB,OACvC,GAAIA,EAAQ,CACV,IAAIsB,EAAQ45B,GAAgB3Y,EAAO/R,GACnC,GAAIlP,EAAQtB,GAAU6uB,GAAGtM,EAAMjhB,GAAQkP,GACrC,OAAOlP,CAEX,CACA,OAAQ,CACV,EAyoRAyqB,GAAOirB,gBArnRP,SAAyBz0B,EAAO/R,GAC9B,OAAO0qB,GAAgB3Y,EAAO/R,GAAO,EACvC,EAonRAub,GAAOkrB,kBAzlRP,SAA2B10B,EAAO/R,EAAOiS,GACvC,OAAO8Y,GAAkBhZ,EAAO/R,EAAO8oB,GAAY7W,EAAU,IAAI,EACnE,EAwlRAsJ,GAAOmrB,kBAtkRP,SAA2B30B,EAAO/R,GAEhC,GADsB,MAAT+R,GAAoBA,EAAMviB,OAC3B,CACV,IAAIsB,EAAQ45B,GAAgB3Y,EAAO/R,GAAO,GAAQ,EAClD,GAAIqe,GAAGtM,EAAMjhB,GAAQkP,GACnB,OAAOlP,CAEX,CACA,OAAQ,CACV,EA8jRAyqB,GAAOohB,UAAYA,GACnBphB,GAAOorB,WA3oEP,SAAoBnyB,EAAQ7jB,EAAQwyC,GAOlC,OANA3uB,EAAS4C,GAAS5C,GAClB2uB,EAAuB,MAAZA,EACP,EACAjlB,GAAUwU,GAAUyQ,GAAW,EAAG3uB,EAAOhlB,QAE7CmB,EAASg7B,GAAah7B,GACf6jB,EAAO7gB,MAAMwvC,EAAUA,EAAWxyC,EAAOnB,SAAWmB,CAC7D,EAooEA4qB,GAAO+iB,SAAWA,GAClB/iB,GAAOqrB,IAzUP,SAAa70B,GACX,OAAQA,GAASA,EAAMviB,OACnBwkB,GAAQjC,EAAOoV,IACf,CACN,EAsUA5L,GAAOsrB,MA7SP,SAAe90B,EAAOE,GACpB,OAAQF,GAASA,EAAMviB,OACnBwkB,GAAQjC,EAAO+W,GAAY7W,EAAU,IACrC,CACN,EA0SAsJ,GAAOurB,SA7hEP,SAAkBtyB,EAAQze,EAASy4B,GAIjC,IAAIuY,EAAWxrB,GAAOyG,iBAElBwM,GAASC,GAAeja,EAAQze,EAASy4B,KAC3Cz4B,EAAUhI,GAEZymB,EAAS4C,GAAS5C,GAClBze,EAAUilC,GAAa,CAAC,EAAGjlC,EAASgxC,EAAUxT,IAE9C,IAIIyT,EACAC,EALAC,EAAUlM,GAAa,CAAC,EAAGjlC,EAAQmxC,QAASH,EAASG,QAAS3T,IAC9D4T,EAAc91C,GAAK61C,GACnBE,EAAgBzyB,GAAWuyB,EAASC,GAIpCr2C,EAAQ,EACRu2C,EAActxC,EAAQsxC,aAAer6B,GACrCjc,EAAS,WAGTu2C,EAAeh8B,IAChBvV,EAAQqtC,QAAUp2B,IAAWjc,OAAS,IACvCs2C,EAAYt2C,OAAS,KACpBs2C,IAAgB37B,EAAgBc,GAAeQ,IAAWjc,OAAS,KACnEgF,EAAQwxC,UAAYv6B,IAAWjc,OAAS,KACzC,KAMEy2C,EAAY,kBACb93C,GAAeD,KAAKsG,EAAS,cACzBA,EAAQyxC,UAAY,IAAIr3C,QAAQ,MAAO,KACvC,6BAA+Bsf,GAAmB,KACnD,KAEN+E,EAAOrkB,QAAQm3C,GAAc,SAASjxB,EAAOoxB,EAAaC,EAAkBC,EAAiBC,EAAehwC,GAsB1G,OArBA8vC,IAAqBA,EAAmBC,GAGxC52C,GAAUyjB,EAAO7gB,MAAM7C,EAAO8G,GAAQzH,QAAQ8c,GAAmBoI,IAG7DoyB,IACFT,GAAa,EACbj2C,GAAU,YAAc02C,EAAc,UAEpCG,IACFX,GAAe,EACfl2C,GAAU,OAAS62C,EAAgB,eAEjCF,IACF32C,GAAU,iBAAmB22C,EAAmB,+BAElD52C,EAAQ8G,EAASye,EAAM7mB,OAIhB6mB,CACT,IAEAtlB,GAAU,OAIV,IAAI82C,EAAWn4C,GAAeD,KAAKsG,EAAS,aAAeA,EAAQ8xC,SACnE,GAAKA,GAKA,GAAIv7B,GAA2BlX,KAAKyyC,GACvC,MAAM,IAAI53C,GA3idmB,2DAsid7Bc,EAAS,iBAAmBA,EAAS,QASvCA,GAAUk2C,EAAel2C,EAAOZ,QAAQ6a,EAAsB,IAAMja,GACjEZ,QAAQ8a,EAAqB,MAC7B9a,QAAQ+a,EAAuB,OAGlCna,EAAS,aAAe82C,GAAY,OAAS,SAC1CA,EACG,GACA,wBAEJ,qBACCb,EACI,mBACA,KAEJC,EACG,uFAEA,OAEJl2C,EACA,gBAEF,IAAI0hB,EAASwqB,IAAQ,WACnB,OAAO5sB,GAAS82B,EAAaK,EAAY,UAAYz2C,GAClDR,MAAMxC,EAAWq5C,EACtB,IAKA,GADA30B,EAAO1hB,OAASA,EACZopC,GAAQ1nB,GACV,MAAMA,EAER,OAAOA,CACT,EA26DA8I,GAAOusB,MApsBP,SAAexzB,EAAGrC,GAEhB,IADAqC,EAAIoe,GAAUpe,IACN,GAAKA,EAAIrL,EACf,MAAO,GAET,IAAInY,EAAQqY,EACR3Z,EAASqqB,GAAUvF,EAAGnL,GAE1B8I,EAAW6W,GAAY7W,GACvBqC,GAAKnL,EAGL,IADA,IAAIsJ,EAAS4B,GAAU7kB,EAAQyiB,KACtBnhB,EAAQwjB,GACfrC,EAASnhB,GAEX,OAAO2hB,CACT,EAqrBA8I,GAAOwW,SAAWA,GAClBxW,GAAOmX,UAAYA,GACnBnX,GAAOsf,SAAWA,GAClBtf,GAAOwsB,QAx5DP,SAAiB/nC,GACf,OAAOoX,GAASpX,GAAO9D,aACzB,EAu5DAqf,GAAO2W,SAAWA,GAClB3W,GAAOysB,cApuIP,SAAuBhoC,GACrB,OAAOA,EACHke,GAAUwU,GAAU1yB,IAAQ,iBAAmBiJ,GACpC,IAAVjJ,EAAcA,EAAQ,CAC7B,EAiuIAub,GAAOnE,SAAWA,GAClBmE,GAAO0sB,QAn4DP,SAAiBjoC,GACf,OAAOoX,GAASpX,GAAOvL,aACzB,EAk4DA8mB,GAAOjoB,KA12DP,SAAckhB,EAAQmd,EAAOnD,GAE3B,IADAha,EAAS4C,GAAS5C,MACHga,GAASmD,IAAU5jC,GAChC,OAAOwmB,GAASC,GAElB,IAAKA,KAAYmd,EAAQhG,GAAagG,IACpC,OAAOnd,EAET,IAAIQ,EAAaoB,GAAc5B,GAC3BS,EAAamB,GAAcub,GAI/B,OAAO9E,GAAU7X,EAHLD,GAAgBC,EAAYC,GAC9BC,GAAcF,EAAYC,GAAc,GAETrU,KAAK,GAChD,EA61DA2a,GAAO2sB,QAx0DP,SAAiB1zB,EAAQmd,EAAOnD,GAE9B,IADAha,EAAS4C,GAAS5C,MACHga,GAASmD,IAAU5jC,GAChC,OAAOymB,EAAO7gB,MAAM,EAAG8gB,GAAgBD,GAAU,GAEnD,IAAKA,KAAYmd,EAAQhG,GAAagG,IACpC,OAAOnd,EAET,IAAIQ,EAAaoB,GAAc5B,GAG/B,OAAOqY,GAAU7X,EAAY,EAFnBE,GAAcF,EAAYoB,GAAcub,IAAU,GAEvB/wB,KAAK,GAC5C,EA6zDA2a,GAAO4sB,UAxyDP,SAAmB3zB,EAAQmd,EAAOnD,GAEhC,IADAha,EAAS4C,GAAS5C,MACHga,GAASmD,IAAU5jC,GAChC,OAAOymB,EAAOrkB,QAAQ6b,GAAa,IAErC,IAAKwI,KAAYmd,EAAQhG,GAAagG,IACpC,OAAOnd,EAET,IAAIQ,EAAaoB,GAAc5B,GAG/B,OAAOqY,GAAU7X,EAFLD,GAAgBC,EAAYoB,GAAcub,KAElB/wB,KAAK,GAC3C,EA6xDA2a,GAAO6sB,SAtvDP,SAAkB5zB,EAAQze,GACxB,IAAIvG,EAnvdmB,GAovdnB64C,EAnvdqB,MAqvdzB,GAAIvsB,GAAS/lB,GAAU,CACrB,IAAIqrC,EAAY,cAAerrC,EAAUA,EAAQqrC,UAAYA,EAC7D5xC,EAAS,WAAYuG,EAAU28B,GAAU38B,EAAQvG,QAAUA,EAC3D64C,EAAW,aAActyC,EAAU41B,GAAa51B,EAAQsyC,UAAYA,CACtE,CAGA,IAAI3C,GAFJlxB,EAAS4C,GAAS5C,IAEKhlB,OACvB,GAAI+lB,GAAWf,GAAS,CACtB,IAAIQ,EAAaoB,GAAc5B,GAC/BkxB,EAAY1wB,EAAWxlB,MACzB,CACA,GAAIA,GAAUk2C,EACZ,OAAOlxB,EAET,IAAIhc,EAAMhJ,EAASymB,GAAWoyB,GAC9B,GAAI7vC,EAAM,EACR,OAAO6vC,EAET,IAAI51B,EAASuC,EACT6X,GAAU7X,EAAY,EAAGxc,GAAKoI,KAAK,IACnC4T,EAAO7gB,MAAM,EAAG6E,GAEpB,GAAI4oC,IAAcrzC,EAChB,OAAO0kB,EAAS41B,EAKlB,GAHIrzB,IACFxc,GAAQia,EAAOjjB,OAASgJ,GAEtB+Y,GAAS6vB,IACX,GAAI5sB,EAAO7gB,MAAM6E,GAAK8vC,OAAOlH,GAAY,CACvC,IAAI/qB,EACAkyB,EAAY91B,EAMhB,IAJK2uB,EAAUoH,SACbpH,EAAY91B,GAAO81B,EAAUrwC,OAAQqmB,GAAS3K,GAAQ8K,KAAK6pB,IAAc,MAE3EA,EAAUlrB,UAAY,EACdG,EAAQ+qB,EAAU7pB,KAAKgxB,IAC7B,IAAIE,EAASpyB,EAAMvlB,MAErB2hB,EAASA,EAAO9e,MAAM,EAAG80C,IAAW16C,EAAYyK,EAAMiwC,EACxD,OACK,GAAIj0B,EAAOnhB,QAAQs4B,GAAayV,GAAY5oC,IAAQA,EAAK,CAC9D,IAAI1H,EAAQ2hB,EAAOqyB,YAAY1D,GAC3BtwC,GAAS,IACX2hB,EAASA,EAAO9e,MAAM,EAAG7C,GAE7B,CACA,OAAO2hB,EAAS41B,CAClB,EAisDA9sB,GAAOmtB,SA5qDP,SAAkBl0B,GAEhB,OADAA,EAAS4C,GAAS5C,KACAnJ,EAAiBjW,KAAKof,GACpCA,EAAOrkB,QAAQgb,EAAesL,IAC9BjC,CACN,EAwqDA+G,GAAOotB,SAvpBP,SAAkBr0C,GAChB,IAAIoN,IAAO2V,GACX,OAAOD,GAAS9iB,GAAUoN,CAC5B,EAqpBA6Z,GAAOqhB,UAAYA,GACnBrhB,GAAO+gB,WAAaA,GAGpB/gB,GAAOpsB,KAAOI,GACdgsB,GAAOqtB,UAAYtR,GACnB/b,GAAOstB,MAAQhT,GAEf0H,GAAMhiB,IACAxqB,GAAS,CAAC,EACduxB,GAAW/G,IAAQ,SAAS3J,EAAMgd,GAC3Bl/B,GAAeD,KAAK8rB,GAAO3pB,UAAWg9B,KACzC79B,GAAO69B,GAAchd,EAEzB,IACO7gB,IACH,CAAE,OAAS,IAWjBwqB,GAAOzV,QA/ihBK,UAkjhBZqM,GAAU,CAAC,OAAQ,UAAW,QAAS,aAAc,UAAW,iBAAiB,SAASyc,GACxFrT,GAAOqT,GAAY9Y,YAAcyF,EACnC,IAGApJ,GAAU,CAAC,OAAQ,SAAS,SAASyc,EAAY99B,GAC/C2qB,GAAY7pB,UAAUg9B,GAAc,SAASta,GAC3CA,EAAIA,IAAMvmB,EAAY,EAAI4rB,GAAU+Y,GAAUpe,GAAI,GAElD,IAAI7B,EAAUjiB,KAAK+rB,eAAiBzrB,EAChC,IAAI2qB,GAAYjrB,MAChBA,KAAK+kC,QAUT,OARI9iB,EAAO8J,aACT9J,EAAOgK,cAAgB5C,GAAUvF,EAAG7B,EAAOgK,eAE3ChK,EAAOiK,UAAUzoB,KAAK,CACpB,KAAQ4lB,GAAUvF,EAAGnL,GACrB,KAAQylB,GAAcnc,EAAO6J,QAAU,EAAI,QAAU,MAGlD7J,CACT,EAEAgJ,GAAY7pB,UAAUg9B,EAAa,SAAW,SAASta,GACrD,OAAO9jB,KAAK4pB,UAAUwU,GAAYta,GAAG8F,SACvC,CACF,IAGAjI,GAAU,CAAC,SAAU,MAAO,cAAc,SAASyc,EAAY99B,GAC7D,IAAI4B,EAAO5B,EAAQ,EACfg4C,EAjihBe,GAiihBJp2C,GA/hhBG,GA+hhByBA,EAE3C+oB,GAAY7pB,UAAUg9B,GAAc,SAAS3c,GAC3C,IAAIQ,EAASjiB,KAAK+kC,QAMlB,OALA9iB,EAAO+J,cAAcvoB,KAAK,CACxB,SAAY60B,GAAY7W,EAAU,GAClC,KAAQvf,IAEV+f,EAAO8J,aAAe9J,EAAO8J,cAAgBusB,EACtCr2B,CACT,CACF,IAGAN,GAAU,CAAC,OAAQ,SAAS,SAASyc,EAAY99B,GAC/C,IAAIi4C,EAAW,QAAUj4C,EAAQ,QAAU,IAE3C2qB,GAAY7pB,UAAUg9B,GAAc,WAClC,OAAOp+B,KAAKu4C,GAAU,GAAG/oC,QAAQ,EACnC,CACF,IAGAmS,GAAU,CAAC,UAAW,SAAS,SAASyc,EAAY99B,GAClD,IAAIk4C,EAAW,QAAUl4C,EAAQ,GAAK,SAEtC2qB,GAAY7pB,UAAUg9B,GAAc,WAClC,OAAOp+B,KAAK+rB,aAAe,IAAId,GAAYjrB,MAAQA,KAAKw4C,GAAU,EACpE,CACF,IAEAvtB,GAAY7pB,UAAUgtC,QAAU,WAC9B,OAAOpuC,KAAKoN,OAAOupB,GACrB,EAEA1L,GAAY7pB,UAAUwB,KAAO,SAASkf,GACpC,OAAO9hB,KAAKoN,OAAO0U,GAAWujB,MAChC,EAEApa,GAAY7pB,UAAUylC,SAAW,SAAS/kB,GACxC,OAAO9hB,KAAK4pB,UAAUhnB,KAAKkf,EAC7B,EAEAmJ,GAAY7pB,UAAU4lC,UAAY1N,IAAS,SAASvG,EAAMrxB,GACxD,MAAmB,mBAARqxB,EACF,IAAI9H,GAAYjrB,MAElBA,KAAKilB,KAAI,SAASzV,GACvB,OAAO8kB,GAAW9kB,EAAOujB,EAAMrxB,EACjC,GACF,IAEAupB,GAAY7pB,UAAUivC,OAAS,SAASvuB,GACtC,OAAO9hB,KAAKoN,OAAO87B,GAAO5Q,GAAYxW,IACxC,EAEAmJ,GAAY7pB,UAAU+B,MAAQ,SAAS4E,EAAOC,GAC5CD,EAAQm6B,GAAUn6B,GAElB,IAAIka,EAASjiB,KACb,OAAIiiB,EAAO8J,eAAiBhkB,EAAQ,GAAKC,EAAM,GACtC,IAAIijB,GAAYhJ,IAErBla,EAAQ,EACVka,EAASA,EAAOgvB,WAAWlpC,GAClBA,IACTka,EAASA,EAAOysB,KAAK3mC,IAEnBC,IAAQzK,IAEV0kB,GADAja,EAAMk6B,GAAUl6B,IACD,EAAIia,EAAO0sB,WAAW3mC,GAAOia,EAAO+uB,KAAKhpC,EAAMD,IAEzDka,EACT,EAEAgJ,GAAY7pB,UAAU8vC,eAAiB,SAASpvB,GAC9C,OAAO9hB,KAAK4pB,UAAUunB,UAAUrvB,GAAW8H,SAC7C,EAEAqB,GAAY7pB,UAAU8B,QAAU,WAC9B,OAAOlD,KAAKgxC,KAAKr4B,EACnB,EAGAmZ,GAAW7G,GAAY7pB,WAAW,SAASggB,EAAMgd,GAC/C,IAAIqa,EAAgB,qCAAqC7zC,KAAKw5B,GAC1Dsa,EAAU,kBAAkB9zC,KAAKw5B,GACjCua,EAAa5tB,GAAO2tB,EAAW,QAAwB,QAAdta,EAAuB,QAAU,IAAOA,GACjFwa,EAAeF,GAAW,QAAQ9zC,KAAKw5B,GAEtCua,IAGL5tB,GAAO3pB,UAAUg9B,GAAc,WAC7B,IAAI5uB,EAAQxP,KAAKyrB,YACb/pB,EAAOg3C,EAAU,CAAC,GAAKz4C,UACvB44C,EAASrpC,aAAiByb,GAC1BxJ,EAAW/f,EAAK,GAChBo3C,EAAUD,GAAUn6C,GAAQ8Q,GAE5Bk3B,EAAc,SAASl3B,GACzB,IAAIyS,EAAS02B,EAAW54C,MAAMgrB,GAAQxI,GAAU,CAAC/S,GAAQ9N,IACzD,OAAQg3C,GAAWltB,EAAYvJ,EAAO,GAAKA,CAC7C,EAEI62B,GAAWL,GAAoC,mBAAZh3B,GAA6C,GAAnBA,EAASziB,SAExE65C,EAASC,GAAU,GAErB,IAAIttB,EAAWxrB,KAAK2rB,UAChBotB,IAAa/4C,KAAK0rB,YAAY1sB,OAC9Bg6C,EAAcJ,IAAiBptB,EAC/BytB,EAAWJ,IAAWE,EAE1B,IAAKH,GAAgBE,EAAS,CAC5BtpC,EAAQypC,EAAWzpC,EAAQ,IAAIyb,GAAYjrB,MAC3C,IAAIiiB,EAASb,EAAKrhB,MAAMyP,EAAO9N,GAE/B,OADAugB,EAAOyJ,YAAYjoB,KAAK,CAAE,KAAQw7B,GAAM,KAAQ,CAACyH,GAAc,QAAWnpC,IACnE,IAAI2tB,GAAcjJ,EAAQuJ,EACnC,CACA,OAAIwtB,GAAeC,EACV73B,EAAKrhB,MAAMC,KAAM0B,IAE1BugB,EAASjiB,KAAKi/B,KAAKyH,GACZsS,EAAeN,EAAUz2B,EAAOzS,QAAQ,GAAKyS,EAAOzS,QAAWyS,EACxE,EACF,IAGAN,GAAU,CAAC,MAAO,OAAQ,QAAS,OAAQ,SAAU,YAAY,SAASyc,GACxE,IAAIhd,EAAOmF,GAAW6X,GAClB8a,EAAY,0BAA0Bt0C,KAAKw5B,GAAc,MAAQ,OACjEwa,EAAe,kBAAkBh0C,KAAKw5B,GAE1CrT,GAAO3pB,UAAUg9B,GAAc,WAC7B,IAAI18B,EAAOzB,UACX,GAAI24C,IAAiB54C,KAAK2rB,UAAW,CACnC,IAAInc,EAAQxP,KAAKwP,QACjB,OAAO4R,EAAKrhB,MAAMrB,GAAQ8Q,GAASA,EAAQ,GAAI9N,EACjD,CACA,OAAO1B,KAAKk5C,IAAW,SAAS1pC,GAC9B,OAAO4R,EAAKrhB,MAAMrB,GAAQ8Q,GAASA,EAAQ,GAAI9N,EACjD,GACF,CACF,IAGAowB,GAAW7G,GAAY7pB,WAAW,SAASggB,EAAMgd,GAC/C,IAAIua,EAAa5tB,GAAOqT,GACxB,GAAIua,EAAY,CACd,IAAIt1C,EAAMs1C,EAAWt5C,KAAO,GACvBH,GAAeD,KAAKmrB,GAAW/mB,KAClC+mB,GAAU/mB,GAAO,IAEnB+mB,GAAU/mB,GAAKI,KAAK,CAAE,KAAQ26B,EAAY,KAAQua,GACpD,CACF,IAEAvuB,GAAUoV,GAAajiC,EAlthBA,GAkthB+B8B,MAAQ,CAAC,CAC7D,KAAQ,UACR,KAAQ9B,IAIV0tB,GAAY7pB,UAAU2jC,MAh9dtB,WACE,IAAI9iB,EAAS,IAAIgJ,GAAYjrB,KAAKyrB,aAOlC,OANAxJ,EAAOyJ,YAAc+B,GAAUztB,KAAK0rB,aACpCzJ,EAAO6J,QAAU9rB,KAAK8rB,QACtB7J,EAAO8J,aAAe/rB,KAAK+rB,aAC3B9J,EAAO+J,cAAgByB,GAAUztB,KAAKgsB,eACtC/J,EAAOgK,cAAgBjsB,KAAKisB,cAC5BhK,EAAOiK,UAAYuB,GAAUztB,KAAKksB,WAC3BjK,CACT,EAw8dAgJ,GAAY7pB,UAAUwoB,QA97dtB,WACE,GAAI5pB,KAAK+rB,aAAc,CACrB,IAAI9J,EAAS,IAAIgJ,GAAYjrB,MAC7BiiB,EAAO6J,SAAW,EAClB7J,EAAO8J,cAAe,CACxB,MACE9J,EAASjiB,KAAK+kC,SACPjZ,UAAY,EAErB,OAAO7J,CACT,EAq7dAgJ,GAAY7pB,UAAUoO,MA36dtB,WACE,IAAI+R,EAAQvhB,KAAKyrB,YAAYjc,QACzB2pC,EAAMn5C,KAAK8rB,QACXgB,EAAQpuB,GAAQ6iB,GAChB63B,EAAUD,EAAM,EAChB5Y,EAAYzT,EAAQvL,EAAMviB,OAAS,EACnCq6C,EA8pIN,SAAiBtxC,EAAOC,EAAKohC,GAI3B,IAHA,IAAI9oC,GAAS,EACTtB,EAASoqC,EAAWpqC,SAEfsB,EAAQtB,GAAQ,CACvB,IAAIuX,EAAO6yB,EAAW9oC,GAClB4kB,EAAO3O,EAAK2O,KAEhB,OAAQ3O,EAAKrU,MACX,IAAK,OAAa6F,GAASmd,EAAM,MACjC,IAAK,YAAald,GAAOkd,EAAM,MAC/B,IAAK,OAAald,EAAMqhB,GAAUrhB,EAAKD,EAAQmd,GAAO,MACtD,IAAK,YAAand,EAAQohB,GAAUphB,EAAOC,EAAMkd,GAErD,CACA,MAAO,CAAE,MAASnd,EAAO,IAAOC,EAClC,CA9qIasxC,CAAQ,EAAG/Y,EAAWvgC,KAAKksB,WAClCnkB,EAAQsxC,EAAKtxC,MACbC,EAAMqxC,EAAKrxC,IACXhJ,EAASgJ,EAAMD,EACfzH,EAAQ84C,EAAUpxC,EAAOD,EAAQ,EACjCqwB,EAAYp4B,KAAKgsB,cACjButB,EAAanhB,EAAUp5B,OACvBgjB,EAAW,EACXw3B,EAAYnwB,GAAUrqB,EAAQgB,KAAKisB,eAEvC,IAAKa,IAAWssB,GAAW7Y,GAAavhC,GAAUw6C,GAAax6C,EAC7D,OAAO28B,GAAiBpa,EAAOvhB,KAAK0rB,aAEtC,IAAIzJ,EAAS,GAEboP,EACA,KAAOryB,KAAYgjB,EAAWw3B,GAAW,CAMvC,IAHA,IAAIC,GAAa,EACbjqC,EAAQ+R,EAHZjhB,GAAS64C,KAKAM,EAAYF,GAAY,CAC/B,IAAIhjC,EAAO6hB,EAAUqhB,GACjBh4B,EAAWlL,EAAKkL,SAChBvf,EAAOqU,EAAKrU,KACZovB,EAAW7P,EAASjS,GAExB,GA7zDY,GA6zDRtN,EACFsN,EAAQ8hB,OACH,IAAKA,EAAU,CACpB,GAj0Da,GAi0DTpvB,EACF,SAASmvB,EAET,MAAMA,CAEV,CACF,CACApP,EAAOD,KAAcxS,CACvB,CACA,OAAOyS,CACT,EA+3dA8I,GAAO3pB,UAAUspC,GAAK/D,GACtB5b,GAAO3pB,UAAUqlC,MA1iQjB,WACE,OAAOA,GAAMzmC,KACf,EAyiQA+qB,GAAO3pB,UAAUs4C,OA7gQjB,WACE,OAAO,IAAIxuB,GAAclrB,KAAKwP,QAASxP,KAAK2rB,UAC9C,EA4gQAZ,GAAO3pB,UAAU6oC,KAp/PjB,WACMjqC,KAAK6rB,aAAetuB,IACtByC,KAAK6rB,WAAa3oB,GAAQlD,KAAKwP,UAEjC,IAAI06B,EAAOlqC,KAAK4rB,WAAa5rB,KAAK6rB,WAAW7sB,OAG7C,MAAO,CAAE,KAAQkrC,EAAM,MAFXA,EAAO3sC,EAAYyC,KAAK6rB,WAAW7rB,KAAK4rB,aAGtD,EA6+PAb,GAAO3pB,UAAUm+B,MA77PjB,SAAsB/vB,GAIpB,IAHA,IAAIyS,EACAzf,EAASxC,KAENwC,aAAkB+oB,IAAY,CACnC,IAAIwZ,EAAQ5Z,GAAa3oB,GACzBuiC,EAAMnZ,UAAY,EAClBmZ,EAAMlZ,WAAatuB,EACf0kB,EACFkX,EAAS1N,YAAcsZ,EAEvB9iB,EAAS8iB,EAEX,IAAI5L,EAAW4L,EACfviC,EAASA,EAAOipB,WAClB,CAEA,OADA0N,EAAS1N,YAAcjc,EAChByS,CACT,EA46PA8I,GAAO3pB,UAAUwoB,QAt5PjB,WACE,IAAIpa,EAAQxP,KAAKyrB,YACjB,GAAIjc,aAAiByb,GAAa,CAChC,IAAI0uB,EAAUnqC,EAUd,OATIxP,KAAK0rB,YAAY1sB,SACnB26C,EAAU,IAAI1uB,GAAYjrB,QAE5B25C,EAAUA,EAAQ/vB,WACV8B,YAAYjoB,KAAK,CACvB,KAAQw7B,GACR,KAAQ,CAACrV,IACT,QAAWrsB,IAEN,IAAI2tB,GAAcyuB,EAAS35C,KAAK2rB,UACzC,CACA,OAAO3rB,KAAKi/B,KAAKrV,GACnB,EAu4PAmB,GAAO3pB,UAAUw4C,OAAS7uB,GAAO3pB,UAAUypB,QAAUE,GAAO3pB,UAAUoO,MAv3PtE,WACE,OAAOmsB,GAAiB37B,KAAKyrB,YAAazrB,KAAK0rB,YACjD,EAw3PAX,GAAO3pB,UAAUi3C,MAAQttB,GAAO3pB,UAAUikC,KAEtCtd,KACFgD,GAAO3pB,UAAU2mB,IAj+PnB,WACE,OAAO/nB,IACT,GAi+PO+qB,EACR,CAKO5E,GAQNvG,GAAKsG,EAAIA,IAIT,aACE,OAAOA,EACR,mCAaL,EAAEjnB,KAAKe,wBCvzhBP,WACE,IAAI65C,EAAgBC,EAAQC,EAAUC,EAAgBC,EAAcC,EAExC,oBAAhBC,aAA+C,OAAhBA,aAAyBA,YAAYp8C,IAC9EmiB,EAAOH,QAAU,WACf,OAAOo6B,YAAYp8C,KACrB,EAC6B,oBAAZgW,SAAuC,OAAZA,SAAqBA,QAAQ+lC,QACzE55B,EAAOH,QAAU,WACf,OAAQ85B,IAAmBI,GAAgB,GAC7C,EACAH,EAAS/lC,QAAQ+lC,OAMjBE,GALAH,EAAiB,WACf,IAAIO,EAEJ,OAAe,KADfA,EAAKN,KACK,GAAWM,EAAG,EAC1B,KAEAF,EAA4B,IAAnBnmC,QAAQsmC,SACjBJ,EAAeD,EAAiBE,GACvBl8C,KAAKD,KACdmiB,EAAOH,QAAU,WACf,OAAO/hB,KAAKD,MAAQg8C,CACtB,EACAA,EAAW/7C,KAAKD,QAEhBmiB,EAAOH,QAAU,WACf,OAAO,IAAI/hB,MAAOs8C,UAAYP,CAChC,EACAA,GAAW,IAAI/7C,MAAOs8C,UAGzB,GAAEr7C,KAAKe,qBC1BR,IAPA,IAAIjC,EAAM,EAAQ,KACd6hB,EAAyB,oBAAXxiB,OAAyB,EAAAsiB,EAAStiB,OAChDm9C,EAAU,CAAC,MAAO,UAClBC,EAAS,iBACTC,EAAM76B,EAAK,UAAY46B,GACvBE,EAAM96B,EAAK,SAAW46B,IAAW56B,EAAK,gBAAkB46B,GAEpD17C,EAAI,GAAI27C,GAAO37C,EAAIy7C,EAAQv7C,OAAQF,IACzC27C,EAAM76B,EAAK26B,EAAQz7C,GAAK,UAAY07C,GACpCE,EAAM96B,EAAK26B,EAAQz7C,GAAK,SAAW07C,IAC5B56B,EAAK26B,EAAQz7C,GAAK,gBAAkB07C,GAI7C,IAAIC,IAAQC,EAAK,CACf,IAAI7xC,EAAO,EACPqI,EAAK,EACLypC,EAAQ,GACRC,EAAgB,IAAO,GAE3BH,EAAM,SAASp1C,GACb,GAAoB,IAAjBs1C,EAAM37C,OAAc,CACrB,IAAI67C,EAAO98C,IACPksC,EAAOpsC,KAAKurB,IAAI,EAAGwxB,GAAiBC,EAAOhyC,IAC/CA,EAAOohC,EAAO4Q,EACdx8C,YAAW,WACT,IAAIy8C,EAAKH,EAAMx3C,MAAM,GAIrBw3C,EAAM37C,OAAS,EACf,IAAI,IAAIF,EAAI,EAAGA,EAAIg8C,EAAG97C,OAAQF,IAC5B,IAAIg8C,EAAGh8C,GAAGi8C,UACR,IACED,EAAGh8C,GAAGuG,SAASwD,EACjB,CAAE,MAAMrJ,GACNnB,YAAW,WAAa,MAAMmB,CAAE,GAAG,EACrC,CAGN,GAAG3B,KAAKD,MAAMqsC,GAChB,CAMA,OALA0Q,EAAMl3C,KAAK,CACTu3C,SAAU9pC,EACV7L,SAAUA,EACV01C,WAAW,IAEN7pC,CACT,EAEAwpC,EAAM,SAASM,GACb,IAAI,IAAIl8C,EAAI,EAAGA,EAAI67C,EAAM37C,OAAQF,IAC5B67C,EAAM77C,GAAGk8C,SAAWA,IACrBL,EAAM77C,GAAGi8C,WAAY,EAG3B,CACF,CAEA76B,EAAOH,QAAU,SAAS7hB,GAIxB,OAAOu8C,EAAIx7C,KAAK2gB,EAAM1hB,EACxB,EACAgiB,EAAOH,QAAQ4oB,OAAS,WACtB+R,EAAI36C,MAAM6f,EAAM3f,UAClB,EACAigB,EAAOH,QAAQk7B,SAAW,SAASx3B,GAC5BA,IACHA,EAAS7D,GAEX6D,EAAOy3B,sBAAwBT,EAC/Bh3B,EAAO03B,qBAAuBT,CAChC,gBCiDA,WACE,IAAIU,EAAU,CAAC,EACXC,EAAOD,EAAQC,KAAO,CAAC,EACvB1uC,EAASlO,MAAM2C,UAAUuL,OACzBxJ,EAAQ1E,MAAM2C,UAAU+B,MAG5Bk4C,EAAKhU,KAAO,SAAcjmB,EAAMhjB,GAC9B,IAAIsD,EAAOyB,EAAMlE,KAAKgB,UAAW,GACjC,OAAO,WACLmhB,EAAKrhB,MAAM3B,EAASuO,EAAO1N,KAAKyC,EAAMyB,EAAMlE,KAAKgB,YACnD,CACF,EAGAo7C,EAAK56C,OAAS,SAAgBN,EAAQI,GACpC,IAAK,IAAI8C,KAAO9C,EACVA,EAAOrB,eAAemE,KACxBlD,EAAOkD,GAAO9C,EAAO8C,GAG3B,EAOA,IAAIi4C,EAAeF,EAAQE,aAAe,SAAsBC,GAC9Dv7C,KAAKw7C,gBAAkB,CAAC,EACxBx7C,KAAKy7C,eAAiB,GACtBz7C,KAAK07C,UAAY,GACjB17C,KAAK27C,mBAAqB,GAC1B37C,KAAKu7C,OAASA,GAAU,IAAIK,EAC5B57C,KAAKu7C,OAAOM,aAAe77C,IAC7B,EAEAq7C,EAAK56C,OAAO66C,EAAal6C,UAAW,CAElCo6C,gBAAiB,KAEjBM,SAAS,EAETC,iBAAkB,EAElBN,eAAgB,KAEhBC,UAAW,KAEXC,mBAAoB,KAOpBK,UAAW,SAAST,GAClBv7C,KAAKu7C,OAASA,EACdA,EAAOM,aAAe77C,IACxB,EAMAi8C,aAAc,SAASC,EAASC,GAC9B,IAAIC,EAOJ,OALEA,OADc7+C,IAAZ2+C,QAAsC3+C,IAAb4+C,EACZE,EAAaC,8BAG1BD,EAAaE,8BAA8BL,EAASC,GAEjDn8C,KAAKw8C,uBAAuBJ,EACrC,EAKAK,mCAAoC,SAASC,EAAYC,GACvD,IAAIP,EAOJ,OALEA,OADiB7+C,IAAfm/C,QAAsCn/C,IAAVo/C,EACfN,EAAaC,8BAG1BD,EAAaO,uBAAuBF,EAAYC,GAE7C38C,KAAKw8C,uBAAuBJ,EACrC,EAGAI,uBAAwB,SAASJ,GAC/B,IAAIS,EAAS,IAAIC,EAAO98C,MAGxB,OAFAA,KAAK+8C,eAAeF,GACpBA,EAAOG,gBAAgBZ,GAChBS,CACT,EAMAI,UAAW,WACT,OAAOj9C,KAAK87C,OACd,EAKAoB,cAAe,SAAUhsC,GACvB,OAAOlR,KAAKw7C,gBAAgBtqC,EAC9B,EAIAisC,cAAe,WACb,IAAIC,EAAO,GACX,IAAK,IAAIlsC,KAAMlR,KAAKw7C,gBACdx7C,KAAKw7C,gBAAgBt8C,eAAegS,IACtCksC,EAAK35C,KAAKzD,KAAKw7C,gBAAgBtqC,IAGnC,OAAOksC,CACT,EAMAL,eAAgB,SAASF,GACvB78C,KAAKw7C,gBAAgBqB,EAAOQ,SAAWR,CACzC,EAMAS,iBAAkB,SAAST,GACzBU,EAAYv9C,KAAKy7C,eAAgBoB,UAC1B78C,KAAKw7C,gBAAgBqB,EAAOQ,QACrC,EAEAG,QAAS,SAAS/oC,EAAM1N,GACtB,KAAM/G,KAAK27C,mBAAmB38C,OAAS,GAAGgB,KAAK27C,mBAAmBlqB,MAClE,IAAK,IAAI3yB,EAAI,EAAG2+C,EAAMz9C,KAAKy7C,eAAez8C,OAAQF,EAAI2+C,EAAK3+C,IAAK,CAC9D,IAAI+9C,EAAS78C,KAAKy7C,eAAe38C,GAC7B+9C,EAAOa,sBACTb,EAAOW,QAAQ/oC,EAAO,IAAQ1N,EAAY,KAE1C/G,KAAK27C,mBAAmBl4C,KAAKzD,KAAKy7C,eAAe54C,QAAQg6C,GAE7D,CACA,KAAM78C,KAAK27C,mBAAmB38C,OAAS,GAAG,CACxC,IAAI2+C,EAAM39C,KAAK27C,mBAAmBlqB,MAClCksB,GAAO,GAAK39C,KAAKy7C,eAAe3vC,OAAO6xC,EAAK,EAC9C,CACF,EAeAC,KAAM,SAASC,GACb,IAAIC,GAC0B,IAA1B99C,KAAK+7C,kBACP/7C,KAAK+7C,gBAAkB8B,EAAmB,GAE5C,IAAIE,EAAiBF,EAAoB79C,KAAK+7C,gBAC9C/7C,KAAK+7C,gBAAkB8B,EAEvB,IAAI/+C,EAAI,EAAG2+C,EAAMz9C,KAAK07C,UAAU18C,OAChC,IAAKF,EAAI,EAAGA,EAAI2+C,EAAK3+C,KACnBg/C,EAAW99C,KAAK07C,UAAU58C,IACjBk/C,mBAAqBF,EAASE,kBAAkBh+C,MAS3D,IANAA,KAAKw9C,QAAQK,EAAmBE,GACG,IAA/B/9C,KAAKy7C,eAAez8C,SACtBgB,KAAK87C,SAAU,EACf97C,KAAK+7C,iBAAmB,GAGrBj9C,EAAI,EAAGA,EAAI2+C,EAAK3+C,KACnBg/C,EAAW99C,KAAK07C,UAAU58C,IACjBm/C,kBAAoBH,EAASG,iBAAiBj+C,MAGpDA,KAAK87C,SACR97C,KAAKu7C,OAAO2C,KAEhB,EAKAC,eAAgB,SAASC,GACvB,IAAIvB,EAAS78C,KAAKw7C,gBAAgB4C,IACU,GAAxCp+C,KAAKy7C,eAAe54C,QAAQg6C,IAC9B78C,KAAKy7C,eAAeh4C,KAAKo5C,GAEvB78C,KAAKi9C,cACPj9C,KAAK87C,SAAU,EACf97C,KAAKu7C,OAAO2C,MAEhB,EAKAG,YAAa,SAASP,GACpB99C,KAAK07C,UAAUj4C,KAAKq6C,EACtB,EAGAQ,eAAgB,SAASR,GACvBP,EAAYv9C,KAAK07C,UAAWoC,EAC9B,EAGAS,mBAAoB,WAClBv+C,KAAK07C,UAAY,EACnB,IAkBF,IAAIoB,EAAS1B,EAAQ0B,OAAS,SAASA,EAAOjB,GAC5C77C,KAAKw+C,IAAM,IAAM1B,EAAO2B,MACxBz+C,KAAK0+C,cAAgB7C,EACrB77C,KAAK07C,UAAY,GACjB17C,KAAK2+C,cAAgB,IAAIC,EACzB5+C,KAAK6+C,eAAiB,IAAID,EAC1B5+C,KAAK8+C,WAAa,IAAIF,CACxB,EAEAvD,EAAK56C,OAAOq8C,EAAQ,CAClB2B,IAAK,EAELM,mBAAoB,KAEpBC,oBAAqB,OAIvB3D,EAAK56C,OAAOq8C,EAAO17C,UAAW,CAE5Bo9C,IAAK,EAELS,cAAe,KAEfC,2BAA2B,EAE3BP,cAAe,KAEfE,eAAgB,KAEhBC,WAAY,KAEZK,YAAa,EAEbC,UAAW,EAEXC,YAAY,EAEZC,oBAAqB,KAErBC,+BAAgC,KAEhC7D,UAAW,KAEX8D,iBAAkB,EAElBd,cAAe,KAGf10C,QAAS,WACPhK,KAAK07C,UAAY,GACjB17C,KAAKy/C,OAAS,GACdz/C,KAAK0+C,cAAcpB,iBAAiBt9C,KACtC,EAIAq9C,MAAO,WACL,OAAOr9C,KAAKw+C,GACd,EAKAxB,gBAAiB,SAASZ,GAExB,OADAp8C,KAAKi/C,cAAgB7C,EACdp8C,IACT,EAGA0/C,gBAAiB,WACf,OAAO1/C,KAAKi/C,aACd,EA6BAU,gBAAiB,SAASC,EAAcC,GAOtC,OANA7/C,KAAKm/C,YAAcS,EACnB5/C,KAAK2+C,cAAchM,SAAWiN,EACzBC,GACH7/C,KAAK8/C,YAEP9/C,KAAK+/C,uBAAsB,GAAO,GAC3B//C,IACT,EAKAggD,cAAe,WACb,OAAOhgD,KAAKm/C,WACd,EAGAc,gBAAiB,WACf,OAAOjgD,KAAK2+C,cAAchM,QAC5B,EAIAuN,+BAAgC,WAC9B,OAAOlgD,KAAKmgD,gCAAgCngD,KAAK2+C,cACnD,EAEAwB,gCAAiC,SAAShvC,GACxC,OAAOtT,KAAKC,IAAIkC,KAAKo/C,UAAYjuC,EAAMwhC,SACzC,EAQAyN,YAAa,SAASC,GACpB,GAAIrgD,KAAKo/C,WAAaiB,GAAYrgD,KAAKsgD,WACrC,OAAOtgD,KAETA,KAAKm/C,YAAcn/C,KAAKigD,kBACxBjgD,KAAKo/C,UAAYiB,EACjBrgD,KAAK0+C,cAAcP,eAAen+C,KAAKq9C,SACvC,IAAK,IAAIv+C,EAAI,EAAG2+C,EAAMz9C,KAAK07C,UAAU18C,OAAQF,EAAI2+C,EAAK3+C,IAAK,CACzD,IACIyhD,EADWvgD,KAAK07C,UAAU58C,GACN0hD,uBACxBD,GAAYA,EAASvgD,KACvB,CACA,OAAOA,IACT,EAGAygD,YAAa,WACX,OAAOzgD,KAAKo/C,SACd,EASAsB,YAAa,SAASj4C,GACpB,OAAIA,IAAazI,KAAK2+C,cAAcl2C,WAGpCzI,KAAK2+C,cAAcl2C,SAAWA,EAC9BzI,KAAK0+C,cAAcP,eAAen+C,KAAKq9C,UAH9Br9C,IAKX,EAGAkI,YAAa,WACX,OAAOlI,KAAK2+C,cAAcl2C,QAC5B,EAIAk4C,sBAAuB,SAASC,GAE9B,OADA5gD,KAAKs/C,oBAAsBsB,EACpB5gD,IACT,EAGA6gD,sBAAuB,WACrB,OAAO7gD,KAAKs/C,mBACd,EAKAwB,6BAA8B,SAASC,GACrC/gD,KAAKu/C,+BAAiCwB,CACxC,EAGAC,6BAA8B,WAC5B,OAAOhhD,KAAKu/C,8BACd,EAOA0B,4BAA6B,SAASC,GAEpC,OADAlhD,KAAKk/C,0BAA4BgC,EAC1BlhD,IACT,EAGAmhD,2BAA4B,WAC1B,OAAOnhD,KAAKk/C,yBACd,EAKAkC,eAAgB,WACd,IAAIr5C,EAAQ/H,KAAKm/C,YACbn3C,EAAMhI,KAAKo/C,UACf,OAAOp/C,KAAKi/C,cAAc/C,QAAU,IACjCn0C,EAAQC,GAAOhI,KAAKigD,kBAAoBj4C,GACzCD,EAAQC,GAAOhI,KAAKigD,kBAAoBj4C,EAC5C,EAOAw1C,QAAS,SAAS/oC,EAAM4sC,GACtB,IAAIf,EAAWtgD,KAAKsgD,WAEpB,IAAIA,IAAYtgD,KAAKq/C,WAArB,CAIA,IAAIiC,EAAoBD,EACpBA,EAAgBvE,EAAOiC,qBACzBuC,EAAoBxE,EAAOiC,oBAG7B/+C,KAAKw/C,kBAAoB8B,EAiBzB,IAfA,IAQIC,EAAWC,EACXC,EAAWC,EACXC,EAAWC,EACXC,EAEMC,EAbN5F,EAAUl8C,KAAKi/C,cAAc/C,QAC7BC,EAAWn8C,KAAKi/C,cAAc9C,SAE9BxJ,EAAW3yC,KAAK2+C,cAAchM,SAC9BlqC,EAAWzI,KAAK2+C,cAAcl2C,SAC9Bs5C,EAAe/hD,KAAK8+C,WAAWnM,SAC/BqP,EAAehiD,KAAK8+C,WAAWr2C,SAS7BzI,KAAKw/C,kBAAoB1C,EAAOkC,qBAEpCh/C,KAAKw/C,kBAAoB1C,EAAOkC,oBAE5Bh/C,KAAKw/C,iBAAmB1C,EAAOkC,sBACjCh/C,KAAK6+C,eAAelM,SAAWA,EAC/B3yC,KAAK6+C,eAAep2C,SAAWA,GAGjC84C,EAAY94C,EACZ+4C,EACGtF,GAAWl8C,KAAKo/C,UAAY2C,GAAiB5F,EAAW1zC,EAE3Ds5C,EAAepP,EAAW4O,EAAYzE,EAAOkC,oBAAsB,GAGnEyC,EAFAO,EACEv5C,EAAW+4C,EAAgB1E,EAAOkC,oBAAsB,GAE1D0C,EACGxF,GAAWl8C,KAAKo/C,UAAY2C,GAAiB5F,EAAW6F,EAE3DD,EAAepP,EAAW8O,EAAY3E,EAAOkC,oBAAsB,GAGnE2C,EAFAK,EACEv5C,EAAWi5C,EAAgB5E,EAAOkC,oBAAsB,GAE1D4C,EACG1F,GAAWl8C,KAAKo/C,UAAY2C,GAAiB5F,EAAW6F,EAE3DD,EAAepP,EAAWgP,EAAY7E,EAAOkC,oBAAsB,GAGnE6C,EAFAG,EACEv5C,EAAWm5C,EAAgB9E,EAAOkC,oBAAsB,GAO1D8C,EAAO,EAAI,GACTN,EAAgB,GAAOE,EAAgBE,IALtC1F,GAAWl8C,KAAKo/C,UAAY2C,GAAiB5F,EAAW6F,IAQ3DrP,GALE,EAAI,GAAO4O,EAAY,GAAOE,EAAYE,GAAaE,GAKtC/E,EAAOkC,oBAC1Bv2C,GAAYq5C,EAAOhF,EAAOkC,oBAG5Bh/C,KAAK8+C,WAAWnM,SAAWoP,EAC3B/hD,KAAK8+C,WAAWr2C,SAAWu5C,EAE3BhiD,KAAK2+C,cAAchM,SAAWA,EAC9B3yC,KAAK2+C,cAAcl2C,SAAWA,EAE1BzI,KAAKw/C,iBAAmB,GAC1Bx/C,KAAKiiD,aAAajiD,KAAKw/C,iBAAmB1C,EAAOkC,sBAG/Ch/C,KAAKsgD,YACLtgD,KAAKk/C,2BAA6Bl/C,KAAKohD,oBAErCphD,KAAKi/C,cAAc/C,QAAU,GAC/Bl8C,KAAKm/C,YAAcn/C,KAAKo/C,UACxBp/C,KAAK2+C,cAAchM,SAAW3yC,KAAKo/C,YAEnCp/C,KAAKo/C,UAAYp/C,KAAK2+C,cAAchM,SACpC3yC,KAAKm/C,YAAcn/C,KAAKo/C,WAE1Bp/C,KAAK0gD,YAAY,GACjBJ,GAAW,GAGb,IAAI4B,GAAiB,EACjBliD,KAAKq/C,aACPr/C,KAAKq/C,YAAa,EAClB6C,GAAiB,GAGnB,IAAIC,GAAe,EACf7B,IACFtgD,KAAKq/C,YAAa,EAClB8C,GAAe,GAGjBniD,KAAK+/C,sBAAsBmC,EAAgBC,EAxG3C,CAyGF,EAEApC,sBAAuB,SAASmC,EAAgBC,GAC9C,IAAK,IAAIrjD,EAAI,EAAG2+C,EAAMz9C,KAAK07C,UAAU18C,OAAQF,EAAI2+C,EAAK3+C,IAAK,CACzD,IAAIg/C,EAAW99C,KAAK07C,UAAU58C,GAC1BojD,GAAkBpE,EAASsE,kBAC7BtE,EAASsE,iBAAiBpiD,MAGxB89C,EAASuE,gBACXvE,EAASuE,eAAeriD,MAGtBmiD,GAAgBrE,EAASwE,gBAC3BxE,EAASwE,eAAetiD,KAE5B,CACF,EAOA09C,oBAAqB,WACnB,OAAQ19C,KAAKsgD,aAAetgD,KAAKuiD,WACnC,EAEAA,UAAW,WACT,OAAOviD,KAAKq/C,UACd,EAQAiB,SAAU,WACR,OAAOziD,KAAKC,IAAIkC,KAAK2+C,cAAcl2C,UAAYzI,KAAKs/C,sBACjDt/C,KAAKmgD,gCAAgCngD,KAAK2+C,gBACzC3+C,KAAKu/C,gCACwB,IAA/Bv/C,KAAKi/C,cAAc/C,QACvB,EAMA4D,UAAW,WAIT,OAHA9/C,KAAKo/C,UAAYp/C,KAAK2+C,cAAchM,SACpC3yC,KAAK8+C,WAAWnM,SAAW3yC,KAAK2+C,cAAchM,SAC9C3yC,KAAK2+C,cAAcl2C,SAAW,EACvBzI,IACT,EAEAiiD,aAAc,SAASO,GACrBxiD,KAAK2+C,cAAchM,SAAW3yC,KAAK2+C,cAAchM,SAC/C6P,EAAQxiD,KAAK6+C,eAAelM,UAAY,EAAI6P,GAC9CxiD,KAAK2+C,cAAcl2C,SAAWzI,KAAK2+C,cAAcl2C,SAC/C+5C,EAAQxiD,KAAK6+C,eAAep2C,UAAY,EAAI+5C,EAChD,EAEAC,aAAc,WACZ,OAAOziD,KAAK07C,SACd,EAEA2C,YAAa,SAASqE,GAEpB,OADA1iD,KAAK07C,UAAUj4C,KAAKi/C,GACb1iD,IACT,EAEAs+C,eAAgB,SAASqE,GAEvB,OADApF,EAAYv9C,KAAK07C,UAAWiH,GACrB3iD,IACT,EAEAu+C,mBAAoB,WAElB,OADAv+C,KAAK07C,UAAY,GACV17C,IACT,EAEA4iD,4BAA6B,SAASpzC,GACpC,OAAO3R,KAAKC,IAAIkC,KAAKigD,kBAAoBzwC,IACvCxP,KAAKghD,8BACT,IASF,IAAIpC,EAAe,WAAyB,EAE5CvD,EAAK56C,OAAOm+C,EAAax9C,UAAW,CAClCuxC,SAAU,EACVlqC,SAAU,IASZ,IAAI4zC,EAAejB,EAAQiB,aACzB,SAAsBH,EAASC,GAC7Bn8C,KAAKk8C,QAAUA,EACfl8C,KAAKm8C,SAAWA,CAClB,EAOEP,EAAkBR,EAAQQ,gBAAkB,WAC9C57C,KAAK67C,aAAe,KACpB,IAAIgH,EAAQ7iD,KACR8iD,EAAO,WACTD,EAAMhH,aAAa+B,KAAK5/C,KAAKD,MAC/B,EAEAiC,KAAKk+C,IAAM,WACT7C,EAAK0H,QAAQD,EACf,CACF,EAQA1H,EAAQ4H,iBAAmB,SAA0BC,GACnDjjD,KAAK67C,aAAe,KACpB,IAAIpnC,EAAO,EACPyuC,GAAU,EACdD,EAASA,GAAY,OAErBjjD,KAAKk+C,IAAM,WACT,IAAIgF,EAAJ,CAIA,IADAA,GAAU,GACHljD,KAAK67C,aAAaoB,aACvBj9C,KAAK67C,aAAa+B,KAAKnpC,GAAMwuC,GAE/BC,GAAU,CALV,CAMF,CACF,EAOA9H,EAAQ+H,yBAA2B,SAASF,GAC1CjjD,KAAK67C,aAAe,KACpB,IAAIpnC,EAAO,EAIXzU,KAAKk+C,IAAM,WAAW,EAGtBl+C,KAAKshC,KAAO,SAAS2hB,GACnBjjD,KAAK67C,aAAa+B,KAAKnpC,GAAMwuC,EAC/B,CACF,EAOA,IAAIG,EAAwBhI,EAAQgI,sBAAwB,CAC1DC,wBAAyB,SAASC,GAChC,OAAyB,MAAjBA,EAAS,IAAe,GAClC,EAEAC,wBAAyB,SAASrH,GAChC,OAAQA,EAAU,KAAS,KAAO,EACpC,EAEAsH,yBAA0B,SAASF,GACjC,OAAwB,GAAhBA,EAAS,GAAa,EAChC,EAEAG,oBAAqB,SAAStH,GAC5B,OAAQA,EAAW,IAAQ,EAAM,CACnC,GAUEuH,EAAmBtI,EAAQsI,iBAAmB,SAAShH,EAAYC,GACrE38C,KAAK08C,WAAaA,EAClB18C,KAAK28C,MAAQA,EACb,IAAIh5C,EAAI3D,KAAK2jD,UAAUjH,EAAa,IAAK,EAAG,IAC5C/4C,EAAI3D,KAAK4jD,cAAcjgD,EAAG,EAAK,IAC/B,IAAIkgD,EAAI7jD,KAAK2jD,UAAUhH,EAAQ,IAAK,EAAG,IACvC38C,KAAK8jD,cAAgB9jD,KAAK4jD,cAAcC,EAAG,GAAK,KAChD7jD,KAAK+jD,eAAiB/jD,KAAKgkD,0BACzBrgD,EACA3D,KAAKikD,WAAWjkD,KAAK8jD,eACrB,IACJ,EAEAzI,EAAK56C,OAAOijD,EAAiBtiD,UAAW,CAEtCuiD,UAAW,SAASn0C,EAAO00C,EAAY7D,GACrC,OAAQ7wC,EAAQ00C,IAAe7D,EAAW6D,EAC5C,EAEAN,cAAe,SAAS9/B,EAAG/b,EAAOC,GAChC,OAAOD,EAAS+b,GAAK9b,EAAMD,EAC7B,EAEAo8C,oBAAqB,SAASn2C,EAAGjG,EAAOC,GACtC,OAAOgG,EAAIhG,GAAO,EAAMgG,GAAKjG,CAC/B,EAEAi8C,0BAA2B,SAASh2C,EAAGjG,EAAOC,GAC5C,OAAOhI,KAAKmkD,oBAAoB,EAAEn2C,EAAIA,EAAEA,EAAGjG,EAAOC,EACpD,EAEAo8C,YAAa,SAAS58C,GACpB,OAAQ,KAAS3J,KAAKwmD,IAAI78C,EAAG,GAC1B,KAAQ3J,KAAKwmD,IAAI78C,EAAG,GAAM,IAAOA,EAAI,IAC1C,EAEA88C,YAAa,SAAS98C,GACpB,OAAQ,MAAW3J,KAAKwmD,IAAI78C,EAAG,GAC5B,KAAQ3J,KAAKwmD,IAAI78C,EAAG,GAAM,IAAOA,EAAI,CAC1C,EAEA+8C,YAAa,SAAS/8C,GACpB,OAAQ,MAAa3J,KAAKwmD,IAAI78C,EAAG,GAC9B,OAAW3J,KAAKwmD,IAAI78C,EAAG,GAAM,MAASA,EAAI,IAC/C,EAEAy8C,WAAY,SAAS/H,GASnB,OAPIA,GAAW,GACFl8C,KAAKokD,YAAYlI,GACnBA,EAAU,IAAMA,GAAW,GACzBl8C,KAAKskD,YAAYpI,GAEjBl8C,KAAKukD,YAAYrI,EAGhC,IAGFb,EAAK56C,OAAO47C,EAAc,CAKxBE,8BAA+B,SAASL,EAASC,GAC/C,OAAO,IAAIE,EACT+G,EAAsBC,wBAAwBnH,GAC9CkH,EAAsBI,yBAAyBrH,GACnD,EAKAS,uBAAwB,SAASF,EAAYC,GAC3C,IAAI6H,EAAmB,IAAIpJ,EAAQsI,iBAAiBhH,EAAYC,GAChE,OAAO38C,KAAKu8C,8BACViI,EAAiBV,cACjBU,EAAiBT,eACrB,EAIAU,kCAAmC,SAAStI,GAC1C,OAAO,IAAIE,EACT,EACA+G,EAAsBI,yBAAyBrH,GAEnD,IAGFE,EAAaC,8BACXD,EAAaE,8BAA8B,GAAI,GAEjDlB,EAAK56C,OAAO47C,EAAaj7C,UAAW,CAAC+6C,SAAU,EAAGD,QAAS,IAK3D,IAAIwI,EAAa,CAAC,EAClBrJ,EAAKsJ,SAAW,SAASC,GACvB,GAAIF,EAAWE,GACb,OAAOF,EAAWE,GAGC,KADrBA,EAAQA,EAAMjlD,QAAQ,IAAK,KACjBX,SACR4lD,EAAQA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAEvE,IAAIC,EAAQD,EAAM/+B,MAAM,SAEpBi/B,EAAM,CACRC,EAAGvlC,SAASqlC,EAAM,GAAI,IACtBnlC,EAAGF,SAASqlC,EAAM,GAAI,IACtBlhD,EAAG6b,SAASqlC,EAAM,GAAI,KAIxB,OADAH,EAAWE,GAASE,EACbA,CACT,EAEAzJ,EAAK2J,SAAW,SAASD,EAAGrlC,EAAG/b,GAO7B,OANAohD,EAAIA,EAAEn+B,SAAS,IACflH,EAAIA,EAAEkH,SAAS,IACfjjB,EAAIA,EAAEijB,SAAS,IAIR,KAHPm+B,EAAIA,EAAE/lD,OAAS,EAAI,IAAM+lD,EAAIA,IAC7BrlC,EAAIA,EAAE1gB,OAAS,EAAI,IAAM0gB,EAAIA,IACzB/b,EAAE3E,OAAS,EAAI,IAAM2E,EAAIA,EAE/B,EAEA,IAgEIshD,EAhEAC,EAAW9J,EAAQ8J,SAAW,CAShCC,gBAAiB,SAAS31C,EAAO41C,EAASC,EAAUC,EAAOC,GAIzD,OAAOD,GADW91C,EAAQ41C,IAFNC,EAAWD,IACbG,EAASD,EAG7B,EAKAE,iBACE,SAAS/jD,EAAKgkD,EAAYC,EAAUN,EAASC,EAAUM,GACvDP,OAAsB7nD,IAAZ6nD,EAAwB,EAAIA,EACtCC,OAAwB9nD,IAAb8nD,EAAyB,EAAIA,EACxCI,EAAapK,EAAKsJ,SAASc,GAC3BC,EAAWrK,EAAKsJ,SAASe,GACzB,IAAIX,EAAIlnD,KAAK6qB,MACX2yB,EAAK8J,gBAAgB1jD,EAAK2jD,EAASC,EAAUI,EAAWV,EAAGW,EAASX,IAElErlC,EAAI7hB,KAAK6qB,MACX2yB,EAAK8J,gBAAgB1jD,EAAK2jD,EAASC,EAAUI,EAAW/lC,EAAGgmC,EAAShmC,IAElE/b,EAAI9F,KAAK6qB,MACX2yB,EAAK8J,gBAAgB1jD,EAAK2jD,EAASC,EAAUI,EAAW9hD,EAAG+hD,EAAS/hD,IAEtE,OAAIgiD,EACK,OAASZ,EAAI,IAAMrlC,EAAI,IAAM/b,EAAI,IAEjC03C,EAAK2J,SAASD,EAAGrlC,EAAG/b,EAE/B,EAEAiiD,iBAAkB,SAASC,GACzB,OAAQA,EAAMhoD,KAAK+L,GAAM,GAC3B,EAEAk8C,iBAAkB,SAASC,GACzB,OAAc,IAANA,EAAaloD,KAAK+L,EAC5B,GAYF,SAAS2zC,EAAYh8B,EAAOvO,GAC1B,IAAI2qC,EAAMp8B,EAAM1e,QAAQmQ,IAChB,GAAR2qC,GAAap8B,EAAMzV,OAAO6xC,EAAK,EACjC,CAXAtC,EAAK56C,OAAO46C,EAAM6J,GAcI,oBAAX9nD,SACT6nD,EAAW7nD,OAAO89C,uBAChB99C,OAAO4oD,6BACP5oD,OAAO6oD,0BACP7oD,OAAO8oD,yBACP9oD,OAAO+oD,wBACP,SAAS9gD,GACPjI,OAAOiB,WAAWgH,EAAU,IAAO,GACrC,GAEC4/C,GAA+B,oBAAZlxC,SAA6C,SAAlBA,QAAQqyC,QACzDnB,EAAWoB,cAIbhL,EAAK0H,QAAU,SAAiB3hC,GAC9B,OAAO6jC,EAAS7jC,EAClB,EAKEi6B,EAAK56C,OAAOsf,EAASq7B,EAIxB,CAx/BD,yBCzHA,IAAIkL,EAMJA,EAAS,WACL,IAAIC,EAAS,CAAC,EACVlwC,EAAS,CAAC,EA+Cd,OAlCAkwC,EAAOnwC,GAAK,SAAU/W,EAAM2C,GACxB,IAAI87C,EAAW,CAACz+C,KAAMA,EAAM2C,QAASA,GAGrC,OAFAqU,EAAOhX,GAAQgX,EAAOhX,IAAS,GAC/BgX,EAAOhX,GAAMmnD,QAAQ1I,GACdA,CACX,EAKAyI,EAAOjwC,IAAM,SAAUwnC,GACnB,IAAIx9C,EAAQ+V,EAAOynC,EAASz+C,MAAMwD,QAAQi7C,IAE3B,IAAXx9C,GACA+V,EAAOynC,EAASz+C,MAAMyM,OAAOxL,EAAO,EAE5C,EAMAimD,EAAOE,QAAU,SAAUpnD,EAAMkX,GAC7B,IACIzX,EADA48C,EAAYrlC,EAAOhX,GAGvB,GAAIq8C,EAEA,IADA58C,EAAI48C,EAAU18C,OACPF,KACH48C,EAAU58C,GAAGkD,QAAQuU,EAGjC,EAEOgwC,CACX,EAEArmC,EAAOH,QAAUumC,8BC1DjBpmD,OAAOgoB,eAAenI,EAAS,aAAc,CAC3CvQ,OAAO,IAGT,IAEIk3C,EAAWC,EAFD,EAAQ,MAMlBC,EAAWD,EAFD,EAAQ,MAMlBE,EAAaF,EAFD,EAAQ,MAMpBG,EAAYH,EAFD,EAAQ,MAMnBI,EAAiBJ,EAFD,EAAQ,MAMxBK,EAAQL,EAFD,EAAQ,MAMfM,EAAcN,EAFD,EAAQ,MAIrBO,EAAa,EAAQ,KAEzB,SAASP,EAAuB/nD,GAAO,OAAOA,GAAOA,EAAIuoD,WAAavoD,EAAM,CAAEwoD,QAASxoD,EAAO,CAQ9F,IAAIyoD,EAAmB,SAA0BC,EAAOC,EAAOC,GAC7D,IAAIC,EAAe5pD,KAAKC,IAAIwpD,GAASzpD,KAAKC,IAAIypD,GAE1CG,EAAkBJ,EAAQ,EAAIL,EAAYG,QAAQO,KAAOV,EAAYG,QAAQQ,MAC7EC,EAAgBN,EAAQ,EAAIN,EAAYG,QAAQU,GAAKb,EAAYG,QAAQW,KAEzEn/C,EAAY6+C,EAAeC,EAAkBG,EAEjD,OAA8C,IAA1CL,EAAkB3kD,QAAQ+F,GACrBq+C,EAAYG,QAAQY,QAGtBp/C,CACT,EAQIq/C,EAAO,SAASA,EAAKvoD,EAAOwoD,EAAeC,GAC7C,IAiIUC,EA/GNC,EACAC,EAnBAC,OAAO,EACPC,OAAS,EACTC,OAAW,EACXC,OAAW,EACXC,OAAS,EACTC,OAAe,EACfC,OAAY,EACZC,OAAY,EACZC,OAAY,EACZC,OAAgB,EAChBC,OAAQ,EACRC,OAAQ,EACRC,OAAK,EACLC,OAAkB,EAClBvN,OAAe,EACfwN,OAAgB,EAChBC,OAAiB,EACjBC,OAA4B,EAG5BC,OAA0B,EA4U9B,OAzUEjB,EAAO,CAAC,EACRC,EAASP,EAAKwB,WAAW/pD,EAAMgqD,aAC/Bd,GAAe,EAAIhC,EAASQ,WAC5BvL,EAAen8C,EAAMiqD,kBACrBN,EAAgBxN,EAAaI,aAAa,IAAK,IAC/CqN,EAAiBzN,EAAaI,aAAa,IAAK,IAChD8M,EAAY,CAAC,EACbC,EAAgB,CACdY,YAAa,EACbC,YAAa,IAIfN,EAA4B,CAAC,GACHtC,EAAYG,QAAQO,MAAQ,eACtD4B,EAA0BtC,EAAYG,QAAQQ,OAAS,gBACvD2B,EAA0BtC,EAAYG,QAAQU,IAAM,aACpDyB,EAA0BtC,EAAYG,QAAQW,MAAQ,eAEtDsB,EAAc1I,sBAAsB,KACpC0I,EAAcvI,6BAA6B,KAE3CwI,EAAe3I,sBAAsB,KACrC2I,EAAexI,6BAA6B,KAE5CuH,EAAmBG,EAAOH,iBAAiBG,EAAOsB,oBAAqBtB,EAAOuB,qBAE9EZ,EAAK,IAAItC,EAAWO,QAAQz0C,QAAQu1C,EAAe,CACjDp4C,YAAa,CAAC,CAAC+2C,EAAWO,QAAQtvC,IAAK,CACrC1D,UAAW,OAIX+zC,EACFF,EAAK+B,gBAAgB9B,GAErBD,EAAKgC,eAAe/B,GAGtBU,EAAaxyC,GAAG,YAAY,WAC1B6xC,EAAKgC,eAAe/B,GAEpBU,EAAanC,QAAQ,YAAa,CAChCtmD,OAAQ+nD,IAGVO,EAAW,EACXC,EAAW,EAEXG,GAAY,EAEZ,SAAUqB,IACJrB,IACFF,KAEA,EAAI3B,EAAMI,SAAS8C,GAEtB,CAND,EAOF,IAEAtB,EAAaxyC,GAAG,WAAW,SAAU3C,GACnCg1C,EAAWh1C,EAAMhM,OACjBihD,EAAWj1C,EAAM9L,MACnB,IAEAihD,EAAaxyC,GAAG,UAAU,SAAU3C,GAClCo1C,GAAY,EAEZ,IAAIe,EAAcZ,EAAcY,YAAcn2C,EAAMhM,OAChDoiD,EAAcb,EAAca,YAAcp2C,EAAM9L,OAEhDwiD,EAAa3B,EAAO2B,WAAWP,EAAaC,EAAa3B,EAAeM,EAAO4B,mBAAmBR,EAAaC,EAAa3B,IAI5Ht/C,EAAYy+C,EAAiBuC,EAAaC,EAAarB,EAAOhB,mBAE9D2C,GAAcvhD,IAAcq+C,EAAYG,QAAQY,QAClDO,EAAK8B,SAAST,EAAaC,EAAajhD,GAExC2/C,EAAK+B,QAAQV,EAAaC,EAAajhD,GAGzCggD,EAAanC,QAAQ,UAAW,CAC9BtmD,OAAQ+nD,GAEZ,KAII,EAAIhB,EAAWqD,kBACjBrC,EAAc/lD,iBAAiB,cAAc,WAC3CymD,EAAanC,QAAQ,WACvB,IAEAyB,EAAc/lD,iBAAiB,YAAY,WACrC0mD,IAAcC,GAChBF,EAAanC,QAAQ,UAAW,CAC9BtmD,OAAQ+nD,GAGd,IAKME,OAAW,EAEfF,EAAc/lD,iBAAiB,cAAc,WAC3CimD,GAAW,CACb,IAEAF,EAAc/lD,iBAAiB,YAAY,WACzCimD,GAAW,CACb,IAEA,EAAA1oC,EAAOvd,iBAAiB,aAAa,SAAUsR,GACzC20C,GACF30C,EAAMlD,gBAEV,MAGF23C,EAAc/lD,iBAAiB,aAAa,WAC1CqnD,EAA0BvB,EAAKgC,eAAe/B,IAAkBsB,EAChEZ,EAAanC,QAAQ,WACvB,IAEAyB,EAAc/lD,iBAAiB,WAAW,WACpCqnD,IACFtB,EAAcsC,QACdhB,GAA0B,GAGxBX,IAAcC,GAChBF,EAAanC,QAAQ,UAAW,CAC9BtmD,OAAQ+nD,GAGd,KAGFiB,EAAG/yC,GAAG,YAAY,SAAU3C,GAC1Bq1C,GAAY,EACZF,EAAanC,QAAQ,WAAYhzC,EACnC,IAEA01C,EAAG/yC,GAAG,WAAW,SAAU3C,GACzBm1C,EAAanC,QAAQ,UAAWhzC,EAClC,IAEA01C,EAAG/yC,GAAG,UAAU,SAAU3C,GACxBq1C,GAAY,EACZF,EAAanC,QAAQ,SAAUhzC,EACjC,IAEA41C,EAAchL,YAAY,CACxBiE,eAAgB,WACdsG,EAAanC,QAAQ,aAAc,CACjCtmD,OAAQ+nD,GAEZ,EACA7F,eAAgB,SAAwBxF,GACtC,IAAIrtC,EAAQqtC,EAAOoD,kBACfwK,EAAc3D,EAAUM,QAAQlC,SAASC,gBAAgB31C,EAAO,EAAG,EAAGu5C,EAAUzB,MAAO,GACvFoD,EAAc5D,EAAUM,QAAQlC,SAASC,gBAAgB31C,EAAO,EAAG,EAAGu5C,EAAUxB,MAAO,GAE3F6B,EAAgBqB,EAAaC,EAC/B,IAGFpB,EAAejL,YAAY,CACzBiE,eAAgB,WACdsG,EAAanC,QAAQ,cAAe,CAClCtmD,OAAQ+nD,GAEZ,EACA7F,eAAgB,SAAwBxF,GACtC,IAAIrtC,EAAQqtC,EAAOoD,kBAEfwK,OAAc,EACdC,OAAc,EACdC,OAAkB,EAElB5B,EAAUngD,YAAcq+C,EAAYG,QAAQQ,OAASmB,EAAUngD,YAAcq+C,EAAYG,QAAQO,MACnGgD,EAAkB5B,EAAUngD,YAAcq+C,EAAYG,QAAQQ,MAAQ,GAAK,EAC3E6C,EAAc3D,EAAUM,QAAQlC,SAASC,gBAAgB31C,EAAO,EAAG,EAAGu5C,EAAUzB,MAAOe,EAAmBsC,GAC1GD,EAAc3B,EAAUxB,OACfwB,EAAUngD,YAAcq+C,EAAYG,QAAQU,IAAMiB,EAAUngD,YAAcq+C,EAAYG,QAAQW,OACvG4C,EAAkB5B,EAAUngD,YAAcq+C,EAAYG,QAAQW,KAAO,GAAK,EAC1E0C,EAAc1B,EAAUzB,MACxBoD,EAAc5D,EAAUM,QAAQlC,SAASC,gBAAgB31C,EAAO,EAAG,EAAGu5C,EAAUxB,MAAOc,EAAmBsC,IAG5GvB,EAAgBqB,EAAaC,EAC/B,IAQF/B,EAAS,WACP,GAAIF,IAAaQ,GAASP,IAAaQ,EAAvC,CAIAD,EAAQR,EACRS,EAAQR,EAER,IAAIkB,EAAcZ,EAAcY,YAAcnB,EAC1CiC,EAAc1B,EAAca,YAAcnB,EAC1CpgD,EAAWkgD,EAAOlgD,SAASshD,EAAac,EAAaxC,EAAeM,EAAOoC,aAE/EpC,EAAOpjC,UAAU8iC,EAAe0B,EAAac,EAAapiD,GAE1DsgD,EAAanC,QAAQ,WAAY,CAC/Br/C,OAAQwiD,EACRzpD,OAAQ+nD,EACR2C,eAAgBxD,EAAiBuC,EAAac,EAAalC,EAAOhB,mBAClE4C,mBAAoB5B,EAAO4B,mBAAmBR,EAAac,EAAaxC,IAf1E,CAiBF,EASAkB,EAAkB,SAAyBQ,EAAaC,GACtD,IAAIvhD,EAAWkgD,EAAOlgD,SAASshD,EAAaC,EAAa3B,EAAeM,EAAOoC,aAE/E5B,EAAcY,YAAcA,GAAe,EAC3CZ,EAAca,YAAcA,GAAe,EAE3CrB,EAAOpjC,UAAU8iC,EAAe0B,EAAaC,EAAavhD,EAC5D,EASAggD,EAAa,SAAoBwC,EAAOxD,EAAOC,EAAO3+C,GAOpD,GANAmgD,EAAUzB,MAAQA,EAClByB,EAAUxB,MAAQA,EAGlBwB,EAAUngD,UAAYA,GAAay+C,EAAiBC,EAAOC,EAAOiB,EAAOhB,mBAErEsD,IAAU7C,EAAK8C,SACjB9C,EAAKgC,eAAe/B,GACpBmB,EAAc1J,gBAAgB,GAAGG,YAAYM,YAAY,GAEzDwI,EAAanC,QAAQ,UAAW,CAC9BtmD,OAAQ+nD,EACR2C,eAAgB9B,EAAUngD,gBAEvB,IAAIkiD,IAAU7C,EAAK+C,UAexB,MAAM,IAAIvrD,MAAM,wBAdhBwoD,EAAKgC,eAAe/B,GACpBoB,EAAe3J,gBAAgB,GAAGG,YAAYY,YAAY,KAAKN,YAAY,GAE3EwI,EAAanC,QAAQ,WAAY,CAC/BtmD,OAAQ+nD,EACR2C,eAAgB9B,EAAUngD,YAI5BggD,EAAanC,QAAQ8C,EAA0BR,EAAUngD,WAAY,CACnEzI,OAAQ+nD,EACR2C,eAAgB9B,EAAUngD,WAI9B,CACF,EAQF2/C,EAAKnyC,GAAKwyC,EAAaxyC,GACvBmyC,EAAK9B,QAAUmC,EAAanC,QAU5B8B,EAAK+B,QAAU,SAAUV,EAAaC,EAAajhD,GACjD0/C,EAAWL,EAAK8C,SAAUnB,EAAaC,EAAajhD,EACtD,EAUA2/C,EAAK8B,SAAW,SAAUT,EAAaC,EAAajhD,GAClD0/C,EAAWL,EAAK+C,UAAWpB,EAAaC,EAAajhD,EACvD,EAQA2/C,EAAKv+C,QAAU,WACbm/C,EAAGn/C,UACHq/C,EAAcr/C,UACds/C,EAAet/C,UAEftK,EAAMurD,YAAY1C,EACpB,EAEOA,CACT,EAQAN,EAAKwB,WAAa,WAChB,IAAIjB,EAASvoD,UAAUjB,OAAS,QAAsBzB,IAAjB0C,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE9EirD,EAAgB,CAClB1D,kBAAmB,CAACP,EAAYG,QAAQQ,MAAOX,EAAYG,QAAQO,KAAMV,EAAYG,QAAQU,IAC7FqC,WAAYlC,EAAKkC,WACjBS,YAAa,GACbb,oBAAqB,IACrBD,oBAAqB,IACrBxhD,SAAU2/C,EAAK3/C,SACf8hD,mBAAoBnC,EAAKmC,mBACzB/B,iBAAkBJ,EAAKI,iBACvBjjC,UAAW6iC,EAAK7iC,WAGlB,OAAOshC,EAASU,QAAQ5pD,OAAO,CAAC,EAAG0tD,EAAe1C,EACpD,EAaAP,EAAK7iC,UAAY,SAAUhhB,EAASwlD,EAAaC,EAAavhD,GAC5DlE,EAAQqK,OAAM,EAAIs4C,EAAeK,SAAS,cAAgB,kCAAoCwC,EAAc,OAASC,EAAc,cAAgBvhD,EAAW,MAChK,EAcA2/C,EAAKgC,eAAiB,SAAU7lD,GAC9B,IAAI3B,EAAa2B,EAAQ3B,WACrB0oD,GAAW,EAAIjE,EAAWkE,iBAAiB3oD,GAE3C4oD,EADcF,EAAStoD,QAAQuB,GACN,IAAM+mD,EAASnsD,OAO5C,OALIqsD,IACF5oD,EAAW6oD,YAAYlnD,GACvB3B,EAAW8oD,YAAYnnD,IAGlBinD,CACT,EAYApD,EAAK+B,gBAAkB,SAAU5lD,GAC/B,IAAI3B,EAAa2B,EAAQ3B,WAEzBA,EAAW6oD,YAAYlnD,GACvB3B,EAAW+oD,aAAapnD,EAAS3B,EAAWgpD,WAC9C,EAYAxD,EAAKmC,mBAAqB,SAAUsB,EAASC,EAASvnD,GACpD,IAAIwnD,EAAc/tD,KAAKyrB,IAAIzrB,KAAKC,IAAI4tD,GAAWtnD,EAAQynD,YAAa,GAChEC,EAAcjuD,KAAKyrB,IAAIzrB,KAAKC,IAAI6tD,GAAWvnD,EAAQ2nD,aAAc,GAErE,OAAOluD,KAAKurB,IAAIwiC,EAAaE,EAC/B,EAaA7D,EAAKkC,WAAa,SAAUuB,EAASC,EAASvnD,EAASgmD,GACrD,OAA8B,IAAvBA,CACT,EASAnC,EAAKI,iBAAmB,SAAU/+B,EAAKF,GACrC,OAAOs9B,EAASU,QAAQ19B,OAAOJ,EAAKF,EACtC,EAWA6+B,EAAK3/C,SAAW,SAAUshD,EAAaC,EAAazlD,EAASwmD,GAK3D,OAJuB/sD,KAAKyrB,IAAIzrB,KAAKurB,IAAIwgC,EAAcxlD,EAAQynD,aAAc,GAAI,KAC3DhC,EAAc,EAAI,GAAK,GAAKhsD,KAAKyrB,IAAIzrB,KAAKC,IAAI+rD,GAAe,IAAK,IACrCe,CAGrD,EAEA3C,EAAK8C,SAAW,KAChB9C,EAAK+C,UAAY,MAEjBjrC,EAAA,QAAkBkoC,EAClB/nC,EAAOH,QAAUA,EAAiB,kCCrjBlC7f,OAAOgoB,eAAenI,EAAS,aAAc,CAC3CvQ,OAAO,IAET,IAAIw8C,EAAY,CACdjE,KAAMzgC,OAAO,QACb0gC,QAAS1gC,OAAO,WAChBqgC,KAAMrgC,OAAO,QACbsgC,MAAOtgC,OAAO,SACdwgC,GAAIxgC,OAAO,OAGbvH,EAAA,QAAkBisC,EAClB9rC,EAAOH,QAAUA,EAAiB,oCCZlC7f,OAAOgoB,eAAenI,EAAS,aAAc,CAC3CvQ,OAAO,IAGT,IAEIk3C,EAAWC,EAFD,EAAQ,MAMlBC,EAAWD,EAFD,EAAQ,MAMlBG,EAAYH,EAFD,EAAQ,MAMnBsF,EAAStF,EAFD,EAAQ,MAIpB,SAASA,EAAuB/nD,GAAO,OAAOA,GAAOA,EAAIuoD,WAAavoD,EAAM,CAAEwoD,QAASxoD,EAAO,CA+G9FmhB,EAAA,QAzGY,SAAeyoC,GACzB,IAEI3M,EAFA+M,OAAe,EACftoD,OAAQ,EAERZ,OAAQ,EAkGZ,OA/FEA,EAAQ,CAAC,EACTm8C,EAAe,IAAIiL,EAAUM,QAAQ9L,aACrCsN,GAAe,EAAIhC,EAASQ,WAC5B9mD,EAAQ,GAUVZ,EAAMgqD,UAAY,WAChB,OAAOlB,CACT,EAOA9oD,EAAMiqD,gBAAkB,WACtB,OAAO9N,CACT,EASAn8C,EAAM0W,GAAK,SAAU81C,EAAWpO,GAC9B8K,EAAaxyC,GAAG81C,EAAWpO,EAC7B,EASAp+C,EAAMysD,WAAa,SAAU/nD,EAAS+jD,GACpC,IAAII,GAAO,EAAI0D,EAAO7E,SAAS1nD,EAAO0E,EAAS+jD,GAe/C,MAda,CAAC,WAAY,cAAe,eAAgB,gBAAiB,aAAc,eAAgB,UAAW,aAAc,YAAa,WAAY,WAGnJppD,SAAQ,SAAUmtD,GACvB3D,EAAKnyC,GAAG81C,GAAW,SAAU31C,GAC3BqyC,EAAanC,QAAQyF,EAAW31C,EAClC,GACF,IAEAjW,EAAMmD,KAAK,CACT8kD,KAAMA,EACNnkD,QAASA,IAGJmkD,CACT,EAQA7oD,EAAM0sD,QAAU,SAAUhoD,GACxB,IAAI6hC,EAAQygB,EAASU,QAAQxkD,KAAKtC,EAAO,CACvC8D,QAASA,IAGX,OAAI6hC,EACKA,EAAMsiB,KAGR,IACT,EAQA7oD,EAAMurD,YAAc,SAAU1C,GAG5B,OAFAK,EAAanC,QAAQ,cAAe8B,GAE7B7B,EAASU,QAAQjxC,OAAO7V,EAAO,CACpCioD,KAAMA,GAEV,EAEO7oD,CACT,EAGAwgB,EAAOH,QAAUA,EAAiB,oCCjIlCA,EAAQ,QAA2CxiB,EAEnD,IAEI0uD,EAAStF,EAFD,EAAQ,MAMhBM,EAAcN,EAFD,EAAQ,MAMrB0F,EAAU1F,EAFD,EAAQ,MAIrB,SAASA,EAAuB/nD,GAAO,OAAOA,GAAOA,EAAIuoD,WAAavoD,EAAM,CAAEwoD,QAASxoD,EAAO,CAE/EqtD,EAAO7E,QACFH,EAAYG,QAChCrnC,EAAQ,GAAQssC,EAAQjF,oCCrBxBlnD,OAAOgoB,eAAenI,EAAS,aAAc,CAC3CvQ,OAAO,IAETuQ,EAAQwqC,cAAgBxqC,EAAQqrC,qBAAkB7tD,EAElD,IAIgCqB,EAF5B8nD,GAE4B9nD,EAJlB,EAAQ,OAI+BA,EAAIuoD,WAAavoD,EAAM,CAAEwoD,QAASxoD,GAuBvFmhB,EAAQqrC,gBAdc,SAAyBhnD,GAC7C,OAAOsiD,EAASU,QAAQh6C,OAAOhJ,EAAQkoD,WAAY,CACjDtsC,SAAU,GAEd,EAWAD,EAAQwqC,cALY,WAClB,MAAO,iBAAkBntD,QAAUyH,UAAU0nD,gBAC/C,wBC9BA,IAAI99C,EAAQpR,SAASM,cAAc,KAAK8Q,MACpC+9C,EAAW,kBAAkBzpD,MAAM,KACnC0pD,EAAY,qBAEZC,EAAO,CAAC,EAEZ,SAASh7C,EAAIrO,GACT,OAAQA,KAAOqpD,EAAQA,EAAKrpD,GAAOqpD,EAAKrpD,GAG5C,SAAgBA,GACZ,IAIIhE,EAcYsD,EAlBZgqD,EAAiBtpD,EAAI1D,QAAQ,aAAa,SAASkkD,EAAGh+B,GAClD,OAAOA,EAAM5hB,aACjB,IACAnF,EAAI0tD,EAASxtD,OAGjB,QAA8BzB,IAA1BkR,EAAMk+C,GAA+B,OAAOA,EAIhD,IAFAA,GAUgBhqD,EAVYU,GAWjB2iB,OAAO,GAAG/hB,cAAgBtB,EAAIQ,MAAM,GATxCrE,KAEH,GADAO,EAAOmtD,EAAS1tD,GAAK6tD,OACDpvD,IAAhBkR,EAAMpP,GAAqB,OAAOA,EAG1C,MAAM,IAAII,MAAM,oBAAsB4D,EAC1C,CApBmDS,CAAOT,EAC1D,CAoCA6c,EAAOH,QAAUrO,EACjBwO,EAAOH,QAAQ6sC,KAZf,SAAsBvpD,GAClB,IAAIwpD,EAAcn7C,EAAIrO,GAClBsrB,EAAQ,WAMZ,OAJIA,EAAM/pB,KAAKioD,KACXA,GAAeJ,EAAU7nD,KAAKioD,GAAe,IAAM,IAAMA,EAAYltD,QAAQgvB,EAAO,QAGjFk+B,EAAYnhD,aACvB,IC3CIohD,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzvD,IAAjB0vD,EACH,OAAOA,EAAaltC,QAGrB,IAAIG,EAAS4sC,EAAyBE,GAAY,CACjD97C,GAAI87C,EACJE,QAAQ,EACRntC,QAAS,CAAC,GAUX,OANAotC,EAAoBH,GAAU/tD,KAAKihB,EAAOH,QAASG,EAAQA,EAAOH,QAASgtC,GAG3E7sC,EAAOgtC,QAAS,EAGThtC,EAAOH,OACf,CCzBAgtC,EAAoBrtC,EAAI,WACvB,GAA0B,iBAAf0tC,WAAyB,OAAOA,WAC3C,IACC,OAAOptD,MAAQ,IAAI6f,SAAS,cAAb,EAChB,CAAE,MAAOrgB,GACR,GAAsB,iBAAXpC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB2vD,EAAoBM,IAAOntC,IAC1BA,EAAOqO,MAAQ,GACVrO,EAAOotC,WAAUptC,EAAOotC,SAAW,IACjCptC,sBCAR,SAAgBqtC,EAAMC,KACpB,MAAMC,EAAS,IAAIC,KAAK,CAACC,KAAKC,UAAUL,EAAM,KAAM,KAC9CM,GAAM,IAAI7vD,MAAO8vD,cAAcC,OAAO,EAAG,IAEzCt5C,GAAO,IAAIzW,MAAO8vD,cAAcC,OAAO,GAAI,GAE3CC,EAAgB3wD,SAASM,cAAc,KAC7CqwD,EAAcC,KAAO7wD,OAAO8wD,IAAIC,gBAAgBV,GAChDO,EAAcI,SAAW,UAAUZ,KAAMK,KAAOp5C,SAChDu5C,EAAcxD,OACf,eCJD,MACM6D,EACJ,IAAIH,IAAI7wD,SAASixD,SAASL,MAAMM,aAAa78C,IAAI,OAAS,SACtD88C,EAAUnxD,SAASoxD,eAAe,WAClCC,EAAWrxD,SAASoxD,eAAe,aACnCE,EAAYtxD,SAASoxD,eAAe,cAGpC/uD,EAAQ,OAGRkvD,EAAQvxD,SAASoxD,eAAe,SAKtC,IAAIz7C,EAAO,EAGX,MAAMuD,EAAOo3C,KAAKkB,MC3BH,o3LD4BTC,EAASv4C,EAAKvX,OAEpBwvD,EAAQO,YAAc,GAAG/7C,EAAO,SAAS87C,YAEzCv4C,EAAKzK,OAAOyK,EAAKvX,OAASgU,EAAMA,GAEhC,IAAK,IAAIlU,EAAI,EAAGA,EAAIyX,EAAKvX,OAAQF,IAAK,CACpC,MAAMkwD,EAAQ3xD,SAASM,cAAc,MACrCqxD,EAAMC,UAAUh8C,IAAI,GAAGsD,EAAKzX,GAAGowD,OAC/BF,EAAMzD,YAAYluD,SAAS8xD,eAAe54C,EAAKzX,GAAG8sC,OAClDgjB,EAAMrD,YAAYyD,EACpB,CAGA,GAAGjwD,QAAQE,KACT5B,SAAS+xD,iBAAiB,cAC1B,SAAUlH,GAERxoD,EAAMysD,WAAWjE,GAEjBA,EAAc+G,UAAUh8C,IAAI,UAC9B,IAGF,IAAIo8C,EAAc,CAEhBC,KAAM,CACJjB,OAAQA,GAEV93C,KAAM,IAMR,SAASg5C,IACPF,EAAY94C,KAAKvD,GAAQ,CAEvB44B,KAAMgjB,EAAMY,iBAAiBC,UAM7BC,MAAO,GACPR,IAAKN,EAAMY,iBAAiBP,UAAU,GACtCU,WAAW,IAAI3xD,MAAO8vD,cACtB8B,MAAO58C,EAAO,GAIhBA,IACAw7C,EAAQO,YAAc,GAAG/7C,EAAO,SAAS87C,YAGzCF,EAAMY,iBAAiBP,UAAU94C,OAAO,WACxCy4C,EAAMY,iBAAiBr5C,QACzB,CAGAzW,EAAM0W,GAAG,YAAa5W,IACpB+vD,IACAF,EAAY94C,KAAKvD,EAAO,GAAG08C,MACQ,SAAjClwD,EAAEqrD,eAAegF,YAAyB,EAAI,EAGM,IAAlDxyD,SAAS+xD,iBAAiB,aAAapwD,SACzC8wD,EAAaT,EAAaA,EAAYC,KAAKjB,QAC3ChwD,YAAW,IAAOjB,OAAOkxD,SAASL,KAAO,kBAAmB,KAC9D,IAGF,MAAM8B,EAAiBvwD,IACrB+vD,IACAF,EAAY94C,KAAKvD,EAAO,GAAG08C,MAAQ,EAGmB,IAAlDryD,SAAS+xD,iBAAiB,aAAapwD,SACzC8wD,EAAaT,EAAaA,EAAYC,KAAKjB,QAC3ChwD,YAAW,IAAOjB,OAAOkxD,SAASL,KAAO,kBAAmB,KAC9D,EAGI+B,EAAkBxwD,IACtB+vD,IACAF,EAAY94C,KAAKvD,EAAO,GAAG08C,MAAQ,EAGmB,IAAlDryD,SAAS+xD,iBAAiB,aAAapwD,SACzC8wD,EAAaT,EAAaA,EAAYC,KAAKjB,QAC3ChwD,YAAW,IAAOjB,OAAOkxD,SAASL,KAAO,kBAAmB,KAC9D,EAMF5wD,SAAS8E,iBAAiB,WAAY3C,IAEtB,eADdA,EAAIA,GAAKpC,OAAOqW,OACVpQ,IACJ0sD,IACmB,eAAVvwD,EAAE6D,KACX2sD,GACF,IAGFtB,EAASvsD,iBAAiB,QAAS4tD,EAAe,CAAEE,SAAS,IAC7DtB,EAAUxsD,iBAAiB,QAAS6tD,EAAgB,CAAEC,SAAS","sources":["webpack://minimal-webpack-dev-server-babel-setup/./node_modules/hammerjs/hammer.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/lodash/lodash.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/performance-now/lib/performance-now.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/raf/index.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/rebound/rebound.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/sister/src/sister.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/swing/dist/Card.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/swing/dist/Direction.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/swing/dist/Stack.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/swing/dist/index.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/swing/dist/utilities.js","webpack://minimal-webpack-dev-server-babel-setup/./node_modules/vendor-prefix/index.js","webpack://minimal-webpack-dev-server-babel-setup/webpack/bootstrap","webpack://minimal-webpack-dev-server-babel-setup/webpack/runtime/global","webpack://minimal-webpack-dev-server-babel-setup/webpack/runtime/node module decorator","webpack://minimal-webpack-dev-server-babel-setup/./src/backend/downloadData.js","webpack://minimal-webpack-dev-server-babel-setup/./src/previc.js","webpack://minimal-webpack-dev-server-babel-setup/./src/backend/wordDataSelected.js"],"sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Rebound\n// =======\n// **Rebound** is a simple library that models Spring dynamics for the\n// purpose of driving physical animations.\n//\n// Origin\n// ------\n// [Rebound](http://facebook.github.io/rebound) was originally written\n// in Java to provide a lightweight physics system for\n// [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and\n// [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\n// on Android. It's now been adopted by several other Android\n// applications. This JavaScript port was written to provide a quick\n// way to demonstrate Rebound animations on the web for a\n// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then\n// the JavaScript version has been used to build some really nice interfaces.\n// Check out [brandonwalkin.com](http://brandonwalkin.com) for an\n// example.\n//\n// Overview\n// --------\n// The Library provides a SpringSystem for maintaining a set of Spring\n// objects and iterating those Springs through a physics solver loop\n// until equilibrium is achieved. The Spring class is the basic\n// animation driver provided by Rebound. By attaching a listener to\n// a Spring, you can observe its motion. The observer function is\n// notified of position changes on the spring as it solves for\n// equilibrium. These position updates can be mapped to an animation\n// range to drive animated property updates on your user interface\n// elements (translation, rotation, scale, etc).\n//\n// Example\n// -------\n// Here's a simple example. Pressing and releasing on the logo below\n// will cause it to scale up and down with a springy animation.\n//\n// <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\n//   <img\n//     src=\"http://facebook.github.io/rebound/images/rebound.png\"\n//     id=\"logo\"\n//   />\n// </div>\n// <script src=\"../rebound.min.js\"></script>\n// <script>\n//\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\n// }\n// var el = document.getElementById('logo');\n//\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// </script>\n//\n// Here's how it works.\n//\n// ```\n// // Get a reference to the logo element.\n// var el = document.getElementById('logo');\n//\n// // create a SpringSystem and a Spring with a bouncy config.\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n//\n// // Add a listener to the spring. Every time the physics\n// // solver updates the Spring's value onSpringUpdate will\n// // be called.\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil\n//                  .mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// // Listen for mouse down/up/out and toggle the\n// //springs endValue from 0 to 1.\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// // Helper for scaling an element with css transforms.\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' +\n//     val + ', ' + val + ', 1)';\n// }\n// ```\n\n(function() {\n  var rebound = {};\n  var util = rebound.util = {};\n  var concat = Array.prototype.concat;\n  var slice = Array.prototype.slice;\n\n  // Bind a function to a context object.\n  util.bind = function bind(func, context) {\n    var args = slice.call(arguments, 2);\n    return function() {\n      func.apply(context, concat.call(args, slice.call(arguments)));\n    };\n  };\n\n  // Add all the properties in the source to the target.\n  util.extend = function extend(target, source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n  };\n\n  // SpringSystem\n  // ------------\n  // **SpringSystem** is a set of Springs that all run on the same physics\n  // timing loop. To get started with a Rebound animation you first\n  // create a new SpringSystem and then add springs to it.\n  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\n    this._springRegistry = {};\n    this._activeSprings = [];\n    this.listeners = [];\n    this._idleSpringIndices = [];\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  };\n\n  util.extend(SpringSystem.prototype, {\n\n    _springRegistry: null,\n\n    _isIdle: true,\n\n    _lastTimeMillis: -1,\n\n    _activeSprings: null,\n\n    listeners: null,\n\n    _idleSpringIndices: null,\n\n    // A SpringSystem is iterated by a looper. The looper is responsible\n    // for executing each frame as the SpringSystem is resolved to idle.\n    // There are three types of Loopers described below AnimationLooper,\n    // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n    // the default as it is the most useful for common UI animations.\n    setLooper: function(looper) {\n      this.looper = looper;\n      looper.springSystem = this;\n    },\n\n    // Add a new spring to this SpringSystem. This Spring will now be solved for\n    // during the physics iteration loop. By default the spring will use the\n    // default Origami spring config with 40 tension and 7 friction, but you can\n    // also provide your own values here.\n    createSpring: function(tension, friction) {\n      var springConfig;\n      if (tension === undefined || friction === undefined) {\n        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n      } else {\n        springConfig =\n          SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n      }\n      return this.createSpringWithConfig(springConfig);\n    },\n\n    // Add a spring with a specified bounciness and speed. To replicate Origami\n    // compositions based on PopAnimation patches, use this factory method to\n    // create matching springs.\n    createSpringWithBouncinessAndSpeed: function(bounciness, speed) {\n      var springConfig;\n      if (bounciness === undefined || speed === undefined) {\n        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n      } else {\n        springConfig =\n          SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n      }\n      return this.createSpringWithConfig(springConfig);\n    },\n\n    // Add a spring with the provided SpringConfig.\n    createSpringWithConfig: function(springConfig) {\n      var spring = new Spring(this);\n      this.registerSpring(spring);\n      spring.setSpringConfig(springConfig);\n      return spring;\n    },\n\n    // You can check if a SpringSystem is idle or active by calling\n    // getIsIdle. If all of the Springs in the SpringSystem are at rest,\n    // i.e. the physics forces have reached equilibrium, then this\n    // method will return true.\n    getIsIdle: function() {\n      return this._isIdle;\n    },\n\n    // Retrieve a specific Spring from the SpringSystem by id. This\n    // can be useful for inspecting the state of a spring before\n    // or after an integration loop in the SpringSystem executes.\n    getSpringById: function (id) {\n      return this._springRegistry[id];\n    },\n\n    // Get a listing of all the springs registered with this\n    // SpringSystem.\n    getAllSprings: function() {\n      var vals = [];\n      for (var id in this._springRegistry) {\n        if (this._springRegistry.hasOwnProperty(id)) {\n          vals.push(this._springRegistry[id]);\n        }\n      }\n      return vals;\n    },\n\n    // registerSpring is called automatically as soon as you create\n    // a Spring with SpringSystem#createSpring. This method sets the\n    // spring up in the registry so that it can be solved in the\n    // solver loop.\n    registerSpring: function(spring) {\n      this._springRegistry[spring.getId()] = spring;\n    },\n\n    // Deregister a spring with this SpringSystem. The SpringSystem will\n    // no longer consider this Spring during its integration loop once\n    // this is called. This is normally done automatically for you when\n    // you call Spring#destroy.\n    deregisterSpring: function(spring) {\n      removeFirst(this._activeSprings, spring);\n      delete this._springRegistry[spring.getId()];\n    },\n\n    advance: function(time, deltaTime) {\n      while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();\n      for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n        var spring = this._activeSprings[i];\n        if (spring.systemShouldAdvance()) {\n          spring.advance(time / 1000.0, deltaTime / 1000.0);\n        } else {\n          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n        }\n      }\n      while(this._idleSpringIndices.length > 0) {\n        var idx = this._idleSpringIndices.pop();\n        idx >= 0 && this._activeSprings.splice(idx, 1);\n      }\n    },\n\n    // This is our main solver loop called to move the simulation\n    // forward through time. Before each pass in the solver loop\n    // onBeforeIntegrate is called on an any listeners that have\n    // registered themeselves with the SpringSystem. This gives you\n    // an opportunity to apply any constraints or adjustments to\n    // the springs that should be enforced before each iteration\n    // loop. Next the advance method is called to move each Spring in\n    // the systemShouldAdvance forward to the current time. After the\n    // integration step runs in advance, onAfterIntegrate is called\n    // on any listeners that have registered themselves with the\n    // SpringSystem. This gives you an opportunity to run any post\n    // integration constraints or adjustments on the Springs in the\n    // SpringSystem.\n    loop: function(currentTimeMillis) {\n      var listener;\n      if (this._lastTimeMillis === -1) {\n        this._lastTimeMillis = currentTimeMillis -1;\n      }\n      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n      this._lastTimeMillis = currentTimeMillis;\n\n      var i = 0, len = this.listeners.length;\n      for (i = 0; i < len; i++) {\n        listener = this.listeners[i];\n        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n      }\n\n      this.advance(currentTimeMillis, ellapsedMillis);\n      if (this._activeSprings.length === 0) {\n        this._isIdle = true;\n        this._lastTimeMillis = -1;\n      }\n\n      for (i = 0; i < len; i++) {\n        listener = this.listeners[i];\n        listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n      }\n\n      if (!this._isIdle) {\n        this.looper.run();\n      }\n    },\n\n    // activateSpring is used to notify the SpringSystem that a Spring\n    // has become displaced. The system responds by starting its solver\n    // loop up if it is currently idle.\n    activateSpring: function(springId) {\n      var spring = this._springRegistry[springId];\n      if (this._activeSprings.indexOf(spring) == -1) {\n        this._activeSprings.push(spring);\n      }\n      if (this.getIsIdle()) {\n        this._isIdle = false;\n        this.looper.run();\n      }\n    },\n\n    // Add a listener to the SpringSystem so that you can receive\n    // before/after integration notifications allowing Springs to be\n    // constrained or adjusted.\n    addListener: function(listener) {\n      this.listeners.push(listener);\n    },\n\n    // Remove a previously added listener on the SpringSystem.\n    removeListener: function(listener) {\n      removeFirst(this.listeners, listener);\n    },\n\n    // Remove all previously added listeners on the SpringSystem.\n    removeAllListeners: function() {\n      this.listeners = [];\n    }\n\n  });\n\n  // Spring\n  // ------\n  // **Spring** provides a model of a classical spring acting to\n  // resolve a body to equilibrium. Springs have configurable\n  // tension which is a force multipler on the displacement of the\n  // spring from its rest point or `endValue` as defined by [Hooke's\n  // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n  // configurable friction, which ensures that they do not oscillate\n  // infinitely. When a Spring is displaced by updating it's resting\n  // or `currentValue`, the SpringSystems that contain that Spring\n  // will automatically start looping to solve for equilibrium. As each\n  // timestep passes, `SpringListener` objects attached to the Spring\n  // will be notified of the updates providing a way to drive an\n  // animation off of the spring's resolution curve.\n  var Spring = rebound.Spring = function Spring(springSystem) {\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n    this.listeners = [];\n    this._currentState = new PhysicsState();\n    this._previousState = new PhysicsState();\n    this._tempState = new PhysicsState();\n  };\n\n  util.extend(Spring, {\n    _ID: 0,\n\n    MAX_DELTA_TIME_SEC: 0.064,\n\n    SOLVER_TIMESTEP_SEC: 0.001\n\n  });\n\n  util.extend(Spring.prototype, {\n\n    _id: 0,\n\n    _springConfig: null,\n\n    _overshootClampingEnabled: false,\n\n    _currentState: null,\n\n    _previousState: null,\n\n    _tempState: null,\n\n    _startValue: 0,\n\n    _endValue: 0,\n\n    _wasAtRest: true,\n\n    _restSpeedThreshold: 0.001,\n\n    _displacementFromRestThreshold: 0.001,\n\n    listeners: null,\n\n    _timeAccumulator: 0,\n\n    _springSystem: null,\n\n    // Remove a Spring from simulation and clear its listeners.\n    destroy: function() {\n      this.listeners = [];\n      this.frames = [];\n      this._springSystem.deregisterSpring(this);\n    },\n\n    // Get the id of the spring, which can be used to retrieve it from\n    // the SpringSystems it participates in later.\n    getId: function() {\n      return this._id;\n    },\n\n    // Set the configuration values for this Spring. A SpringConfig\n    // contains the tension and friction values used to solve for the\n    // equilibrium of the Spring in the physics loop.\n    setSpringConfig: function(springConfig) {\n      this._springConfig = springConfig;\n      return this;\n    },\n\n    // Retrieve the SpringConfig used by this Spring.\n    getSpringConfig: function() {\n      return this._springConfig;\n    },\n\n    // Set the current position of this Spring. Listeners will be updated\n    // with this value immediately. If the rest or `endValue` is not\n    // updated to match this value, then the spring will be dispalced and\n    // the SpringSystem will start to loop to restore the spring to the\n    // `endValue`.\n    //\n    // A common pattern is to move a Spring around without animation by\n    // calling.\n    //\n    // ```\n    // spring.setCurrentValue(n).setAtRest();\n    // ```\n    //\n    // This moves the Spring to a new position `n`, sets the endValue\n    // to `n`, and removes any velocity from the `Spring`. By doing\n    // this you can allow the `SpringListener` to manage the position\n    // of UI elements attached to the spring even when moving without\n    // animation. For example, when dragging an element you can\n    // update the position of an attached view through a spring\n    // by calling `spring.setCurrentValue(x)`. When\n    // the gesture ends you can update the Springs\n    // velocity and endValue\n    // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n    // to cause it to naturally animate the UI element to the resting\n    // position taking into account existing velocity. The codepaths for\n    // synchronous movement and spring driven animation can\n    // be unified using this technique.\n    setCurrentValue: function(currentValue, skipSetAtRest) {\n      this._startValue = currentValue;\n      this._currentState.position = currentValue;\n      if (!skipSetAtRest) {\n        this.setAtRest();\n      }\n      this.notifyPositionUpdated(false, false);\n      return this;\n    },\n\n    // Get the position that the most recent animation started at. This\n    // can be useful for determining the number off oscillations that\n    // have occurred.\n    getStartValue: function() {\n      return this._startValue;\n    },\n\n    // Retrieve the current value of the Spring.\n    getCurrentValue: function() {\n      return this._currentState.position;\n    },\n\n    // Get the absolute distance of the Spring from it's resting endValue\n    // position.\n    getCurrentDisplacementDistance: function() {\n      return this.getDisplacementDistanceForState(this._currentState);\n    },\n\n    getDisplacementDistanceForState: function(state) {\n      return Math.abs(this._endValue - state.position);\n    },\n\n    // Set the endValue or resting position of the spring. If this\n    // value is different than the current value, the SpringSystem will\n    // be notified and will begin running its solver loop to resolve\n    // the Spring to equilibrium. Any listeners that are registered\n    // for onSpringEndStateChange will also be notified of this update\n    // immediately.\n    setEndValue: function(endValue) {\n      if (this._endValue == endValue && this.isAtRest())  {\n        return this;\n      }\n      this._startValue = this.getCurrentValue();\n      this._endValue = endValue;\n      this._springSystem.activateSpring(this.getId());\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        var onChange = listener.onSpringEndStateChange;\n        onChange && onChange(this);\n      }\n      return this;\n    },\n\n    // Retrieve the endValue or resting position of this spring.\n    getEndValue: function() {\n      return this._endValue;\n    },\n\n    // Set the current velocity of the Spring. As previously mentioned,\n    // this can be useful when you are performing a direct manipulation\n    // gesture. When a UI element is released you may call setVelocity\n    // on its animation Spring so that the Spring continues with the\n    // same velocity as the gesture ended with. The friction, tension,\n    // and displacement of the Spring will then govern its motion to\n    // return to rest on a natural feeling curve.\n    setVelocity: function(velocity) {\n      if (velocity === this._currentState.velocity) {\n        return this;\n      }\n      this._currentState.velocity = velocity;\n      this._springSystem.activateSpring(this.getId());\n      return this;\n    },\n\n    // Get the current velocity of the Spring.\n    getVelocity: function() {\n      return this._currentState.velocity;\n    },\n\n    // Set a threshold value for the movement speed of the Spring below\n    // which it will be considered to be not moving or resting.\n    setRestSpeedThreshold: function(restSpeedThreshold) {\n      this._restSpeedThreshold = restSpeedThreshold;\n      return this;\n    },\n\n    // Retrieve the rest speed threshold for this Spring.\n    getRestSpeedThreshold: function() {\n      return this._restSpeedThreshold;\n    },\n\n    // Set a threshold value for displacement below which the Spring\n    // will be considered to be not displaced i.e. at its resting\n    // `endValue`.\n    setRestDisplacementThreshold: function(displacementFromRestThreshold) {\n      this._displacementFromRestThreshold = displacementFromRestThreshold;\n    },\n\n    // Retrieve the rest displacement threshold for this spring.\n    getRestDisplacementThreshold: function() {\n      return this._displacementFromRestThreshold;\n    },\n\n    // Enable overshoot clamping. This means that the Spring will stop\n    // immediately when it reaches its resting position regardless of\n    // any existing momentum it may have. This can be useful for certain\n    // types of animations that should not oscillate such as a scale\n    // down to 0 or alpha fade.\n    setOvershootClampingEnabled: function(enabled) {\n      this._overshootClampingEnabled = enabled;\n      return this;\n    },\n\n    // Check if overshoot clamping is enabled for this spring.\n    isOvershootClampingEnabled: function() {\n      return this._overshootClampingEnabled;\n    },\n\n    // Check if the Spring has gone past its end point by comparing\n    // the direction it was moving in when it started to the current\n    // position and end value.\n    isOvershooting: function() {\n      var start = this._startValue;\n      var end = this._endValue;\n      return this._springConfig.tension > 0 &&\n       ((start < end && this.getCurrentValue() > end) ||\n       (start > end && this.getCurrentValue() < end));\n    },\n\n    // Spring.advance is the main solver method for the Spring. It takes\n    // the current time and delta since the last time step and performs\n    // an RK4 integration to get the new position and velocity state\n    // for the Spring based on the tension, friction, velocity, and\n    // displacement of the Spring.\n    advance: function(time, realDeltaTime) {\n      var isAtRest = this.isAtRest();\n\n      if (isAtRest && this._wasAtRest) {\n        return;\n      }\n\n      var adjustedDeltaTime = realDeltaTime;\n      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n      }\n\n      this._timeAccumulator += adjustedDeltaTime;\n\n      var tension = this._springConfig.tension,\n          friction = this._springConfig.friction,\n\n          position = this._currentState.position,\n          velocity = this._currentState.velocity,\n          tempPosition = this._tempState.position,\n          tempVelocity = this._tempState.velocity,\n\n          aVelocity, aAcceleration,\n          bVelocity, bAcceleration,\n          cVelocity, cAcceleration,\n          dVelocity, dAcceleration,\n\n          dxdt, dvdt;\n\n      while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n\n        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n          this._previousState.position = position;\n          this._previousState.velocity = velocity;\n        }\n\n        aVelocity = velocity;\n        aAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * velocity;\n\n        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        bVelocity = tempVelocity;\n        bAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        cVelocity = tempVelocity;\n        cAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        dVelocity = tempVelocity;\n        dAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        dxdt =\n          1.0/6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n        dvdt = 1.0/6.0 * (\n          aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration\n        );\n\n        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n      }\n\n      this._tempState.position = tempPosition;\n      this._tempState.velocity = tempVelocity;\n\n      this._currentState.position = position;\n      this._currentState.velocity = velocity;\n\n      if (this._timeAccumulator > 0) {\n        this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n      }\n\n      if (this.isAtRest() ||\n          this._overshootClampingEnabled && this.isOvershooting()) {\n\n        if (this._springConfig.tension > 0) {\n          this._startValue = this._endValue;\n          this._currentState.position = this._endValue;\n        } else {\n          this._endValue = this._currentState.position;\n          this._startValue = this._endValue;\n        }\n        this.setVelocity(0);\n        isAtRest = true;\n      }\n\n      var notifyActivate = false;\n      if (this._wasAtRest) {\n        this._wasAtRest = false;\n        notifyActivate = true;\n      }\n\n      var notifyAtRest = false;\n      if (isAtRest) {\n        this._wasAtRest = true;\n        notifyAtRest = true;\n      }\n\n      this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n    },\n\n    notifyPositionUpdated: function(notifyActivate, notifyAtRest) {\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        if (notifyActivate && listener.onSpringActivate) {\n          listener.onSpringActivate(this);\n        }\n\n        if (listener.onSpringUpdate) {\n          listener.onSpringUpdate(this);\n        }\n\n        if (notifyAtRest && listener.onSpringAtRest) {\n          listener.onSpringAtRest(this);\n        }\n      }\n    },\n\n\n    // Check if the SpringSystem should advance. Springs are advanced\n    // a final frame after they reach equilibrium to ensure that the\n    // currentValue is exactly the requested endValue regardless of the\n    // displacement threshold.\n    systemShouldAdvance: function() {\n      return !this.isAtRest() || !this.wasAtRest();\n    },\n\n    wasAtRest: function() {\n      return this._wasAtRest;\n    },\n\n    // Check if the Spring is atRest meaning that it's currentValue and\n    // endValue are the same and that it has no velocity. The previously\n    // described thresholds for speed and displacement define the bounds\n    // of this equivalence check. If the Spring has 0 tension, then it will\n    // be considered at rest whenever its absolute velocity drops below the\n    // restSpeedThreshold.\n    isAtRest: function() {\n      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n        (this.getDisplacementDistanceForState(this._currentState) <=\n          this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0);\n    },\n\n    // Force the spring to be at rest at its current position. As\n    // described in the documentation for setCurrentValue, this method\n    // makes it easy to do synchronous non-animated updates to ui\n    // elements that are attached to springs via SpringListeners.\n    setAtRest: function() {\n      this._endValue = this._currentState.position;\n      this._tempState.position = this._currentState.position;\n      this._currentState.velocity = 0;\n      return this;\n    },\n\n    _interpolate: function(alpha) {\n      this._currentState.position = this._currentState.position *\n        alpha + this._previousState.position * (1 - alpha);\n      this._currentState.velocity = this._currentState.velocity *\n        alpha + this._previousState.velocity * (1 - alpha);\n    },\n\n    getListeners: function() {\n      return this.listeners;\n    },\n\n    addListener: function(newListener) {\n      this.listeners.push(newListener);\n      return this;\n    },\n\n    removeListener: function(listenerToRemove) {\n      removeFirst(this.listeners, listenerToRemove);\n      return this;\n    },\n\n    removeAllListeners: function() {\n      this.listeners = [];\n      return this;\n    },\n\n    currentValueIsApproximately: function(value) {\n      return Math.abs(this.getCurrentValue() - value) <=\n        this.getRestDisplacementThreshold();\n    }\n\n  });\n\n  // PhysicsState\n  // ------------\n  // **PhysicsState** consists of a position and velocity. A Spring uses\n  // this internally to keep track of its current and prior position and\n  // velocity values.\n  var PhysicsState = function PhysicsState() {};\n\n  util.extend(PhysicsState.prototype, {\n    position: 0,\n    velocity: 0\n  });\n\n  // SpringConfig\n  // ------------\n  // **SpringConfig** maintains a set of tension and friction constants\n  // for a Spring. You can use fromOrigamiTensionAndFriction to convert\n  // values from the [Origami](http://facebook.github.io/origami/)\n  // design tool directly to Rebound spring constants.\n  var SpringConfig = rebound.SpringConfig =\n    function SpringConfig(tension, friction) {\n      this.tension = tension;\n      this.friction = friction;\n    };\n\n  // Loopers\n  // -------\n  // **AnimationLooper** plays each frame of the SpringSystem on animation\n  // timing loop. This is the default type of looper for a new spring system\n  // as it is the most common when developing UI.\n  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\n    this.springSystem = null;\n    var _this = this;\n    var _run = function() {\n      _this.springSystem.loop(Date.now());\n    };\n\n    this.run = function() {\n      util.onFrame(_run);\n    };\n  };\n\n  // **SimulationLooper** resolves the SpringSystem to a resting state in a\n  // tight and blocking loop. This is useful for synchronously generating\n  // pre-recorded animations that can then be played on a timing loop later.\n  // Sometimes this lead to better performance to pre-record a single spring\n  // curve and use it to drive many animations; however, it can make dynamic\n  // response to user input a bit trickier to implement.\n  rebound.SimulationLooper = function SimulationLooper(timestep) {\n    this.springSystem = null;\n    var time = 0;\n    var running = false;\n    timestep=timestep || 16.667;\n\n    this.run = function() {\n      if (running) {\n        return;\n      }\n      running = true;\n      while(!this.springSystem.getIsIdle()) {\n        this.springSystem.loop(time+=timestep);\n      }\n      running = false;\n    };\n  };\n\n  // **SteppingSimulationLooper** resolves the SpringSystem one step at a\n  // time controlled by an outside loop. This is useful for testing and\n  // verifying the behavior of a SpringSystem or if you want to control your own\n  // timing loop for some reason e.g. slowing down or speeding up the\n  // simulation.\n  rebound.SteppingSimulationLooper = function(timestep) {\n    this.springSystem = null;\n    var time = 0;\n\n    // this.run is NOOP'd here to allow control from the outside using\n    // this.step.\n    this.run = function(){};\n\n    // Perform one step toward resolving the SpringSystem.\n    this.step = function(timestep) {\n      this.springSystem.loop(time+=timestep);\n    };\n  };\n\n  // Math for converting from\n  // [Origami](http://facebook.github.io/origami/) to\n  // [Rebound](http://facebook.github.io/rebound).\n  // You mostly don't need to worry about this, just use\n  // SpringConfig.fromOrigamiTensionAndFriction(v, v);\n  var OrigamiValueConverter = rebound.OrigamiValueConverter = {\n    tensionFromOrigamiValue: function(oValue) {\n      return (oValue - 30.0) * 3.62 + 194.0;\n    },\n\n    origamiValueFromTension: function(tension) {\n      return (tension - 194.0) / 3.62 + 30.0;\n    },\n\n    frictionFromOrigamiValue: function(oValue) {\n      return (oValue - 8.0) * 3.0 + 25.0;\n    },\n\n    origamiFromFriction: function(friction) {\n      return (friction - 25.0) / 3.0 + 8.0;\n    }\n  };\n\n  // BouncyConversion provides math for converting from Origami PopAnimation\n  // config values to regular Origami tension and friction values. If you are\n  // trying to replicate prototypes made with PopAnimation patches in Origami,\n  // then you should create your springs with\n  // SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n  // internally to create a spring to match the provided PopAnimation\n  // configuration from Origami.\n  var BouncyConversion = rebound.BouncyConversion = function(bounciness, speed){\n    this.bounciness = bounciness;\n    this.speed = speed;\n    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n    b = this.projectNormal(b, 0.0, 0.8);\n    var s = this.normalize(speed / 1.7, 0, 20.0);\n    this.bouncyTension = this.projectNormal(s, 0.5, 200)\n    this.bouncyFriction = this.quadraticOutInterpolation(\n      b,\n      this.b3Nobounce(this.bouncyTension),\n      0.01);\n  }\n\n  util.extend(BouncyConversion.prototype, {\n\n    normalize: function(value, startValue, endValue) {\n      return (value - startValue) / (endValue - startValue);\n    },\n\n    projectNormal: function(n, start, end) {\n      return start + (n * (end - start));\n    },\n\n    linearInterpolation: function(t, start, end) {\n      return t * end + (1.0 - t) * start;\n    },\n\n    quadraticOutInterpolation: function(t, start, end) {\n      return this.linearInterpolation(2*t - t*t, start, end);\n    },\n\n    b3Friction1: function(x) {\n      return (0.0007 * Math.pow(x, 3)) -\n        (0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;\n    },\n\n    b3Friction2: function(x) {\n      return (0.000044 * Math.pow(x, 3)) -\n        (0.006 * Math.pow(x, 2)) + 0.36 * x + 2.;\n    },\n\n    b3Friction3: function(x) {\n      return (0.00000045 * Math.pow(x, 3)) -\n        (0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;\n    },\n\n    b3Nobounce: function(tension) {\n      var friction = 0;\n      if (tension <= 18) {\n        friction = this.b3Friction1(tension);\n      } else if (tension > 18 && tension <= 44) {\n        friction = this.b3Friction2(tension);\n      } else {\n        friction = this.b3Friction3(tension);\n      }\n      return friction;\n    }\n  });\n\n  util.extend(SpringConfig, {\n    // Convert an origami Spring tension and friction to Rebound spring\n    // constants. If you are prototyping a design with Origami, this\n    // makes it easy to make your springs behave exactly the same in\n    // Rebound.\n    fromOrigamiTensionAndFriction: function(tension, friction) {\n      return new SpringConfig(\n        OrigamiValueConverter.tensionFromOrigamiValue(tension),\n        OrigamiValueConverter.frictionFromOrigamiValue(friction));\n    },\n\n    // Convert an origami PopAnimation Spring bounciness and speed to Rebound\n    // spring constants. If you are using PopAnimation patches in Origami, this\n    // utility will provide springs that match your prototype.\n    fromBouncinessAndSpeed: function(bounciness, speed) {\n      var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);\n      return this.fromOrigamiTensionAndFriction(\n        bouncyConversion.bouncyTension,\n        bouncyConversion.bouncyFriction);\n    },\n\n    // Create a SpringConfig with no tension or a coasting spring with some\n    // amount of Friction so that it does not coast infininitely.\n    coastingConfigWithOrigamiFriction: function(friction) {\n      return new SpringConfig(\n        0,\n        OrigamiValueConverter.frictionFromOrigamiValue(friction)\n      );\n    }\n  });\n\n  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG =\n    SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n  util.extend(SpringConfig.prototype, {friction: 0, tension: 0});\n\n  // Here are a couple of function to convert colors between hex codes and RGB\n  // component values. These are handy when performing color\n  // tweening animations.\n  var colorCache = {};\n  util.hexToRGB = function(color) {\n    if (colorCache[color]) {\n      return colorCache[color];\n    }\n    color = color.replace('#', '');\n    if (color.length === 3) {\n      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    var parts = color.match(/.{2}/g);\n\n    var ret = {\n      r: parseInt(parts[0], 16),\n      g: parseInt(parts[1], 16),\n      b: parseInt(parts[2], 16)\n    };\n\n    colorCache[color] = ret;\n    return ret;\n  };\n\n  util.rgbToHex = function(r, g, b) {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n    r = r.length < 2 ? '0' + r : r;\n    g = g.length < 2 ? '0' + g : g;\n    b = b.length < 2 ? '0' + b : b;\n    return '#' + r + g + b;\n  };\n\n  var MathUtil = rebound.MathUtil = {\n    // This helper function does a linear interpolation of a value from\n    // one range to another. This can be very useful for converting the\n    // motion of a Spring to a range of UI property values. For example a\n    // spring moving from position 0 to 1 could be interpolated to move a\n    // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n    // position of the `Spring` just needs to be run through this method\n    // taking its input range in the _from_ parameters with the property\n    // animation range in the _to_ parameters.\n    mapValueInRange: function(value, fromLow, fromHigh, toLow, toHigh) {\n      var fromRangeSize = fromHigh - fromLow;\n      var toRangeSize = toHigh - toLow;\n      var valueScale = (value - fromLow) / fromRangeSize;\n      return toLow + (valueScale * toRangeSize);\n    },\n\n    // Interpolate two hex colors in a 0 - 1 range or optionally provide a\n    // custom range with fromLow,fromHight. The output will be in hex by default\n    // unless asRGB is true in which case it will be returned as an rgb string.\n    interpolateColor:\n      function(val, startColor, endColor, fromLow, fromHigh, asRGB) {\n      fromLow = fromLow === undefined ? 0 : fromLow;\n      fromHigh = fromHigh === undefined ? 1 : fromHigh;\n      startColor = util.hexToRGB(startColor);\n      endColor = util.hexToRGB(endColor);\n      var r = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r)\n      );\n      var g = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g)\n      );\n      var b = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b)\n      );\n      if (asRGB) {\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n      } else {\n        return util.rgbToHex(r, g, b);\n      }\n    },\n\n    degreesToRadians: function(deg) {\n      return (deg * Math.PI) / 180;\n    },\n\n    radiansToDegrees: function(rad) {\n      return (rad * 180) / Math.PI;\n    }\n\n  }\n\n  util.extend(util, MathUtil);\n\n\n  // Utilities\n  // ---------\n  // Here are a few useful JavaScript utilities.\n\n  // Lop off the first occurence of the reference in the Array.\n  function removeFirst(array, item) {\n    var idx = array.indexOf(item);\n    idx != -1 && array.splice(idx, 1);\n  }\n\n  var _onFrame;\n  if (typeof window !== 'undefined') {\n    _onFrame = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n  }\n  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n    _onFrame = setImmediate;\n  }\n\n  // Cross browser/node timer functions.\n  util.onFrame = function onFrame(func) {\n    return _onFrame(func);\n  };\n\n  // Export the public api using exports for common js or the window for\n  // normal browser inclusion.\n  if (typeof exports != 'undefined') {\n    util.extend(exports, rebound);\n  } else if (typeof window != 'undefined') {\n    window.rebound = rebound;\n  }\n})();\n\n\n// Legal Stuff\n// -----------\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n","'use strict';\n\nvar Sister;\n\n/**\n* @link https://github.com/gajus/sister for the canonical source repository\n* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause\n*/\nSister = function () {\n    var sister = {},\n        events = {};\n\n    /**\n     * @name handler\n     * @function\n     * @param {Object} data Event data.\n     */\n\n    /**\n     * @param {String} name Event name.\n     * @param {handler} handler\n     * @return {listener}\n     */\n    sister.on = function (name, handler) {\n        var listener = {name: name, handler: handler};\n        events[name] = events[name] || [];\n        events[name].unshift(listener);\n        return listener;\n    };\n\n    /**\n     * @param {listener}\n     */\n    sister.off = function (listener) {\n        var index = events[listener.name].indexOf(listener);\n\n        if (index !== -1) {\n            events[listener.name].splice(index, 1);\n        }\n    };\n\n    /**\n     * @param {String} name Event name.\n     * @param {Object} data Event data.\n     */\n    sister.trigger = function (name, data) {\n        var listeners = events[name],\n            i;\n\n        if (listeners) {\n            i = listeners.length;\n            while (i--) {\n                listeners[i].handler(data);\n            }\n        }\n    };\n\n    return sister;\n};\n\nmodule.exports = Sister;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _hammerjs = require('hammerjs');\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _rebound = require('rebound');\n\nvar _rebound2 = _interopRequireDefault(_rebound);\n\nvar _vendorPrefix = require('vendor-prefix');\n\nvar _vendorPrefix2 = _interopRequireDefault(_vendorPrefix);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _Direction = require('./Direction');\n\nvar _Direction2 = _interopRequireDefault(_Direction);\n\nvar _utilities = require('./utilities');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {number} fromX\n * @param {number} fromY\n * @param {Direction[]} allowedDirections\n * @returns {Direction[]} computed direction\n */\nvar computeDirection = function computeDirection(fromX, fromY, allowedDirections) {\n  var isHorizontal = Math.abs(fromX) > Math.abs(fromY);\n\n  var isLeftDirection = fromX < 0 ? _Direction2.default.LEFT : _Direction2.default.RIGHT;\n  var isUpDirection = fromY < 0 ? _Direction2.default.UP : _Direction2.default.DOWN;\n\n  var direction = isHorizontal ? isLeftDirection : isUpDirection;\n\n  if (allowedDirections.indexOf(direction) === -1) {\n    return _Direction2.default.INVALID;\n  }\n\n  return direction;\n};\n\n/**\n * @param {Stack} stack\n * @param {HTMLElement} targetElement\n * @param {boolean} prepend\n * @returns {Object} An instance of Card.\n */\nvar Card = function Card(stack, targetElement, prepend) {\n  var card = void 0;\n  var config = void 0;\n  var currentX = void 0;\n  var currentY = void 0;\n  var doMove = void 0;\n  var eventEmitter = void 0;\n  var isDraging = void 0;\n  var isPanning = void 0;\n  var lastThrow = void 0;\n  var lastTranslate = void 0;\n  var lastX = void 0;\n  var lastY = void 0;\n  var mc = void 0;\n  var _onSpringUpdate = void 0;\n  var springSystem = void 0;\n  var springThrowIn = void 0;\n  var springThrowOut = void 0;\n  var throwDirectionToEventName = void 0;\n  var throwOutDistance = void 0;\n  var throwWhere = void 0;\n  var appendedDuringMouseDown = void 0;\n\n  var construct = function construct() {\n    card = {};\n    config = Card.makeConfig(stack.getConfig());\n    eventEmitter = (0, _sister2.default)();\n    springSystem = stack.getSpringSystem();\n    springThrowIn = springSystem.createSpring(250, 10);\n    springThrowOut = springSystem.createSpring(500, 20);\n    lastThrow = {};\n    lastTranslate = {\n      coordinateX: 0,\n      coordinateY: 0\n    };\n\n    /* Mapping directions to event names */\n    throwDirectionToEventName = {};\n    throwDirectionToEventName[_Direction2.default.LEFT] = 'throwoutleft';\n    throwDirectionToEventName[_Direction2.default.RIGHT] = 'throwoutright';\n    throwDirectionToEventName[_Direction2.default.UP] = 'throwoutup';\n    throwDirectionToEventName[_Direction2.default.DOWN] = 'throwoutdown';\n\n    springThrowIn.setRestSpeedThreshold(0.05);\n    springThrowIn.setRestDisplacementThreshold(0.05);\n\n    springThrowOut.setRestSpeedThreshold(0.05);\n    springThrowOut.setRestDisplacementThreshold(0.05);\n\n    throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);\n\n    mc = new _hammerjs2.default.Manager(targetElement, {\n      recognizers: [[_hammerjs2.default.Pan, {\n        threshold: 2\n      }]]\n    });\n\n    if (prepend) {\n      Card.prependToParent(targetElement);\n    } else {\n      Card.appendToParent(targetElement);\n    }\n\n    eventEmitter.on('panstart', function () {\n      Card.appendToParent(targetElement);\n\n      eventEmitter.trigger('dragstart', {\n        target: targetElement\n      });\n\n      currentX = 0;\n      currentY = 0;\n\n      isDraging = true;\n\n      (function animation() {\n        if (isDraging) {\n          doMove();\n\n          (0, _raf2.default)(animation);\n        }\n      })();\n    });\n\n    eventEmitter.on('panmove', function (event) {\n      currentX = event.deltaX;\n      currentY = event.deltaY;\n    });\n\n    eventEmitter.on('panend', function (event) {\n      isDraging = false;\n\n      var coordinateX = lastTranslate.coordinateX + event.deltaX;\n      var coordinateY = lastTranslate.coordinateY + event.deltaY;\n\n      var isThrowOut = config.isThrowOut(coordinateX, coordinateY, targetElement, config.throwOutConfidence(coordinateX, coordinateY, targetElement));\n\n      // Not really sure about computing direction here and filtering on directions here.\n      // It adds more logic. Any suggestion will be appreciated.\n      var direction = computeDirection(coordinateX, coordinateY, config.allowedDirections);\n\n      if (isThrowOut && direction !== _Direction2.default.INVALID) {\n        card.throwOut(coordinateX, coordinateY, direction);\n      } else {\n        card.throwIn(coordinateX, coordinateY, direction);\n      }\n\n      eventEmitter.trigger('dragend', {\n        target: targetElement\n      });\n    });\n\n    // \"mousedown\" event fires late on touch enabled devices, thus listening\n    // to the touchstart event for touch enabled devices and mousedown otherwise.\n    if ((0, _utilities.isTouchDevice)()) {\n      targetElement.addEventListener('touchstart', function () {\n        eventEmitter.trigger('panstart');\n      });\n\n      targetElement.addEventListener('touchend', function () {\n        if (isDraging && !isPanning) {\n          eventEmitter.trigger('dragend', {\n            target: targetElement\n          });\n        }\n      });\n\n      // Disable scrolling while dragging the element on the touch enabled devices.\n      // @see http://stackoverflow.com/a/12090055/368691\n      (function () {\n        var dragging = void 0;\n\n        targetElement.addEventListener('touchstart', function () {\n          dragging = true;\n        });\n\n        targetElement.addEventListener('touchend', function () {\n          dragging = false;\n        });\n\n        global.addEventListener('touchmove', function (event) {\n          if (dragging) {\n            event.preventDefault();\n          }\n        });\n      })();\n    } else {\n      targetElement.addEventListener('mousedown', function () {\n        appendedDuringMouseDown = Card.appendToParent(targetElement) || appendedDuringMouseDown;\n        eventEmitter.trigger('panstart');\n      });\n\n      targetElement.addEventListener('mouseup', function () {\n        if (appendedDuringMouseDown) {\n          targetElement.click();\n          appendedDuringMouseDown = false;\n        }\n\n        if (isDraging && !isPanning) {\n          eventEmitter.trigger('dragend', {\n            target: targetElement\n          });\n        }\n      });\n    }\n\n    mc.on('panstart', function (event) {\n      isPanning = true;\n      eventEmitter.trigger('panstart', event);\n    });\n\n    mc.on('panmove', function (event) {\n      eventEmitter.trigger('panmove', event);\n    });\n\n    mc.on('panend', function (event) {\n      isPanning = false;\n      eventEmitter.trigger('panend', event);\n    });\n\n    springThrowIn.addListener({\n      onSpringAtRest: function onSpringAtRest() {\n        eventEmitter.trigger('throwinend', {\n          target: targetElement\n        });\n      },\n      onSpringUpdate: function onSpringUpdate(spring) {\n        var value = spring.getCurrentValue();\n        var coordianteX = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0);\n        var coordianteY = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);\n\n        _onSpringUpdate(coordianteX, coordianteY);\n      }\n    });\n\n    springThrowOut.addListener({\n      onSpringAtRest: function onSpringAtRest() {\n        eventEmitter.trigger('throwoutend', {\n          target: targetElement\n        });\n      },\n      onSpringUpdate: function onSpringUpdate(spring) {\n        var value = spring.getCurrentValue();\n\n        var coordianteX = void 0;\n        var coordianteY = void 0;\n        var directionFactor = void 0;\n\n        if (lastThrow.direction === _Direction2.default.RIGHT || lastThrow.direction === _Direction2.default.LEFT) {\n          directionFactor = lastThrow.direction === _Direction2.default.RIGHT ? 1 : -1;\n          coordianteX = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * directionFactor);\n          coordianteY = lastThrow.fromY;\n        } else if (lastThrow.direction === _Direction2.default.UP || lastThrow.direction === _Direction2.default.DOWN) {\n          directionFactor = lastThrow.direction === _Direction2.default.DOWN ? 1 : -1;\n          coordianteX = lastThrow.fromX;\n          coordianteY = _rebound2.default.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, throwOutDistance * directionFactor);\n        }\n\n        _onSpringUpdate(coordianteX, coordianteY);\n      }\n    });\n\n    /**\n     * Transforms card position based on the current environment variables.\n     *\n     * @returns {undefined}\n     */\n    doMove = function doMove() {\n      if (currentX === lastX && currentY === lastY) {\n        return;\n      }\n\n      lastX = currentX;\n      lastY = currentY;\n\n      var coordinateX = lastTranslate.coordinateX + currentX;\n      var coordianteY = lastTranslate.coordinateY + currentY;\n      var rotation = config.rotation(coordinateX, coordianteY, targetElement, config.maxRotation);\n\n      config.transform(targetElement, coordinateX, coordianteY, rotation);\n\n      eventEmitter.trigger('dragmove', {\n        offset: coordinateX,\n        target: targetElement,\n        throwDirection: computeDirection(coordinateX, coordianteY, config.allowedDirections),\n        throwOutConfidence: config.throwOutConfidence(coordinateX, coordianteY, targetElement)\n      });\n    };\n\n    /**\n     * Invoked every time the physics solver updates the Spring's value.\n     *\n     * @param {number} coordinateX\n     * @param {number} coordinateY\n     * @returns {undefined}\n     */\n    _onSpringUpdate = function _onSpringUpdate(coordinateX, coordinateY) {\n      var rotation = config.rotation(coordinateX, coordinateY, targetElement, config.maxRotation);\n\n      lastTranslate.coordinateX = coordinateX || 0;\n      lastTranslate.coordinateY = coordinateY || 0;\n\n      config.transform(targetElement, coordinateX, coordinateY, rotation);\n    };\n\n    /**\n     * @param {Card.THROW_IN|Card.THROW_OUT} where\n     * @param {number} fromX\n     * @param {number} fromY\n     * @param {Direction} [direction]\n     * @returns {undefined}\n     */\n    throwWhere = function throwWhere(where, fromX, fromY, direction) {\n      lastThrow.fromX = fromX;\n      lastThrow.fromY = fromY;\n\n      // If direction argument is not set, compute it from coordinates.\n      lastThrow.direction = direction || computeDirection(fromX, fromY, config.allowedDirections);\n\n      if (where === Card.THROW_IN) {\n        Card.appendToParent(targetElement);\n        springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);\n\n        eventEmitter.trigger('throwin', {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n      } else if (where === Card.THROW_OUT) {\n        Card.appendToParent(targetElement);\n        springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);\n\n        eventEmitter.trigger('throwout', {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n\n        /* Emits more accurate events about specific directions */\n        eventEmitter.trigger(throwDirectionToEventName[lastThrow.direction], {\n          target: targetElement,\n          throwDirection: lastThrow.direction\n        });\n      } else {\n        throw new Error('Invalid throw event.');\n      }\n    };\n  };\n\n  construct();\n\n  /**\n   * Alias\n   */\n  card.on = eventEmitter.on;\n  card.trigger = eventEmitter.trigger;\n\n  /**\n   * Throws a card into the stack from an arbitrary position.\n   *\n   * @param {number} coordinateX\n   * @param {number} coordinateY\n   * @param {Direction} [direction]\n   * @returns {undefined}\n   */\n  card.throwIn = function (coordinateX, coordinateY, direction) {\n    throwWhere(Card.THROW_IN, coordinateX, coordinateY, direction);\n  };\n\n  /**\n   * Throws a card out of the stack in the direction away from the original offset.\n   *\n   * @param {number} coordinateX\n   * @param {number} coordinateY\n   * @param {Direction} [direction]\n   * @returns {undefined}\n   */\n  card.throwOut = function (coordinateX, coordinateY, direction) {\n    throwWhere(Card.THROW_OUT, coordinateX, coordinateY, direction);\n  };\n\n  /**\n   * Unbinds all Hammer.Manager events.\n   * Removes the listeners from the physics simulation.\n   *\n   * @returns {undefined}\n   */\n  card.destroy = function () {\n    mc.destroy();\n    springThrowIn.destroy();\n    springThrowOut.destroy();\n\n    stack.destroyCard(card);\n  };\n\n  return card;\n};\n\n/**\n * Creates a configuration object.\n *\n * @param {Object} config\n * @returns {Object}\n */\nCard.makeConfig = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var defaultConfig = {\n    allowedDirections: [_Direction2.default.RIGHT, _Direction2.default.LEFT, _Direction2.default.UP],\n    isThrowOut: Card.isThrowOut,\n    maxRotation: 20,\n    maxThrowOutDistance: 500,\n    minThrowOutDistance: 400,\n    rotation: Card.rotation,\n    throwOutConfidence: Card.throwOutConfidence,\n    throwOutDistance: Card.throwOutDistance,\n    transform: Card.transform\n  };\n\n  return _lodash2.default.assign({}, defaultConfig, config);\n};\n\n/**\n * Uses CSS transform to translate element position and rotation.\n *\n * Invoked in the event of `dragmove` and every time the physics solver is triggered.\n *\n * @param {HTMLElement} element\n * @param {number} coordinateX Horizontal offset from the startDrag.\n * @param {number} coordinateY Vertical offset from the startDrag.\n * @param {number} rotation\n * @returns {undefined}\n */\nCard.transform = function (element, coordinateX, coordinateY, rotation) {\n  element.style[(0, _vendorPrefix2.default)('transform')] = 'translate3d(0, 0, 0) translate(' + coordinateX + 'px, ' + coordinateY + 'px) rotate(' + rotation + 'deg)';\n};\n\n/**\n * Append element to the parentNode.\n *\n * This makes the element first among the siblings. The reason for using\n * this as opposed to zIndex is to allow CSS selector :nth-child.\n *\n * Invoked in the event of mousedown.\n * Invoked when card is added to the stack.\n *\n * @param {HTMLElement} element The target element.\n * @returns {undefined}\n */\nCard.appendToParent = function (element) {\n  var parentNode = element.parentNode;\n  var siblings = (0, _utilities.elementChildren)(parentNode);\n  var targetIndex = siblings.indexOf(element);\n  var appended = targetIndex + 1 !== siblings.length;\n\n  if (appended) {\n    parentNode.removeChild(element);\n    parentNode.appendChild(element);\n  }\n\n  return appended;\n};\n\n/**\n * Prepend element to the parentNode.\n *\n * This makes the element last among the siblings.\n *\n * Invoked when card is added to the stack (when prepend is true).\n *\n * @param {HTMLElement} element The target element.\n * @return {undefined}\n */\nCard.prependToParent = function (element) {\n  var parentNode = element.parentNode;\n\n  parentNode.removeChild(element);\n  parentNode.insertBefore(element, parentNode.firstChild);\n};\n\n/**\n * Returns a value between 0 and 1 indicating the completeness of the throw out condition.\n *\n * Ration of the absolute distance from the original card position and element width.\n *\n * @param {number} xOffset Distance from the dragStart.\n * @param {number} yOffset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @returns {number}\n */\nCard.throwOutConfidence = function (xOffset, yOffset, element) {\n  var xConfidence = Math.min(Math.abs(xOffset) / element.offsetWidth, 1);\n  var yConfidence = Math.min(Math.abs(yOffset) / element.offsetHeight, 1);\n\n  return Math.max(xConfidence, yConfidence);\n};\n\n/**\n * Determines if element is being thrown out of the stack.\n *\n * Element is considered to be thrown out when throwOutConfidence is equal to 1.\n *\n * @param {number} xOffset Distance from the dragStart.\n * @param {number} yOffset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @param {number} throwOutConfidence config.throwOutConfidence\n * @returns {boolean}\n */\nCard.isThrowOut = function (xOffset, yOffset, element, throwOutConfidence) {\n  return throwOutConfidence === 1;\n};\n\n/**\n * Calculates a distances at which the card is thrown out of the stack.\n *\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nCard.throwOutDistance = function (min, max) {\n  return _lodash2.default.random(min, max);\n};\n\n/**\n * Calculates rotation based on the element x and y offset, element width and maxRotation variables.\n *\n * @param {number} coordinateX Horizontal offset from the startDrag.\n * @param {number} coordinateY Vertical offset from the startDrag.\n * @param {HTMLElement} element Element.\n * @param {number} maxRotation\n * @returns {number} Rotation angle expressed in degrees.\n */\nCard.rotation = function (coordinateX, coordinateY, element, maxRotation) {\n  var horizontalOffset = Math.min(Math.max(coordinateX / element.offsetWidth, -1), 1);\n  var verticalOffset = (coordinateY > 0 ? 1 : -1) * Math.min(Math.abs(coordinateY) / 100, 1);\n  var rotation = horizontalOffset * verticalOffset * maxRotation;\n\n  return rotation;\n};\n\nCard.THROW_IN = 'in';\nCard.THROW_OUT = 'out';\n\nexports.default = Card;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Direction = {\n  DOWN: Symbol('DOWN'),\n  INVALID: Symbol('INVALID'),\n  LEFT: Symbol('LEFT'),\n  RIGHT: Symbol('RIGHT'),\n  UP: Symbol('UP')\n};\n\nexports.default = Direction;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _rebound = require('rebound');\n\nvar _rebound2 = _interopRequireDefault(_rebound);\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Object} config Stack configuration.\n * @returns {Object} An instance of Stack object.\n */\nvar Stack = function Stack(config) {\n  var eventEmitter = void 0;\n  var index = void 0;\n  var springSystem = void 0;\n  var stack = void 0;\n\n  var construct = function construct() {\n    stack = {};\n    springSystem = new _rebound2.default.SpringSystem();\n    eventEmitter = (0, _sister2.default)();\n    index = [];\n  };\n\n  construct();\n\n  /**\n   * Get the configuration object.\n   *\n   * @returns {Object}\n   */\n  stack.getConfig = function () {\n    return config;\n  };\n\n  /**\n   * Get a singleton instance of the SpringSystem physics engine.\n   *\n   * @returns {Sister}\n   */\n  stack.getSpringSystem = function () {\n    return springSystem;\n  };\n\n  /**\n   * Proxy to the instance of the event emitter.\n   *\n   * @param {string} eventName\n   * @param {string} listener\n   * @returns {undefined}\n   */\n  stack.on = function (eventName, listener) {\n    eventEmitter.on(eventName, listener);\n  };\n\n  /**\n   * Creates an instance of Card and associates it with an element.\n   *\n   * @param {HTMLElement} element\n   * @param {boolean} prepend\n   * @returns {Card}\n   */\n  stack.createCard = function (element, prepend) {\n    var card = (0, _Card2.default)(stack, element, prepend);\n    var events = ['throwout', 'throwoutend', 'throwoutleft', 'throwoutright', 'throwoutup', 'throwoutdown', 'throwin', 'throwinend', 'dragstart', 'dragmove', 'dragend'];\n\n    // Proxy Card events to the Stack.\n    events.forEach(function (eventName) {\n      card.on(eventName, function (data) {\n        eventEmitter.trigger(eventName, data);\n      });\n    });\n\n    index.push({\n      card: card,\n      element: element\n    });\n\n    return card;\n  };\n\n  /**\n   * Returns an instance of Card associated with an element.\n   *\n   * @param {HTMLElement} element\n   * @returns {Card|null}\n   */\n  stack.getCard = function (element) {\n    var group = _lodash2.default.find(index, {\n      element: element\n    });\n\n    if (group) {\n      return group.card;\n    }\n\n    return null;\n  };\n\n  /**\n   * Remove an instance of Card from the stack index.\n   *\n   * @param {Card} card\n   * @returns {null}\n   */\n  stack.destroyCard = function (card) {\n    eventEmitter.trigger('destroyCard', card);\n\n    return _lodash2.default.remove(index, {\n      card: card\n    });\n  };\n\n  return stack;\n};\n\nexports.default = Stack;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stack = exports.Direction = exports.Card = undefined;\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nvar _Direction = require('./Direction');\n\nvar _Direction2 = _interopRequireDefault(_Direction);\n\nvar _Stack = require('./Stack');\n\nvar _Stack2 = _interopRequireDefault(_Stack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Card = _Card2.default;\nexports.Direction = _Direction2.default;\nexports.Stack = _Stack2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTouchDevice = exports.elementChildren = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Return direct children elements.\n *\n * @see http://stackoverflow.com/a/27102446/368691\n * @param {HTMLElement} element\n * @returns {Array}\n */\nvar elementChildren = function elementChildren(element) {\n  return _lodash2.default.filter(element.childNodes, {\n    nodeType: 1\n  });\n};\n\n/**\n * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\n * @returns {boolean}\n */\nvar isTouchDevice = function isTouchDevice() {\n  return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n};\n\nexports.elementChildren = elementChildren;\nexports.isTouchDevice = isTouchDevice;","'use strict';\n\nvar style = document.createElement('p').style,\n    prefixes = 'O ms Moz webkit'.split(' '),\n    hasPrefix = /^(o|ms|moz|webkit)/,\n    upper = /([A-Z])/g,\n    memo = {};\n\nfunction get(key){\n    return (key in memo) ? memo[key] : memo[key] = prefix(key);\n}\n\nfunction prefix(key){\n    var capitalizedKey = key.replace(/-([a-z])/g, function(s, match){\n            return match.toUpperCase();\n        }),\n        i = prefixes.length,\n        name;\n\n    if (style[capitalizedKey] !== undefined) return capitalizedKey;\n\n    capitalizedKey = capitalize(key);\n\n    while (i--) {\n        name = prefixes[i] + capitalizedKey;\n        if (style[name] !== undefined) return name;\n    }\n\n    throw new Error('unable to prefix ' + key);\n}\n\nfunction capitalize(str){\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction dashedPrefix(key){\n    var prefixedKey = get(key),\n        upper = /([A-Z])/g;\n\n    if (upper.test(prefixedKey)) {\n        prefixedKey = (hasPrefix.test(prefixedKey) ? '-' : '') + prefixedKey.replace(upper, '-$1');\n    }\n\n    return prefixedKey.toLowerCase();\n}\n\nmodule.exports = get;\nmodule.exports.dash = dashedPrefix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// ---------------------------------------------------------------------------------------------------------------------\r\n// FUNCTION FOR DOWNLOADING DATA LOCALLY; WITH BLOB\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nexport default (safe, ID) => {\r\n  const toSave = new Blob([JSON.stringify(safe, null, 1)]);\r\n  const day = new Date().toISOString().substr(0, 10);\r\n  // note: it's UTC time (so for germany add +1)\r\n  const time = new Date().toISOString().substr(11, 8);\r\n\r\n  const hiddenElement = document.createElement('a');\r\n  hiddenElement.href = window.URL.createObjectURL(toSave);\r\n  hiddenElement.download = `previc-${ID}-${day}-${time}.json`;\r\n  hiddenElement.click();\r\n};\r\n","import './previc.css';\r\nimport downloadData from './backend/downloadData.js';\r\nimport wordData from './backend/wordDataSelected.js';\r\n// https://github.com/gajus/swing\r\nimport * as Swing from 'swing';\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// INITIALIZE ELEMENTS/OBJECTS\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nconst devmode = false;\r\nconst subjID =\r\n  new URL(document.location.href).searchParams.get('ID') || 'testID';\r\nconst counter = document.getElementById('counter');\r\nconst buttonNo = document.getElementById('button-no');\r\nconst buttonYes = document.getElementById('button-yes');\r\n\r\n// An instance of the Stack is used to attach event listeners.\r\nconst stack = Swing.Stack();\r\n\r\n// get html element for UL for words\r\nconst cards = document.getElementById('stack');\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n//  FIND OUT AT WHICH TRIAL TO START\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nlet item = 0;\r\n\r\n// read in word data\r\nconst data = JSON.parse(wordData());\r\nconst trials = data.length;\r\n\r\ncounter.textContent = `${item + 1} von ${trials} Wörtern`;\r\n\r\ndata.splice(data.length - item, item);\r\n\r\nfor (let i = 0; i < data.length; i++) {\r\n  const newLI = document.createElement('li');\r\n  newLI.classList.add(`${data[i].pos}`);\r\n  newLI.appendChild(document.createTextNode(data[i].word));\r\n  cards.appendChild(newLI);\r\n}\r\n\r\n// prepare the cards in the stack for iteration\r\n[].forEach.call(\r\n  document.querySelectorAll('#stack li'),\r\n  function (targetElement) {\r\n    // add card element to the stack\r\n    stack.createCard(targetElement);\r\n\r\n    targetElement.classList.add('in-deck');\r\n  },\r\n);\r\n\r\nlet responseLog = {\r\n  // get ID out of URL parameter\r\n  meta: {\r\n    subjID: subjID,\r\n  },\r\n  data: [],\r\n};\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// FUNCTION FOR LOGGING RESPONSES\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nfunction logResponse() {\r\n  responseLog.data[item] = {\r\n    // get word\r\n    word: cards.lastElementChild.innerText,\r\n\r\n    // throwDirection returns e.g. Symbol(RIGHT)\r\n    // to get direction as string, get the description of the symbol\r\n    // score 0 if child doesn't know word; score 1 if child knows word\r\n    // score: e.throwDirection.description === 'LEFT' ? 0 : 1,\r\n    score: '',\r\n    pos: cards.lastElementChild.classList[0],\r\n    timestamp: new Date().toISOString(),\r\n    trial: item + 1,\r\n  };\r\n\r\n  // increase counter\r\n  item++;\r\n  counter.textContent = `${item + 1} von ${trials} Wörtern`;\r\n\r\n  // Remove card from stack and hide\r\n  cards.lastElementChild.classList.remove('in-deck');\r\n  cards.lastElementChild.remove();\r\n}\r\n\r\n// Add event listener for when a card is thrown out of the stack.\r\nstack.on('throwout', (e) => {\r\n  logResponse();\r\n  responseLog.data[item - 1].score =\r\n    e.throwDirection.description === 'LEFT' ? 0 : 1;\r\n\r\n  // if all words were shown, save responses\r\n  if (document.querySelectorAll('#stack li').length === 0) {\r\n    downloadData(responseLog, responseLog.meta.subjID);\r\n    setTimeout(() => (window.location.href = `./goodbye.html`), 1000);\r\n  }\r\n});\r\n\r\nconst handleNoClick = (e) => {\r\n  logResponse();\r\n  responseLog.data[item - 1].score = 0;\r\n\r\n  // if all words were shown, save responses\r\n  if (document.querySelectorAll('#stack li').length === 0) {\r\n    downloadData(responseLog, responseLog.meta.subjID);\r\n    setTimeout(() => (window.location.href = `./goodbye.html`), 1000);\r\n  }\r\n};\r\n\r\nconst handleYesClick = (e) => {\r\n  logResponse();\r\n  responseLog.data[item - 1].score = 1;\r\n\r\n  // if all words were shown, save responses\r\n  if (document.querySelectorAll('#stack li').length === 0) {\r\n    downloadData(responseLog, responseLog.meta.subjID);\r\n    setTimeout(() => (window.location.href = `./goodbye.html`), 1000);\r\n  }\r\n};\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// EVENTLISTENER\r\n// ---------------------------------------------------------------------------------------------------------------------\r\ndocument.addEventListener('keydown', (e) => {\r\n  e = e || window.event;\r\n  if (e.key === 'ArrowLeft') {\r\n    handleNoClick();\r\n  } else if (e.key === 'ArrowRight') {\r\n    handleYesClick();\r\n  }\r\n});\r\n\r\nbuttonNo.addEventListener('click', handleNoClick, { capture: true });\r\nbuttonYes.addEventListener('click', handleYesClick, { capture: true });\r\n","export default () => {\r\n  const data = `[\r\n    {\r\n        \"word\": \"Kummer\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Verkehr\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Firma\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Glastür\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Filmstar\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Magnet\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"minimal\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Ausnahme\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"einsam\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"nutzen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"stürzen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"geheimnisvoll\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Tourist\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"rudern\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"verlegen\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Million\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"System\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Tafel\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"unfair\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Frisur\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Virus\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"speziell\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Paris\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Ozean\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Zange\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"stehlen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Panik\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Versager\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Tonne\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"redselig\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Portion\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"exakt\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"hygienisch\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"rosten\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Kunde\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"zahm\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"tippen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Chef\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Anzahl\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"mager\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Kapitän\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Job\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Bedingung\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Betrieb\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Vitamin\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"saftig\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"auspressen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Komma\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Drama\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"höchstpersönlich\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Alternative\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Elch\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"fit\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"spurlos\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Programm\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Vorwand\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"wirken\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"anbieten\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"vorstellen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Scherz\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"studieren\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Markt\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Mode\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"weiblich\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Spende\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"verwesen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"besorgt\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"heiraten\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Temperatur\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"Nahrung\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"optimal\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"feige\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"verweigern\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"kündigen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"mutlos\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"widmen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"gelingen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"herstellen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Kontrolle\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"treu\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"spontan\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"sprachlos\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"allergisch\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"fremd\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"Formel\",\r\n        \"pos\": \"noun\"\r\n    },\r\n    {\r\n        \"word\": \"freiwillig\",\r\n        \"pos\": \"adjective\"\r\n    },\r\n    {\r\n        \"word\": \"nachweisen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"testen\",\r\n        \"pos\": \"verb\"\r\n    },\r\n    {\r\n        \"word\": \"Produkt\",\r\n        \"pos\": \"noun\"\r\n    }\r\n]`;\r\n  return data;\r\n};\r\n"],"names":["window","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","start","end","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","handlers","oldCssProps","inputClass","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","g","freeSelf","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","nodeUtil","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","n","baseTrim","string","trimmedEndIndex","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","map","size","overArg","transform","replaceHolders","placeholder","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","asciiToArray","charAt","unescapeHtmlChar","_","runInContext","uid","pick","String","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","symbol","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","baseSortBy","basePickBy","baseSet","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","arrLength","oldArray","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrStacked","arrValue","flatten","otherFunc","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","memoize","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","next","done","iteratorToArray","remainder","toLength","isBinary","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","nativeKeysIn","isProto","baseKeysIn","omit","CLONE_DEEP_FLAG","basePick","pickBy","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","substring","global","newEnd","unescape","uniqueId","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","getTime","vendors","suffix","raf","caf","queue","frameDuration","_now","cp","cancelled","handle","polyfill","requestAnimationFrame","cancelAnimationFrame","rebound","util","SpringSystem","looper","_springRegistry","_activeSprings","listeners","_idleSpringIndices","AnimationLooper","springSystem","_isIdle","_lastTimeMillis","setLooper","createSpring","tension","friction","springConfig","SpringConfig","DEFAULT_ORIGAMI_SPRING_CONFIG","fromOrigamiTensionAndFriction","createSpringWithConfig","createSpringWithBouncinessAndSpeed","bounciness","speed","fromBouncinessAndSpeed","spring","Spring","registerSpring","setSpringConfig","getIsIdle","getSpringById","getAllSprings","vals","getId","deregisterSpring","removeFirst","advance","len","systemShouldAdvance","idx","loop","currentTimeMillis","listener","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","run","activateSpring","springId","addListener","removeListener","removeAllListeners","_id","_ID","_springSystem","_currentState","PhysicsState","_previousState","_tempState","MAX_DELTA_TIME_SEC","SOLVER_TIMESTEP_SEC","_springConfig","_overshootClampingEnabled","_startValue","_endValue","_wasAtRest","_restSpeedThreshold","_displacementFromRestThreshold","_timeAccumulator","frames","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","setEndValue","endValue","isAtRest","onChange","onSpringEndStateChange","getEndValue","setVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","realDeltaTime","adjustedDeltaTime","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dvdt","tempPosition","tempVelocity","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","wasAtRest","alpha","getListeners","newListener","listenerToRemove","currentValueIsApproximately","_this","_run","onFrame","SimulationLooper","timestep","running","SteppingSimulationLooper","OrigamiValueConverter","tensionFromOrigamiValue","oValue","origamiValueFromTension","frictionFromOrigamiValue","origamiFromFriction","BouncyConversion","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","linearInterpolation","b3Friction1","pow","b3Friction2","b3Friction3","bouncyConversion","coastingConfigWithOrigamiFriction","colorCache","hexToRGB","color","parts","ret","r","rgbToHex","_onFrame","MathUtil","mapValueInRange","fromLow","fromHigh","toLow","toHigh","interpolateColor","startColor","endColor","asRGB","degreesToRadians","deg","radiansToDegrees","rad","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","title","setImmediate","Sister","sister","unshift","trigger","_lodash2","_interopRequireDefault","_sister2","_hammerjs2","_rebound2","_vendorPrefix2","_raf2","_Direction2","_utilities","__esModule","default","computeDirection","fromX","fromY","allowedDirections","isHorizontal","isLeftDirection","LEFT","RIGHT","isUpDirection","UP","DOWN","INVALID","Card","targetElement","prepend","dragging","throwOutDistance","throwWhere","card","config","currentX","currentY","doMove","eventEmitter","isDraging","isPanning","lastThrow","lastTranslate","lastX","lastY","mc","_onSpringUpdate","springThrowIn","springThrowOut","throwDirectionToEventName","appendedDuringMouseDown","makeConfig","getConfig","getSpringSystem","coordinateX","coordinateY","minThrowOutDistance","maxThrowOutDistance","prependToParent","appendToParent","animation","isThrowOut","throwOutConfidence","throwOut","throwIn","isTouchDevice","click","coordianteX","coordianteY","directionFactor","maxRotation","throwDirection","where","THROW_IN","THROW_OUT","destroyCard","defaultConfig","siblings","elementChildren","appended","removeChild","appendChild","insertBefore","firstChild","xOffset","yOffset","xConfidence","offsetWidth","yConfidence","offsetHeight","Direction","_Card2","eventName","createCard","getCard","_Stack2","childNodes","msMaxTouchPoints","prefixes","hasPrefix","memo","capitalizedKey","dash","prefixedKey","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","globalThis","nmd","children","safe","ID","toSave","Blob","JSON","stringify","day","toISOString","substr","hiddenElement","href","URL","createObjectURL","download","subjID","location","searchParams","counter","getElementById","buttonNo","buttonYes","cards","parse","trials","textContent","newLI","classList","pos","createTextNode","querySelectorAll","responseLog","meta","logResponse","lastElementChild","innerText","score","timestamp","trial","description","downloadData","handleNoClick","handleYesClick","capture"],"sourceRoot":""}